import { FrameInterface } from "./schema-DWmx8lgm.js";
import { AutofixRunState, Event, Issue } from "./types-DRywojVB.js";
import { SentryApiService } from "./client-DLkUGS7r.js";
import { z } from "zod";

//#region src/internal/formatting.d.ts

/**
 * Formats a stack frame into a language-specific string representation.
 * Different languages have different conventions for displaying stack traces.
 *
 * @param frame - The stack frame to format
 * @param frameIndex - Optional frame index for languages that display frame numbers
 * @param platform - Optional platform hint for language detection fallback
 * @returns Formatted stack frame string
 */
declare function formatFrameHeader(frame: z.infer<typeof FrameInterface>, frameIndex?: number, platform?: string | null): string;
/**
 * Formats a Sentry event into a structured markdown output.
 * Includes error messages, stack traces, request info, and contextual data.
 *
 * @param event - The Sentry event to format
 * @returns Formatted markdown string
 */
declare function formatEventOutput(event: Event): string;
/**
 * Formats a Sentry issue with its latest event into comprehensive markdown output.
 * Includes issue metadata, event details, and usage instructions.
 *
 * @param params - Object containing organization slug, issue, event, and API service
 * @returns Formatted markdown string with complete issue information
 */
declare function formatIssueOutput({
  organizationSlug,
  issue,
  event,
  apiService,
  autofixState
}: {
  organizationSlug: string;
  issue: Issue;
  event: Event;
  apiService: SentryApiService;
  autofixState?: AutofixRunState;
}): string;
//# sourceMappingURL=formatting.d.ts.map
//#endregion
export { formatEventOutput, formatFrameHeader, formatIssueOutput };
//# sourceMappingURL=formatting-C3qu84cm.d.ts.map