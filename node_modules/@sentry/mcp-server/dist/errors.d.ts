//#region src/errors.d.ts
/**
 * Error thrown when user input validation fails.
 * These errors should be returned to the user directly without logging to Sentry.
 */
declare class UserInputError extends Error {
  constructor(message: string, options?: ErrorOptions);
}
/**
 * Error thrown when configuration is invalid or missing.
 * These errors should be returned to the user directly without logging to Sentry.
 * Typically used for environment configuration issues, connection settings, etc.
 */
declare class ConfigurationError extends Error {
  constructor(message: string, options?: ErrorOptions);
}
//# sourceMappingURL=errors.d.ts.map
//#endregion
export { ConfigurationError, UserInputError };
//# sourceMappingURL=errors.d.ts.map