import { UserInputError } from "./errors-D_R568zP.js";
import { defineTool } from "./defineTool-77H4nSna.js";
import { apiServiceFromContext } from "./api-utils-BlUSO8xh.js";
import { ParamOrganizationSlug, ParamRegionUrl } from "./schema-DMfkTR1l.js";
import { setTag } from "@sentry/core";

//#region src/tools/find-projects.ts
var find_projects_default = defineTool({
	name: "find_projects",
	description: [
		"Find projects in Sentry.",
		"",
		"Use this tool when you need to:",
		"- View all projects in a Sentry organization",
		"- Find a project's slug to aid other tool requests"
	].join("\n"),
	inputSchema: {
		organizationSlug: ParamOrganizationSlug,
		regionUrl: ParamRegionUrl.optional()
	},
	async handler(params, context) {
		const apiService = apiServiceFromContext(context, { regionUrl: params.regionUrl });
		const organizationSlug = params.organizationSlug;
		if (!organizationSlug) throw new UserInputError("Organization slug is required. Please provide an organizationSlug parameter.");
		setTag("organization.slug", organizationSlug);
		const projects = await apiService.listProjects(organizationSlug);
		let output = `# Projects in **${organizationSlug}**\n\n`;
		if (projects.length === 0) {
			output += "No projects found.\n";
			return output;
		}
		output += projects.map((project) => `- **${project.slug}**\n`).join("");
		return output;
	}
});

//#endregion
export { find_projects_default };
//# sourceMappingURL=find-projects-CZCMck_0.js.map