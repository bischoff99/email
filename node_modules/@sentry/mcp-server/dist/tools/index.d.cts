import "../promptDefinitions-CVHtYaj8.cjs";
import "../types-BV-G5sBp.cjs";
import { ToolConfig } from "../types-aOEJ0KgQ.cjs";
import * as zod22 from "zod";

//#region src/tools/index.d.ts
declare const _default: {
  readonly whoami: ToolConfig<{}>;
  readonly find_organizations: ToolConfig<{}>;
  readonly find_teams: ToolConfig<{
    organizationSlug: zod22.ZodString;
    regionUrl: zod22.ZodOptional<zod22.ZodEffects<zod22.ZodString, string, string>>;
  }>;
  readonly find_projects: ToolConfig<{
    organizationSlug: zod22.ZodString;
    regionUrl: zod22.ZodOptional<zod22.ZodEffects<zod22.ZodString, string, string>>;
  }>;
  readonly find_releases: ToolConfig<{
    organizationSlug: zod22.ZodString;
    regionUrl: zod22.ZodOptional<zod22.ZodEffects<zod22.ZodString, string, string>>;
    projectSlug: zod22.ZodOptional<zod22.ZodString>;
    query: zod22.ZodOptional<zod22.ZodString>;
  }>;
  readonly get_issue_details: ToolConfig<{
    organizationSlug: zod22.ZodOptional<zod22.ZodString>;
    regionUrl: zod22.ZodOptional<zod22.ZodEffects<zod22.ZodString, string, string>>;
    issueId: zod22.ZodOptional<zod22.ZodString>;
    eventId: zod22.ZodOptional<zod22.ZodString>;
    issueUrl: zod22.ZodOptional<zod22.ZodString>;
  }>;
  readonly get_event_attachment: ToolConfig<{
    organizationSlug: zod22.ZodString;
    projectSlug: zod22.ZodString;
    eventId: zod22.ZodString;
    attachmentId: zod22.ZodOptional<zod22.ZodString>;
    regionUrl: zod22.ZodOptional<zod22.ZodEffects<zod22.ZodString, string, string>>;
  }>;
  readonly update_issue: ToolConfig<{
    organizationSlug: zod22.ZodOptional<zod22.ZodString>;
    regionUrl: zod22.ZodOptional<zod22.ZodEffects<zod22.ZodString, string, string>>;
    issueId: zod22.ZodOptional<zod22.ZodString>;
    issueUrl: zod22.ZodOptional<zod22.ZodString>;
    status: zod22.ZodOptional<zod22.ZodEnum<["resolved", "resolvedInNextRelease", "unresolved", "ignored"]>>;
    assignedTo: zod22.ZodOptional<zod22.ZodString>;
  }>;
  readonly search_events: ToolConfig<{
    organizationSlug: zod22.ZodString;
    naturalLanguageQuery: zod22.ZodString;
    projectSlug: zod22.ZodOptional<zod22.ZodString>;
    regionUrl: zod22.ZodOptional<zod22.ZodEffects<zod22.ZodString, string, string>>;
    limit: zod22.ZodDefault<zod22.ZodOptional<zod22.ZodNumber>>;
    includeExplanation: zod22.ZodDefault<zod22.ZodOptional<zod22.ZodBoolean>>;
  }>;
  readonly create_team: ToolConfig<{
    organizationSlug: zod22.ZodString;
    regionUrl: zod22.ZodOptional<zod22.ZodEffects<zod22.ZodString, string, string>>;
    name: zod22.ZodString;
  }>;
  readonly create_project: ToolConfig<{
    organizationSlug: zod22.ZodString;
    regionUrl: zod22.ZodOptional<zod22.ZodEffects<zod22.ZodString, string, string>>;
    teamSlug: zod22.ZodString;
    name: zod22.ZodString;
    platform: zod22.ZodOptional<zod22.ZodString>;
  }>;
  readonly update_project: ToolConfig<{
    organizationSlug: zod22.ZodString;
    regionUrl: zod22.ZodOptional<zod22.ZodEffects<zod22.ZodString, string, string>>;
    projectSlug: zod22.ZodString;
    name: zod22.ZodOptional<zod22.ZodString>;
    slug: zod22.ZodOptional<zod22.ZodString>;
    platform: zod22.ZodOptional<zod22.ZodString>;
    teamSlug: zod22.ZodOptional<zod22.ZodString>;
  }>;
  readonly create_dsn: ToolConfig<{
    organizationSlug: zod22.ZodString;
    regionUrl: zod22.ZodOptional<zod22.ZodEffects<zod22.ZodString, string, string>>;
    projectSlug: zod22.ZodString;
    name: zod22.ZodString;
  }>;
  readonly find_dsns: ToolConfig<{
    organizationSlug: zod22.ZodString;
    regionUrl: zod22.ZodOptional<zod22.ZodEffects<zod22.ZodString, string, string>>;
    projectSlug: zod22.ZodString;
  }>;
  readonly analyze_issue_with_seer: ToolConfig<{
    organizationSlug: zod22.ZodOptional<zod22.ZodString>;
    regionUrl: zod22.ZodOptional<zod22.ZodEffects<zod22.ZodString, string, string>>;
    issueId: zod22.ZodOptional<zod22.ZodString>;
    issueUrl: zod22.ZodOptional<zod22.ZodString>;
    instruction: zod22.ZodOptional<zod22.ZodString>;
  }>;
  readonly search_docs: ToolConfig<{
    query: zod22.ZodString;
    maxResults: zod22.ZodOptional<zod22.ZodDefault<zod22.ZodNumber>>;
    guide: zod22.ZodOptional<zod22.ZodEnum<["javascript", "python", "java", "dotnet", "go", "php", "ruby", "android", "apple", "unity", "unreal", "rust", "elixir", "kotlin", "native", "dart", "godot", "nintendo-switch", "playstation", "powershell", "react-native", "xbox", ...string[]]>>;
  }>;
  readonly get_doc: ToolConfig<{
    path: zod22.ZodString;
  }>;
  readonly search_issues: ToolConfig<{
    organizationSlug: zod22.ZodString;
    naturalLanguageQuery: zod22.ZodString;
    projectSlugOrId: zod22.ZodOptional<zod22.ZodString>;
    regionUrl: zod22.ZodOptional<zod22.ZodEffects<zod22.ZodString, string, string>>;
    limit: zod22.ZodDefault<zod22.ZodOptional<zod22.ZodNumber>>;
    includeExplanation: zod22.ZodDefault<zod22.ZodOptional<zod22.ZodBoolean>>;
  }>;
};
type ToolName = keyof typeof _default;
//# sourceMappingURL=index.d.ts.map

//#endregion
export { ToolName, _default as default };
//# sourceMappingURL=index.d.cts.map