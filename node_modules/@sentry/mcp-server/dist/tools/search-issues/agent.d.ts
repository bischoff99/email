import "../../schema-DWmx8lgm.js";
import "../../types-DRywojVB.js";
import { SentryApiService } from "../../client-DLkUGS7r.js";
import "../../index-DE1muTvw.js";
import { z } from "zod";

//#region src/tools/search-issues/agent.d.ts
declare const IssueQuerySchema: z.ZodObject<{
  query: z.ZodString;
  sort: z.ZodNullable<z.ZodEnum<["date", "freq", "new", "user"]>>;
  explanation: z.ZodNullable<z.ZodString>;
}, "strip", z.ZodTypeAny, {
  sort: "date" | "user" | "new" | "freq" | null;
  query: string;
  explanation: string | null;
}, {
  sort: "date" | "user" | "new" | "freq" | null;
  query: string;
  explanation: string | null;
}>;
type IssueQuery = z.infer<typeof IssueQuerySchema>;
/**
 * Translate natural language query to Sentry issue search syntax
 */
declare function translateQuery(params: {
  naturalLanguageQuery: string;
  organizationSlug: string;
  projectSlugOrId?: string;
  projectId?: string;
}, apiService: SentryApiService): Promise<IssueQuery>;
//#endregion
export { IssueQuery, translateQuery };
//# sourceMappingURL=agent.d.ts.map