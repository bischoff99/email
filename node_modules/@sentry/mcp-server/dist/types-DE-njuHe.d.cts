import { AssignedToSchema, AutofixRunSchema, AutofixRunStateSchema, ClientKeyListSchema, ClientKeySchema, EventAttachmentListSchema, EventAttachmentSchema, EventSchema, IssueListSchema, IssueSchema, OrganizationListSchema, OrganizationSchema, ProjectListSchema, ProjectSchema, ReleaseListSchema, ReleaseSchema, TagListSchema, TagSchema, TeamListSchema, TeamSchema, UserSchema } from "./schema-xbTf44Hn.cjs";
import { z } from "zod";

//#region src/api-client/types.d.ts

type User = z.infer<typeof UserSchema>;
type Organization = z.infer<typeof OrganizationSchema>;
type Team = z.infer<typeof TeamSchema>;
type Project = z.infer<typeof ProjectSchema>;
type ClientKey = z.infer<typeof ClientKeySchema>;
type Release = z.infer<typeof ReleaseSchema>;
type Issue = z.infer<typeof IssueSchema>;
type Event = z.infer<typeof EventSchema>;
type EventAttachment = z.infer<typeof EventAttachmentSchema>;
type Tag = z.infer<typeof TagSchema>;
type AutofixRun = z.infer<typeof AutofixRunSchema>;
type AutofixRunState = z.infer<typeof AutofixRunStateSchema>;
type AssignedTo = z.infer<typeof AssignedToSchema>;
type OrganizationList = z.infer<typeof OrganizationListSchema>;
type TeamList = z.infer<typeof TeamListSchema>;
type ProjectList = z.infer<typeof ProjectListSchema>;
type ReleaseList = z.infer<typeof ReleaseListSchema>;
type IssueList = z.infer<typeof IssueListSchema>;
type EventAttachmentList = z.infer<typeof EventAttachmentListSchema>;
type TagList = z.infer<typeof TagListSchema>;
type ClientKeyList = z.infer<typeof ClientKeyListSchema>;
//# sourceMappingURL=types.d.ts.map

//#endregion
export { AssignedTo, AutofixRun, AutofixRunState, ClientKey, ClientKeyList, Event, EventAttachment, EventAttachmentList, Issue, IssueList, Organization, OrganizationList, Project, ProjectList, Release, ReleaseList, Tag, TagList, Team, TeamList, User };
//# sourceMappingURL=types-DE-njuHe.d.cts.map