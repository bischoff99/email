{"version":3,"file":"index.js","names":["accessToken: string | undefined","mcpUrl: string | undefined","sentryDsn: string | undefined"],"sources":["../src/index.ts"],"sourcesContent":["#!/usr/bin/env node\n\n/**\n * Main CLI entry point for the Sentry MCP server.\n *\n * Handles command-line argument parsing, environment configuration, Sentry\n * initialization, and starts the MCP server with stdio transport. Requires\n * a Sentry access token and optionally accepts host and DSN configuration.\n *\n * @example CLI Usage\n * ```bash\n * npx @sentry/mcp-server --access-token=TOKEN --host=sentry.io\n * npx @sentry/mcp-server --access-token=TOKEN --url=https://sentry.example.com\n * ```\n */\n\nimport { McpServer } from \"@modelcontextprotocol/sdk/server/mcp.js\";\nimport { startStdio } from \"./transports/stdio\";\nimport * as Sentry from \"@sentry/node\";\nimport { LIB_VERSION } from \"./version\";\nimport {\n  validateSentryHost,\n  validateAndParseSentryUrl,\n} from \"./utils/url-utils\";\n\nlet accessToken: string | undefined = process.env.SENTRY_ACCESS_TOKEN;\nlet sentryHost = \"sentry.io\"; // Default hostname\nlet mcpUrl: string | undefined =\n  process.env.MCP_URL || \"https://mcp.sentry.dev\";\nlet sentryDsn: string | undefined =\n  process.env.SENTRY_DSN || process.env.DEFAULT_SENTRY_DSN;\n\n// Set initial host from environment variables (SENTRY_URL takes precedence)\nif (process.env.SENTRY_URL) {\n  sentryHost = validateAndParseSentryUrl(process.env.SENTRY_URL);\n} else if (process.env.SENTRY_HOST) {\n  validateSentryHost(process.env.SENTRY_HOST);\n  sentryHost = process.env.SENTRY_HOST;\n}\n\nconst packageName = \"@sentry/mcp-server\";\n\nfunction getUsage(): string {\n  return `Usage: ${packageName} --access-token=<token> [--host=<host>|--url=<url>] [--mcp-url=<url>] [--sentry-dsn=<dsn>]`;\n}\n\nfor (const arg of process.argv.slice(2)) {\n  if (arg === \"--version\" || arg === \"-v\") {\n    console.log(`${packageName} ${LIB_VERSION}`);\n    process.exit(0);\n  }\n  if (arg.startsWith(\"--access-token=\")) {\n    accessToken = arg.split(\"=\")[1];\n  } else if (arg.startsWith(\"--host=\")) {\n    sentryHost = arg.split(\"=\")[1];\n    validateSentryHost(sentryHost);\n  } else if (arg.startsWith(\"--url=\")) {\n    const url = arg.split(\"=\")[1];\n    sentryHost = validateAndParseSentryUrl(url);\n  } else if (arg.startsWith(\"--mcp-url=\")) {\n    mcpUrl = arg.split(\"=\")[1];\n  } else if (arg.startsWith(\"--sentry-dsn=\")) {\n    sentryDsn = arg.split(\"=\")[1];\n  } else {\n    console.error(\"Error: Invalid argument:\", arg);\n    console.error(getUsage());\n    process.exit(1);\n  }\n}\n\nif (!accessToken) {\n  console.error(\n    \"Error: No access token was provided. Pass one with `--access-token` or via `SENTRY_ACCESS_TOKEN`.\",\n  );\n  console.error(getUsage());\n  process.exit(1);\n}\n\n// Check for OpenAI API key and warn if missing\nif (!process.env.OPENAI_API_KEY) {\n  console.warn(\"Warning: OPENAI_API_KEY environment variable is not set.\");\n  console.warn(\"The following AI-powered search tools will be unavailable:\");\n  console.warn(\"  - search_events (natural language event search)\");\n  console.warn(\"  - search_issues (natural language issue search)\");\n  console.warn(\n    \"All other tools will function normally. To enable AI-powered search, set OPENAI_API_KEY.\",\n  );\n  console.warn(\"\");\n}\n\nSentry.init({\n  dsn: sentryDsn,\n  sendDefaultPii: true,\n  tracesSampleRate: 1,\n  initialScope: {\n    tags: {\n      \"mcp.server_version\": LIB_VERSION,\n      \"mcp.transport\": \"stdio\",\n      \"sentry.host\": sentryHost,\n      \"mcp.mcp-url\": mcpUrl,\n    },\n  },\n  release: process.env.SENTRY_RELEASE,\n  integrations: [\n    Sentry.consoleLoggingIntegration(),\n    Sentry.zodErrorsIntegration(),\n    Sentry.vercelAIIntegration({\n      recordInputs: true,\n      recordOutputs: true,\n    }),\n  ],\n  environment:\n    process.env.SENTRY_ENVIRONMENT ??\n    (process.env.NODE_ENV !== \"production\" ? \"development\" : \"production\"),\n});\n\nconst server = new McpServer({\n  name: \"Sentry MCP\",\n  version: LIB_VERSION,\n});\n\nconst instrumentedServer = Sentry.wrapMcpServerWithSentry(server);\n\nconst SENTRY_TIMEOUT = 5000; // 5 seconds\n\n// XXX: we could do what we're doing in routes/auth.ts and pass the context\n// identically, but we don't really need userId and userName yet\nstartStdio(instrumentedServer, {\n  accessToken,\n  organizationSlug: null,\n  sentryHost,\n  mcpUrl,\n}).catch((err) => {\n  console.error(\"Server error:\", err);\n  // ensure we've flushed all events\n  Sentry.flush(SENTRY_TIMEOUT);\n  process.exit(1);\n});\n\n// ensure we've flushed all events\nSentry.flush(SENTRY_TIMEOUT);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,IAAIA,cAAkC,QAAQ,IAAI;AAClD,IAAI,aAAa;AACjB,IAAIC,SACF,QAAQ,IAAI,WAAW;AACzB,IAAIC,YACF,QAAQ,IAAI;AAGd,IAAI,QAAQ,IAAI,WACd,cAAa,0BAA0B,QAAQ,IAAI,WAAW;SACrD,QAAQ,IAAI,aAAa;AAClC,oBAAmB,QAAQ,IAAI,YAAY;AAC3C,cAAa,QAAQ,IAAI;AAC1B;AAED,MAAM,cAAc;AAEpB,SAAS,WAAmB;AAC1B,SAAQ,SAAS,YAAY;AAC9B;AAED,KAAK,MAAM,OAAO,QAAQ,KAAK,MAAM,EAAE,EAAE;AACvC,KAAI,QAAQ,eAAe,QAAQ,MAAM;AACvC,UAAQ,OAAO,YAAY,GAAG,cAAc;AAC5C,UAAQ,KAAK,EAAE;CAChB;AACD,KAAI,IAAI,WAAW,kBAAkB,CACnC,eAAc,IAAI,MAAM,IAAI,CAAC;UACpB,IAAI,WAAW,UAAU,EAAE;AACpC,eAAa,IAAI,MAAM,IAAI,CAAC;AAC5B,qBAAmB,WAAW;CAC/B,WAAU,IAAI,WAAW,SAAS,EAAE;EACnC,MAAM,MAAM,IAAI,MAAM,IAAI,CAAC;AAC3B,eAAa,0BAA0B,IAAI;CAC5C,WAAU,IAAI,WAAW,aAAa,CACrC,UAAS,IAAI,MAAM,IAAI,CAAC;UACf,IAAI,WAAW,gBAAgB,CACxC,aAAY,IAAI,MAAM,IAAI,CAAC;MACtB;AACL,UAAQ,MAAM,4BAA4B,IAAI;AAC9C,UAAQ,MAAM,UAAU,CAAC;AACzB,UAAQ,KAAK,EAAE;CAChB;AACF;AAED,KAAK,aAAa;AAChB,SAAQ,MACN,oGACD;AACD,SAAQ,MAAM,UAAU,CAAC;AACzB,SAAQ,KAAK,EAAE;AAChB;AAGD,KAAK,QAAQ,IAAI,gBAAgB;AAC/B,SAAQ,KAAK,2DAA2D;AACxE,SAAQ,KAAK,6DAA6D;AAC1E,SAAQ,KAAK,oDAAoD;AACjE,SAAQ,KAAK,oDAAoD;AACjE,SAAQ,KACN,2FACD;AACD,SAAQ,KAAK,GAAG;AACjB;AAED,OAAO,KAAK;CACV,KAAK;CACL,gBAAgB;CAChB,kBAAkB;CAClB,cAAc,EACZ,MAAM;EACJ,sBAAsB;EACtB,iBAAiB;EACjB,eAAe;EACf,eAAe;CAChB,EACF;CACD;CACA,cAAc;EACZ,OAAO,2BAA2B;EAClC,OAAO,sBAAsB;EAC7B,OAAO,oBAAoB;GACzB,cAAc;GACd,eAAe;EAChB,EAAC;CACH;CACD;AAGD,EAAC;AAEF,MAAM,SAAS,IAAI,UAAU;CAC3B,MAAM;CACN,SAAS;AACV;AAED,MAAM,qBAAqB,OAAO,wBAAwB,OAAO;AAEjE,MAAM,iBAAiB;AAIvB,WAAW,oBAAoB;CAC7B;CACA,kBAAkB;CAClB;CACA;AACD,EAAC,CAAC,MAAM,CAAC,QAAQ;AAChB,SAAQ,MAAM,iBAAiB,IAAI;AAEnC,QAAO,MAAM,eAAe;AAC5B,SAAQ,KAAK,EAAE;AAChB,EAAC;AAGF,OAAO,MAAM,eAAe"}