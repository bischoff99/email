//#region src/errors.ts
/**
* Error thrown when user input validation fails.
* These errors should be returned to the user directly without logging to Sentry.
*/
var UserInputError = class extends Error {
	constructor(message, options) {
		super(message, options);
		this.name = "UserInputError";
	}
};
/**
* Error thrown when configuration is invalid or missing.
* These errors should be returned to the user directly without logging to Sentry.
* Typically used for environment configuration issues, connection settings, etc.
*/
var ConfigurationError = class extends Error {
	constructor(message, options) {
		super(message, options);
		this.name = "ConfigurationError";
	}
};

//#endregion
export { ConfigurationError, UserInputError };
//# sourceMappingURL=errors-D_R568zP.js.map