{"version":3,"file":"create-team-D0dUl7Zo.js","names":["context: ServerContext"],"sources":["../src/tools/create-team.ts"],"sourcesContent":["import { z } from \"zod\";\nimport { setTag } from \"@sentry/core\";\nimport { defineTool } from \"./utils/defineTool\";\nimport { apiServiceFromContext } from \"./utils/api-utils\";\nimport type { ServerContext } from \"../types\";\nimport { ParamOrganizationSlug, ParamRegionUrl } from \"../schema\";\n\nexport default defineTool({\n  name: \"create_team\",\n  description: [\n    \"Create a new team in Sentry.\",\n    \"\",\n    \"üîç USE THIS TOOL WHEN USERS WANT TO:\",\n    \"- 'Create a new team'\",\n    \"- 'Set up a team called [X]'\",\n    \"- 'I need a team for my project'\",\n    \"\",\n    \"Be careful when using this tool!\",\n    \"\",\n    \"<examples>\",\n    \"### Create a new team\",\n    \"```\",\n    \"create_team(organizationSlug='my-organization', name='the-goats')\",\n    \"```\",\n    \"</examples>\",\n    \"\",\n    \"<hints>\",\n    \"- If any parameter is ambiguous, you should clarify with the user what they meant.\",\n    \"</hints>\",\n  ].join(\"\\n\"),\n  inputSchema: {\n    organizationSlug: ParamOrganizationSlug,\n    regionUrl: ParamRegionUrl.optional(),\n    name: z.string().trim().describe(\"The name of the team to create.\"),\n  },\n  async handler(params, context: ServerContext) {\n    const apiService = apiServiceFromContext(context, {\n      regionUrl: params.regionUrl,\n    });\n    const organizationSlug = params.organizationSlug;\n\n    setTag(\"organization.slug\", organizationSlug);\n\n    const team = await apiService.createTeam({\n      organizationSlug,\n      name: params.name,\n    });\n    let output = `# New Team in **${organizationSlug}**\\n\\n`;\n    output += `**ID**: ${team.id}\\n`;\n    output += `**Slug**: ${team.slug}\\n`;\n    output += `**Name**: ${team.name}\\n`;\n    output += \"# Using this information\\n\\n\";\n    output += `- You should always inform the user of the Team Slug value.\\n`;\n    return output;\n  },\n});\n"],"mappings":";;;;;;;AAOA,0BAAe,WAAW;CACxB,MAAM;CACN,aAAa;EACX;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;CACD,EAAC,KAAK,KAAK;CACZ,aAAa;EACX,kBAAkB;EAClB,WAAW,eAAe,UAAU;EACpC,MAAM,EAAE,QAAQ,CAAC,MAAM,CAAC,SAAS,kCAAkC;CACpE;CACD,MAAM,QAAQ,QAAQA,SAAwB;EAC5C,MAAM,aAAa,sBAAsB,SAAS,EAChD,WAAW,OAAO,UACnB,EAAC;EACF,MAAM,mBAAmB,OAAO;AAEhC,SAAO,qBAAqB,iBAAiB;EAE7C,MAAM,OAAO,MAAM,WAAW,WAAW;GACvC;GACA,MAAM,OAAO;EACd,EAAC;EACF,IAAI,UAAU,kBAAkB,iBAAiB;AACjD,aAAW,UAAU,KAAK,GAAG;AAC7B,aAAW,YAAY,KAAK,KAAK;AACjC,aAAW,YAAY,KAAK,KAAK;AACjC,YAAU;AACV,aAAW;AACX,SAAO;CACR;AACF,EAAC"}