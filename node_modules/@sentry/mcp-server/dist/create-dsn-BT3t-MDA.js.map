{"version":3,"file":"create-dsn-BT3t-MDA.js","names":["context: ServerContext"],"sources":["../src/tools/create-dsn.ts"],"sourcesContent":["import { z } from \"zod\";\nimport { setTag } from \"@sentry/core\";\nimport { defineTool } from \"./utils/defineTool\";\nimport { apiServiceFromContext } from \"./utils/api-utils\";\nimport type { ServerContext } from \"../types\";\nimport {\n  ParamOrganizationSlug,\n  ParamRegionUrl,\n  ParamProjectSlug,\n} from \"../schema\";\n\nexport default defineTool({\n  name: \"create_dsn\",\n  description: [\n    \"Create an additional DSN for an EXISTING project.\",\n    \"\",\n    \"üîç USE THIS TOOL WHEN:\",\n    \"- Project already exists and needs additional DSN\",\n    \"- 'Create another DSN for project X'\",\n    \"- 'I need a production DSN for existing project'\",\n    \"\",\n    \"‚ùå DO NOT USE for new projects (use create_project instead)\",\n    \"\",\n    \"Be careful when using this tool!\",\n    \"\",\n    \"<examples>\",\n    \"### Create additional DSN for existing project\",\n    \"```\",\n    \"create_dsn(organizationSlug='my-organization', projectSlug='my-project', name='Production')\",\n    \"```\",\n    \"</examples>\",\n    \"\",\n    \"<hints>\",\n    \"- If the user passes a parameter in the form of name/otherName, its likely in the format of <organizationSlug>/<projectSlug>.\",\n    \"- If any parameter is ambiguous, you should clarify with the user what they meant.\",\n    \"</hints>\",\n  ].join(\"\\n\"),\n  inputSchema: {\n    organizationSlug: ParamOrganizationSlug,\n    regionUrl: ParamRegionUrl.optional(),\n    projectSlug: ParamProjectSlug,\n    name: z\n      .string()\n      .trim()\n      .describe(\"The name of the DSN to create, for example 'Production'.\"),\n  },\n  async handler(params, context: ServerContext) {\n    const apiService = apiServiceFromContext(context, {\n      regionUrl: params.regionUrl,\n    });\n    const organizationSlug = params.organizationSlug;\n\n    setTag(\"organization.slug\", organizationSlug);\n    setTag(\"project.slug\", params.projectSlug);\n\n    const clientKey = await apiService.createClientKey({\n      organizationSlug,\n      projectSlug: params.projectSlug,\n      name: params.name,\n    });\n    let output = `# New DSN in **${organizationSlug}/${params.projectSlug}**\\n\\n`;\n    output += `**DSN**: ${clientKey.dsn.public}\\n`;\n    output += `**Name**: ${clientKey.name}\\n\\n`;\n    output += \"# Using this information\\n\\n\";\n    output +=\n      \"- The `SENTRY_DSN` value is a URL that you can use to initialize Sentry's SDKs.\\n\";\n    return output;\n  },\n});\n"],"mappings":";;;;;;;AAWA,yBAAe,WAAW;CACxB,MAAM;CACN,aAAa;EACX;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;CACD,EAAC,KAAK,KAAK;CACZ,aAAa;EACX,kBAAkB;EAClB,WAAW,eAAe,UAAU;EACpC,aAAa;EACb,MAAM,EACH,QAAQ,CACR,MAAM,CACN,SAAS,2DAA2D;CACxE;CACD,MAAM,QAAQ,QAAQA,SAAwB;EAC5C,MAAM,aAAa,sBAAsB,SAAS,EAChD,WAAW,OAAO,UACnB,EAAC;EACF,MAAM,mBAAmB,OAAO;AAEhC,SAAO,qBAAqB,iBAAiB;AAC7C,SAAO,gBAAgB,OAAO,YAAY;EAE1C,MAAM,YAAY,MAAM,WAAW,gBAAgB;GACjD;GACA,aAAa,OAAO;GACpB,MAAM,OAAO;EACd,EAAC;EACF,IAAI,UAAU,iBAAiB,iBAAiB,GAAG,OAAO,YAAY;AACtE,aAAW,WAAW,UAAU,IAAI,OAAO;AAC3C,aAAW,YAAY,UAAU,KAAK;AACtC,YAAU;AACV,YACE;AACF,SAAO;CACR;AACF,EAAC"}