import { z } from "zod";

//#region src/api-client/schema.d.ts

/**
 * Schema for Sentry API error responses.
 *
 * Uses .passthrough() to allow additional fields that may be present
 * in different error scenarios.
 */
declare const ApiErrorSchema: z.ZodObject<{
  detail: z.ZodString;
}, "passthrough", z.ZodTypeAny, z.objectOutputType<{
  detail: z.ZodString;
}, z.ZodTypeAny, "passthrough">, z.objectInputType<{
  detail: z.ZodString;
}, z.ZodTypeAny, "passthrough">>;
declare const UserSchema: z.ZodObject<{
  id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
  name: z.ZodNullable<z.ZodString>;
  email: z.ZodString;
}, "strip", z.ZodTypeAny, {
  name: string | null;
  id: string | number;
  email: string;
}, {
  name: string | null;
  id: string | number;
  email: string;
}>;
declare const UserRegionsSchema: z.ZodObject<{
  regions: z.ZodArray<z.ZodObject<{
    name: z.ZodString;
    url: z.ZodString;
  }, "strip", z.ZodTypeAny, {
    name: string;
    url: string;
  }, {
    name: string;
    url: string;
  }>, "many">;
}, "strip", z.ZodTypeAny, {
  regions: {
    name: string;
    url: string;
  }[];
}, {
  regions: {
    name: string;
    url: string;
  }[];
}>;
/**
 * Schema for Sentry organization API responses.
 *
 * Handles organizations from both Sentry's Cloud Service and self-hosted installations.
 * The links object and regionUrl field are optional to support self-hosted Sentry
 * instances that may not include these fields or return empty values.
 */
declare const OrganizationSchema: z.ZodObject<{
  id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
  slug: z.ZodString;
  name: z.ZodString;
  links: z.ZodOptional<z.ZodObject<{
    regionUrl: z.ZodOptional<z.ZodEffects<z.ZodString, string, string>>;
    organizationUrl: z.ZodString;
  }, "strip", z.ZodTypeAny, {
    organizationUrl: string;
    regionUrl?: string | undefined;
  }, {
    organizationUrl: string;
    regionUrl?: string | undefined;
  }>>;
}, "strip", z.ZodTypeAny, {
  name: string;
  id: string | number;
  slug: string;
  links?: {
    organizationUrl: string;
    regionUrl?: string | undefined;
  } | undefined;
}, {
  name: string;
  id: string | number;
  slug: string;
  links?: {
    organizationUrl: string;
    regionUrl?: string | undefined;
  } | undefined;
}>;
declare const OrganizationListSchema: z.ZodArray<z.ZodObject<{
  id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
  slug: z.ZodString;
  name: z.ZodString;
  links: z.ZodOptional<z.ZodObject<{
    regionUrl: z.ZodOptional<z.ZodEffects<z.ZodString, string, string>>;
    organizationUrl: z.ZodString;
  }, "strip", z.ZodTypeAny, {
    organizationUrl: string;
    regionUrl?: string | undefined;
  }, {
    organizationUrl: string;
    regionUrl?: string | undefined;
  }>>;
}, "strip", z.ZodTypeAny, {
  name: string;
  id: string | number;
  slug: string;
  links?: {
    organizationUrl: string;
    regionUrl?: string | undefined;
  } | undefined;
}, {
  name: string;
  id: string | number;
  slug: string;
  links?: {
    organizationUrl: string;
    regionUrl?: string | undefined;
  } | undefined;
}>, "many">;
declare const TeamSchema: z.ZodObject<{
  id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
  slug: z.ZodString;
  name: z.ZodString;
}, "strip", z.ZodTypeAny, {
  name: string;
  id: string | number;
  slug: string;
}, {
  name: string;
  id: string | number;
  slug: string;
}>;
declare const TeamListSchema: z.ZodArray<z.ZodObject<{
  id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
  slug: z.ZodString;
  name: z.ZodString;
}, "strip", z.ZodTypeAny, {
  name: string;
  id: string | number;
  slug: string;
}, {
  name: string;
  id: string | number;
  slug: string;
}>, "many">;
declare const ProjectSchema: z.ZodObject<{
  id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
  slug: z.ZodString;
  name: z.ZodString;
  platform: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
  name: string;
  id: string | number;
  slug: string;
  platform?: string | null | undefined;
}, {
  name: string;
  id: string | number;
  slug: string;
  platform?: string | null | undefined;
}>;
declare const ProjectListSchema: z.ZodArray<z.ZodObject<{
  id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
  slug: z.ZodString;
  name: z.ZodString;
  platform: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
  name: string;
  id: string | number;
  slug: string;
  platform?: string | null | undefined;
}, {
  name: string;
  id: string | number;
  slug: string;
  platform?: string | null | undefined;
}>, "many">;
declare const ClientKeySchema: z.ZodObject<{
  id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
  name: z.ZodString;
  dsn: z.ZodObject<{
    public: z.ZodString;
  }, "strip", z.ZodTypeAny, {
    public: string;
  }, {
    public: string;
  }>;
  isActive: z.ZodBoolean;
  dateCreated: z.ZodString;
}, "strip", z.ZodTypeAny, {
  name: string;
  id: string | number;
  dateCreated: string;
  dsn: {
    public: string;
  };
  isActive: boolean;
}, {
  name: string;
  id: string | number;
  dateCreated: string;
  dsn: {
    public: string;
  };
  isActive: boolean;
}>;
declare const ClientKeyListSchema: z.ZodArray<z.ZodObject<{
  id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
  name: z.ZodString;
  dsn: z.ZodObject<{
    public: z.ZodString;
  }, "strip", z.ZodTypeAny, {
    public: string;
  }, {
    public: string;
  }>;
  isActive: z.ZodBoolean;
  dateCreated: z.ZodString;
}, "strip", z.ZodTypeAny, {
  name: string;
  id: string | number;
  dateCreated: string;
  dsn: {
    public: string;
  };
  isActive: boolean;
}, {
  name: string;
  id: string | number;
  dateCreated: string;
  dsn: {
    public: string;
  };
  isActive: boolean;
}>, "many">;
declare const ReleaseSchema: z.ZodObject<{
  id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
  version: z.ZodString;
  shortVersion: z.ZodString;
  dateCreated: z.ZodString;
  dateReleased: z.ZodNullable<z.ZodString>;
  firstEvent: z.ZodNullable<z.ZodString>;
  lastEvent: z.ZodNullable<z.ZodString>;
  newGroups: z.ZodNumber;
  lastCommit: z.ZodNullable<z.ZodObject<{
    id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
    message: z.ZodString;
    dateCreated: z.ZodString;
    author: z.ZodObject<{
      name: z.ZodString;
      email: z.ZodString;
    }, "strip", z.ZodTypeAny, {
      name: string;
      email: string;
    }, {
      name: string;
      email: string;
    }>;
  }, "strip", z.ZodTypeAny, {
    message: string;
    id: string | number;
    dateCreated: string;
    author: {
      name: string;
      email: string;
    };
  }, {
    message: string;
    id: string | number;
    dateCreated: string;
    author: {
      name: string;
      email: string;
    };
  }>>;
  lastDeploy: z.ZodNullable<z.ZodObject<{
    id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
    environment: z.ZodString;
    dateStarted: z.ZodNullable<z.ZodString>;
    dateFinished: z.ZodNullable<z.ZodString>;
  }, "strip", z.ZodTypeAny, {
    id: string | number;
    environment: string;
    dateStarted: string | null;
    dateFinished: string | null;
  }, {
    id: string | number;
    environment: string;
    dateStarted: string | null;
    dateFinished: string | null;
  }>>;
  projects: z.ZodArray<z.ZodObject<{
    id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
    slug: z.ZodString;
    name: z.ZodString;
    platform: z.ZodOptional<z.ZodNullable<z.ZodString>>;
  }, "strip", z.ZodTypeAny, {
    name: string;
    id: string | number;
    slug: string;
    platform?: string | null | undefined;
  }, {
    name: string;
    id: string | number;
    slug: string;
    platform?: string | null | undefined;
  }>, "many">;
}, "strip", z.ZodTypeAny, {
  id: string | number;
  dateCreated: string;
  version: string;
  shortVersion: string;
  dateReleased: string | null;
  firstEvent: string | null;
  lastEvent: string | null;
  newGroups: number;
  lastCommit: {
    message: string;
    id: string | number;
    dateCreated: string;
    author: {
      name: string;
      email: string;
    };
  } | null;
  lastDeploy: {
    id: string | number;
    environment: string;
    dateStarted: string | null;
    dateFinished: string | null;
  } | null;
  projects: {
    name: string;
    id: string | number;
    slug: string;
    platform?: string | null | undefined;
  }[];
}, {
  id: string | number;
  dateCreated: string;
  version: string;
  shortVersion: string;
  dateReleased: string | null;
  firstEvent: string | null;
  lastEvent: string | null;
  newGroups: number;
  lastCommit: {
    message: string;
    id: string | number;
    dateCreated: string;
    author: {
      name: string;
      email: string;
    };
  } | null;
  lastDeploy: {
    id: string | number;
    environment: string;
    dateStarted: string | null;
    dateFinished: string | null;
  } | null;
  projects: {
    name: string;
    id: string | number;
    slug: string;
    platform?: string | null | undefined;
  }[];
}>;
declare const ReleaseListSchema: z.ZodArray<z.ZodObject<{
  id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
  version: z.ZodString;
  shortVersion: z.ZodString;
  dateCreated: z.ZodString;
  dateReleased: z.ZodNullable<z.ZodString>;
  firstEvent: z.ZodNullable<z.ZodString>;
  lastEvent: z.ZodNullable<z.ZodString>;
  newGroups: z.ZodNumber;
  lastCommit: z.ZodNullable<z.ZodObject<{
    id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
    message: z.ZodString;
    dateCreated: z.ZodString;
    author: z.ZodObject<{
      name: z.ZodString;
      email: z.ZodString;
    }, "strip", z.ZodTypeAny, {
      name: string;
      email: string;
    }, {
      name: string;
      email: string;
    }>;
  }, "strip", z.ZodTypeAny, {
    message: string;
    id: string | number;
    dateCreated: string;
    author: {
      name: string;
      email: string;
    };
  }, {
    message: string;
    id: string | number;
    dateCreated: string;
    author: {
      name: string;
      email: string;
    };
  }>>;
  lastDeploy: z.ZodNullable<z.ZodObject<{
    id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
    environment: z.ZodString;
    dateStarted: z.ZodNullable<z.ZodString>;
    dateFinished: z.ZodNullable<z.ZodString>;
  }, "strip", z.ZodTypeAny, {
    id: string | number;
    environment: string;
    dateStarted: string | null;
    dateFinished: string | null;
  }, {
    id: string | number;
    environment: string;
    dateStarted: string | null;
    dateFinished: string | null;
  }>>;
  projects: z.ZodArray<z.ZodObject<{
    id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
    slug: z.ZodString;
    name: z.ZodString;
    platform: z.ZodOptional<z.ZodNullable<z.ZodString>>;
  }, "strip", z.ZodTypeAny, {
    name: string;
    id: string | number;
    slug: string;
    platform?: string | null | undefined;
  }, {
    name: string;
    id: string | number;
    slug: string;
    platform?: string | null | undefined;
  }>, "many">;
}, "strip", z.ZodTypeAny, {
  id: string | number;
  dateCreated: string;
  version: string;
  shortVersion: string;
  dateReleased: string | null;
  firstEvent: string | null;
  lastEvent: string | null;
  newGroups: number;
  lastCommit: {
    message: string;
    id: string | number;
    dateCreated: string;
    author: {
      name: string;
      email: string;
    };
  } | null;
  lastDeploy: {
    id: string | number;
    environment: string;
    dateStarted: string | null;
    dateFinished: string | null;
  } | null;
  projects: {
    name: string;
    id: string | number;
    slug: string;
    platform?: string | null | undefined;
  }[];
}, {
  id: string | number;
  dateCreated: string;
  version: string;
  shortVersion: string;
  dateReleased: string | null;
  firstEvent: string | null;
  lastEvent: string | null;
  newGroups: number;
  lastCommit: {
    message: string;
    id: string | number;
    dateCreated: string;
    author: {
      name: string;
      email: string;
    };
  } | null;
  lastDeploy: {
    id: string | number;
    environment: string;
    dateStarted: string | null;
    dateFinished: string | null;
  } | null;
  projects: {
    name: string;
    id: string | number;
    slug: string;
    platform?: string | null | undefined;
  }[];
}>, "many">;
declare const TagSchema: z.ZodObject<{
  key: z.ZodString;
  name: z.ZodString;
  totalValues: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
  name: string;
  key: string;
  totalValues: number;
}, {
  name: string;
  key: string;
  totalValues: number;
}>;
declare const TagListSchema: z.ZodArray<z.ZodObject<{
  key: z.ZodString;
  name: z.ZodString;
  totalValues: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
  name: string;
  key: string;
  totalValues: number;
}, {
  name: string;
  key: string;
  totalValues: number;
}>, "many">;
declare const AssignedToSchema: z.ZodUnion<[z.ZodNull, z.ZodString, z.ZodObject<{
  type: z.ZodEnum<["user", "team"]>;
  id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
  name: z.ZodString;
  email: z.ZodOptional<z.ZodString>;
}, "passthrough", z.ZodTypeAny, z.objectOutputType<{
  type: z.ZodEnum<["user", "team"]>;
  id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
  name: z.ZodString;
  email: z.ZodOptional<z.ZodString>;
}, z.ZodTypeAny, "passthrough">, z.objectInputType<{
  type: z.ZodEnum<["user", "team"]>;
  id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
  name: z.ZodString;
  email: z.ZodOptional<z.ZodString>;
}, z.ZodTypeAny, "passthrough">>]>;
declare const IssueSchema: z.ZodObject<{
  id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
  shortId: z.ZodString;
  title: z.ZodString;
  firstSeen: z.ZodString;
  lastSeen: z.ZodString;
  count: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
  userCount: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
  permalink: z.ZodString;
  project: z.ZodObject<{
    id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
    slug: z.ZodString;
    name: z.ZodString;
    platform: z.ZodOptional<z.ZodNullable<z.ZodString>>;
  }, "strip", z.ZodTypeAny, {
    name: string;
    id: string | number;
    slug: string;
    platform?: string | null | undefined;
  }, {
    name: string;
    id: string | number;
    slug: string;
    platform?: string | null | undefined;
  }>;
  platform: z.ZodOptional<z.ZodNullable<z.ZodString>>;
  status: z.ZodString;
  culprit: z.ZodString;
  type: z.ZodUnion<[z.ZodLiteral<"error">, z.ZodLiteral<"transaction">, z.ZodUnknown]>;
  assignedTo: z.ZodOptional<z.ZodUnion<[z.ZodNull, z.ZodString, z.ZodObject<{
    type: z.ZodEnum<["user", "team"]>;
    id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
    name: z.ZodString;
    email: z.ZodOptional<z.ZodString>;
  }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
    type: z.ZodEnum<["user", "team"]>;
    id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
    name: z.ZodString;
    email: z.ZodOptional<z.ZodString>;
  }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
    type: z.ZodEnum<["user", "team"]>;
    id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
    name: z.ZodString;
    email: z.ZodOptional<z.ZodString>;
  }, z.ZodTypeAny, "passthrough">>]>>;
}, "strip", z.ZodTypeAny, {
  status: string;
  id: string | number;
  shortId: string;
  title: string;
  firstSeen: string;
  lastSeen: string;
  count: string | number;
  userCount: string | number;
  permalink: string;
  project: {
    name: string;
    id: string | number;
    slug: string;
    platform?: string | null | undefined;
  };
  culprit: string;
  platform?: string | null | undefined;
  type?: unknown;
  assignedTo?: string | z.objectOutputType<{
    type: z.ZodEnum<["user", "team"]>;
    id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
    name: z.ZodString;
    email: z.ZodOptional<z.ZodString>;
  }, z.ZodTypeAny, "passthrough"> | null | undefined;
}, {
  status: string;
  id: string | number;
  shortId: string;
  title: string;
  firstSeen: string;
  lastSeen: string;
  count: string | number;
  userCount: string | number;
  permalink: string;
  project: {
    name: string;
    id: string | number;
    slug: string;
    platform?: string | null | undefined;
  };
  culprit: string;
  platform?: string | null | undefined;
  type?: unknown;
  assignedTo?: string | z.objectInputType<{
    type: z.ZodEnum<["user", "team"]>;
    id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
    name: z.ZodString;
    email: z.ZodOptional<z.ZodString>;
  }, z.ZodTypeAny, "passthrough"> | null | undefined;
}>;
declare const IssueListSchema: z.ZodArray<z.ZodObject<{
  id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
  shortId: z.ZodString;
  title: z.ZodString;
  firstSeen: z.ZodString;
  lastSeen: z.ZodString;
  count: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
  userCount: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
  permalink: z.ZodString;
  project: z.ZodObject<{
    id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
    slug: z.ZodString;
    name: z.ZodString;
    platform: z.ZodOptional<z.ZodNullable<z.ZodString>>;
  }, "strip", z.ZodTypeAny, {
    name: string;
    id: string | number;
    slug: string;
    platform?: string | null | undefined;
  }, {
    name: string;
    id: string | number;
    slug: string;
    platform?: string | null | undefined;
  }>;
  platform: z.ZodOptional<z.ZodNullable<z.ZodString>>;
  status: z.ZodString;
  culprit: z.ZodString;
  type: z.ZodUnion<[z.ZodLiteral<"error">, z.ZodLiteral<"transaction">, z.ZodUnknown]>;
  assignedTo: z.ZodOptional<z.ZodUnion<[z.ZodNull, z.ZodString, z.ZodObject<{
    type: z.ZodEnum<["user", "team"]>;
    id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
    name: z.ZodString;
    email: z.ZodOptional<z.ZodString>;
  }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
    type: z.ZodEnum<["user", "team"]>;
    id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
    name: z.ZodString;
    email: z.ZodOptional<z.ZodString>;
  }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
    type: z.ZodEnum<["user", "team"]>;
    id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
    name: z.ZodString;
    email: z.ZodOptional<z.ZodString>;
  }, z.ZodTypeAny, "passthrough">>]>>;
}, "strip", z.ZodTypeAny, {
  status: string;
  id: string | number;
  shortId: string;
  title: string;
  firstSeen: string;
  lastSeen: string;
  count: string | number;
  userCount: string | number;
  permalink: string;
  project: {
    name: string;
    id: string | number;
    slug: string;
    platform?: string | null | undefined;
  };
  culprit: string;
  platform?: string | null | undefined;
  type?: unknown;
  assignedTo?: string | z.objectOutputType<{
    type: z.ZodEnum<["user", "team"]>;
    id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
    name: z.ZodString;
    email: z.ZodOptional<z.ZodString>;
  }, z.ZodTypeAny, "passthrough"> | null | undefined;
}, {
  status: string;
  id: string | number;
  shortId: string;
  title: string;
  firstSeen: string;
  lastSeen: string;
  count: string | number;
  userCount: string | number;
  permalink: string;
  project: {
    name: string;
    id: string | number;
    slug: string;
    platform?: string | null | undefined;
  };
  culprit: string;
  platform?: string | null | undefined;
  type?: unknown;
  assignedTo?: string | z.objectInputType<{
    type: z.ZodEnum<["user", "team"]>;
    id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
    name: z.ZodString;
    email: z.ZodOptional<z.ZodString>;
  }, z.ZodTypeAny, "passthrough"> | null | undefined;
}>, "many">;
declare const FrameInterface: z.ZodObject<{
  filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
  function: z.ZodOptional<z.ZodNullable<z.ZodString>>;
  lineNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
  colNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
  absPath: z.ZodOptional<z.ZodNullable<z.ZodString>>;
  module: z.ZodOptional<z.ZodNullable<z.ZodString>>;
  context: z.ZodOptional<z.ZodArray<z.ZodTuple<[z.ZodNumber, z.ZodString], null>, "many">>;
  inApp: z.ZodOptional<z.ZodOptional<z.ZodBoolean>>;
  vars: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>>;
}, "strip", z.ZodTypeAny, {
  function?: string | null | undefined;
  filename?: string | null | undefined;
  lineNo?: number | null | undefined;
  colNo?: number | null | undefined;
  absPath?: string | null | undefined;
  module?: string | null | undefined;
  context?: [number, string][] | undefined;
  inApp?: boolean | undefined;
  vars?: Record<string, unknown> | undefined;
}, {
  function?: string | null | undefined;
  filename?: string | null | undefined;
  lineNo?: number | null | undefined;
  colNo?: number | null | undefined;
  absPath?: string | null | undefined;
  module?: string | null | undefined;
  context?: [number, string][] | undefined;
  inApp?: boolean | undefined;
  vars?: Record<string, unknown> | undefined;
}>;
declare const ExceptionInterface: z.ZodObject<{
  mechanism: z.ZodOptional<z.ZodObject<{
    type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    handled: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
  }, "strip", z.ZodTypeAny, {
    type?: string | null | undefined;
    handled?: boolean | null | undefined;
  }, {
    type?: string | null | undefined;
    handled?: boolean | null | undefined;
  }>>;
  type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
  value: z.ZodOptional<z.ZodNullable<z.ZodString>>;
  stacktrace: z.ZodOptional<z.ZodObject<{
    frames: z.ZodArray<z.ZodObject<{
      filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
      function: z.ZodOptional<z.ZodNullable<z.ZodString>>;
      lineNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
      colNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
      absPath: z.ZodOptional<z.ZodNullable<z.ZodString>>;
      module: z.ZodOptional<z.ZodNullable<z.ZodString>>;
      context: z.ZodOptional<z.ZodArray<z.ZodTuple<[z.ZodNumber, z.ZodString], null>, "many">>;
      inApp: z.ZodOptional<z.ZodOptional<z.ZodBoolean>>;
      vars: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>>;
    }, "strip", z.ZodTypeAny, {
      function?: string | null | undefined;
      filename?: string | null | undefined;
      lineNo?: number | null | undefined;
      colNo?: number | null | undefined;
      absPath?: string | null | undefined;
      module?: string | null | undefined;
      context?: [number, string][] | undefined;
      inApp?: boolean | undefined;
      vars?: Record<string, unknown> | undefined;
    }, {
      function?: string | null | undefined;
      filename?: string | null | undefined;
      lineNo?: number | null | undefined;
      colNo?: number | null | undefined;
      absPath?: string | null | undefined;
      module?: string | null | undefined;
      context?: [number, string][] | undefined;
      inApp?: boolean | undefined;
      vars?: Record<string, unknown> | undefined;
    }>, "many">;
  }, "strip", z.ZodTypeAny, {
    frames: {
      function?: string | null | undefined;
      filename?: string | null | undefined;
      lineNo?: number | null | undefined;
      colNo?: number | null | undefined;
      absPath?: string | null | undefined;
      module?: string | null | undefined;
      context?: [number, string][] | undefined;
      inApp?: boolean | undefined;
      vars?: Record<string, unknown> | undefined;
    }[];
  }, {
    frames: {
      function?: string | null | undefined;
      filename?: string | null | undefined;
      lineNo?: number | null | undefined;
      colNo?: number | null | undefined;
      absPath?: string | null | undefined;
      module?: string | null | undefined;
      context?: [number, string][] | undefined;
      inApp?: boolean | undefined;
      vars?: Record<string, unknown> | undefined;
    }[];
  }>>;
}, "strip", z.ZodTypeAny, {
  value?: string | null | undefined;
  type?: string | null | undefined;
  mechanism?: {
    type?: string | null | undefined;
    handled?: boolean | null | undefined;
  } | undefined;
  stacktrace?: {
    frames: {
      function?: string | null | undefined;
      filename?: string | null | undefined;
      lineNo?: number | null | undefined;
      colNo?: number | null | undefined;
      absPath?: string | null | undefined;
      module?: string | null | undefined;
      context?: [number, string][] | undefined;
      inApp?: boolean | undefined;
      vars?: Record<string, unknown> | undefined;
    }[];
  } | undefined;
}, {
  value?: string | null | undefined;
  type?: string | null | undefined;
  mechanism?: {
    type?: string | null | undefined;
    handled?: boolean | null | undefined;
  } | undefined;
  stacktrace?: {
    frames: {
      function?: string | null | undefined;
      filename?: string | null | undefined;
      lineNo?: number | null | undefined;
      colNo?: number | null | undefined;
      absPath?: string | null | undefined;
      module?: string | null | undefined;
      context?: [number, string][] | undefined;
      inApp?: boolean | undefined;
      vars?: Record<string, unknown> | undefined;
    }[];
  } | undefined;
}>;
declare const ErrorEntrySchema: z.ZodObject<{
  values: z.ZodOptional<z.ZodArray<z.ZodOptional<z.ZodObject<{
    mechanism: z.ZodOptional<z.ZodObject<{
      type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
      handled: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    }, "strip", z.ZodTypeAny, {
      type?: string | null | undefined;
      handled?: boolean | null | undefined;
    }, {
      type?: string | null | undefined;
      handled?: boolean | null | undefined;
    }>>;
    type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    value: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    stacktrace: z.ZodOptional<z.ZodObject<{
      frames: z.ZodArray<z.ZodObject<{
        filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        function: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        lineNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        colNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        absPath: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        module: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        context: z.ZodOptional<z.ZodArray<z.ZodTuple<[z.ZodNumber, z.ZodString], null>, "many">>;
        inApp: z.ZodOptional<z.ZodOptional<z.ZodBoolean>>;
        vars: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>>;
      }, "strip", z.ZodTypeAny, {
        function?: string | null | undefined;
        filename?: string | null | undefined;
        lineNo?: number | null | undefined;
        colNo?: number | null | undefined;
        absPath?: string | null | undefined;
        module?: string | null | undefined;
        context?: [number, string][] | undefined;
        inApp?: boolean | undefined;
        vars?: Record<string, unknown> | undefined;
      }, {
        function?: string | null | undefined;
        filename?: string | null | undefined;
        lineNo?: number | null | undefined;
        colNo?: number | null | undefined;
        absPath?: string | null | undefined;
        module?: string | null | undefined;
        context?: [number, string][] | undefined;
        inApp?: boolean | undefined;
        vars?: Record<string, unknown> | undefined;
      }>, "many">;
    }, "strip", z.ZodTypeAny, {
      frames: {
        function?: string | null | undefined;
        filename?: string | null | undefined;
        lineNo?: number | null | undefined;
        colNo?: number | null | undefined;
        absPath?: string | null | undefined;
        module?: string | null | undefined;
        context?: [number, string][] | undefined;
        inApp?: boolean | undefined;
        vars?: Record<string, unknown> | undefined;
      }[];
    }, {
      frames: {
        function?: string | null | undefined;
        filename?: string | null | undefined;
        lineNo?: number | null | undefined;
        colNo?: number | null | undefined;
        absPath?: string | null | undefined;
        module?: string | null | undefined;
        context?: [number, string][] | undefined;
        inApp?: boolean | undefined;
        vars?: Record<string, unknown> | undefined;
      }[];
    }>>;
  }, "strip", z.ZodTypeAny, {
    value?: string | null | undefined;
    type?: string | null | undefined;
    mechanism?: {
      type?: string | null | undefined;
      handled?: boolean | null | undefined;
    } | undefined;
    stacktrace?: {
      frames: {
        function?: string | null | undefined;
        filename?: string | null | undefined;
        lineNo?: number | null | undefined;
        colNo?: number | null | undefined;
        absPath?: string | null | undefined;
        module?: string | null | undefined;
        context?: [number, string][] | undefined;
        inApp?: boolean | undefined;
        vars?: Record<string, unknown> | undefined;
      }[];
    } | undefined;
  }, {
    value?: string | null | undefined;
    type?: string | null | undefined;
    mechanism?: {
      type?: string | null | undefined;
      handled?: boolean | null | undefined;
    } | undefined;
    stacktrace?: {
      frames: {
        function?: string | null | undefined;
        filename?: string | null | undefined;
        lineNo?: number | null | undefined;
        colNo?: number | null | undefined;
        absPath?: string | null | undefined;
        module?: string | null | undefined;
        context?: [number, string][] | undefined;
        inApp?: boolean | undefined;
        vars?: Record<string, unknown> | undefined;
      }[];
    } | undefined;
  }>>, "many">>;
  value: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodObject<{
    mechanism: z.ZodOptional<z.ZodObject<{
      type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
      handled: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    }, "strip", z.ZodTypeAny, {
      type?: string | null | undefined;
      handled?: boolean | null | undefined;
    }, {
      type?: string | null | undefined;
      handled?: boolean | null | undefined;
    }>>;
    type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    value: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    stacktrace: z.ZodOptional<z.ZodObject<{
      frames: z.ZodArray<z.ZodObject<{
        filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        function: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        lineNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        colNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        absPath: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        module: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        context: z.ZodOptional<z.ZodArray<z.ZodTuple<[z.ZodNumber, z.ZodString], null>, "many">>;
        inApp: z.ZodOptional<z.ZodOptional<z.ZodBoolean>>;
        vars: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>>;
      }, "strip", z.ZodTypeAny, {
        function?: string | null | undefined;
        filename?: string | null | undefined;
        lineNo?: number | null | undefined;
        colNo?: number | null | undefined;
        absPath?: string | null | undefined;
        module?: string | null | undefined;
        context?: [number, string][] | undefined;
        inApp?: boolean | undefined;
        vars?: Record<string, unknown> | undefined;
      }, {
        function?: string | null | undefined;
        filename?: string | null | undefined;
        lineNo?: number | null | undefined;
        colNo?: number | null | undefined;
        absPath?: string | null | undefined;
        module?: string | null | undefined;
        context?: [number, string][] | undefined;
        inApp?: boolean | undefined;
        vars?: Record<string, unknown> | undefined;
      }>, "many">;
    }, "strip", z.ZodTypeAny, {
      frames: {
        function?: string | null | undefined;
        filename?: string | null | undefined;
        lineNo?: number | null | undefined;
        colNo?: number | null | undefined;
        absPath?: string | null | undefined;
        module?: string | null | undefined;
        context?: [number, string][] | undefined;
        inApp?: boolean | undefined;
        vars?: Record<string, unknown> | undefined;
      }[];
    }, {
      frames: {
        function?: string | null | undefined;
        filename?: string | null | undefined;
        lineNo?: number | null | undefined;
        colNo?: number | null | undefined;
        absPath?: string | null | undefined;
        module?: string | null | undefined;
        context?: [number, string][] | undefined;
        inApp?: boolean | undefined;
        vars?: Record<string, unknown> | undefined;
      }[];
    }>>;
  }, "strip", z.ZodTypeAny, {
    value?: string | null | undefined;
    type?: string | null | undefined;
    mechanism?: {
      type?: string | null | undefined;
      handled?: boolean | null | undefined;
    } | undefined;
    stacktrace?: {
      frames: {
        function?: string | null | undefined;
        filename?: string | null | undefined;
        lineNo?: number | null | undefined;
        colNo?: number | null | undefined;
        absPath?: string | null | undefined;
        module?: string | null | undefined;
        context?: [number, string][] | undefined;
        inApp?: boolean | undefined;
        vars?: Record<string, unknown> | undefined;
      }[];
    } | undefined;
  }, {
    value?: string | null | undefined;
    type?: string | null | undefined;
    mechanism?: {
      type?: string | null | undefined;
      handled?: boolean | null | undefined;
    } | undefined;
    stacktrace?: {
      frames: {
        function?: string | null | undefined;
        filename?: string | null | undefined;
        lineNo?: number | null | undefined;
        colNo?: number | null | undefined;
        absPath?: string | null | undefined;
        module?: string | null | undefined;
        context?: [number, string][] | undefined;
        inApp?: boolean | undefined;
        vars?: Record<string, unknown> | undefined;
      }[];
    } | undefined;
  }>>>>;
}, "strip", z.ZodTypeAny, {
  value?: {
    value?: string | null | undefined;
    type?: string | null | undefined;
    mechanism?: {
      type?: string | null | undefined;
      handled?: boolean | null | undefined;
    } | undefined;
    stacktrace?: {
      frames: {
        function?: string | null | undefined;
        filename?: string | null | undefined;
        lineNo?: number | null | undefined;
        colNo?: number | null | undefined;
        absPath?: string | null | undefined;
        module?: string | null | undefined;
        context?: [number, string][] | undefined;
        inApp?: boolean | undefined;
        vars?: Record<string, unknown> | undefined;
      }[];
    } | undefined;
  } | null | undefined;
  values?: ({
    value?: string | null | undefined;
    type?: string | null | undefined;
    mechanism?: {
      type?: string | null | undefined;
      handled?: boolean | null | undefined;
    } | undefined;
    stacktrace?: {
      frames: {
        function?: string | null | undefined;
        filename?: string | null | undefined;
        lineNo?: number | null | undefined;
        colNo?: number | null | undefined;
        absPath?: string | null | undefined;
        module?: string | null | undefined;
        context?: [number, string][] | undefined;
        inApp?: boolean | undefined;
        vars?: Record<string, unknown> | undefined;
      }[];
    } | undefined;
  } | undefined)[] | undefined;
}, {
  value?: {
    value?: string | null | undefined;
    type?: string | null | undefined;
    mechanism?: {
      type?: string | null | undefined;
      handled?: boolean | null | undefined;
    } | undefined;
    stacktrace?: {
      frames: {
        function?: string | null | undefined;
        filename?: string | null | undefined;
        lineNo?: number | null | undefined;
        colNo?: number | null | undefined;
        absPath?: string | null | undefined;
        module?: string | null | undefined;
        context?: [number, string][] | undefined;
        inApp?: boolean | undefined;
        vars?: Record<string, unknown> | undefined;
      }[];
    } | undefined;
  } | null | undefined;
  values?: ({
    value?: string | null | undefined;
    type?: string | null | undefined;
    mechanism?: {
      type?: string | null | undefined;
      handled?: boolean | null | undefined;
    } | undefined;
    stacktrace?: {
      frames: {
        function?: string | null | undefined;
        filename?: string | null | undefined;
        lineNo?: number | null | undefined;
        colNo?: number | null | undefined;
        absPath?: string | null | undefined;
        module?: string | null | undefined;
        context?: [number, string][] | undefined;
        inApp?: boolean | undefined;
        vars?: Record<string, unknown> | undefined;
      }[];
    } | undefined;
  } | undefined)[] | undefined;
}>;
declare const RequestEntrySchema: z.ZodObject<{
  method: z.ZodOptional<z.ZodNullable<z.ZodString>>;
  url: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
  method?: string | null | undefined;
  url?: string | null | undefined;
}, {
  method?: string | null | undefined;
  url?: string | null | undefined;
}>;
declare const MessageEntrySchema: z.ZodObject<{
  formatted: z.ZodOptional<z.ZodNullable<z.ZodString>>;
  message: z.ZodOptional<z.ZodNullable<z.ZodString>>;
  params: z.ZodOptional<z.ZodOptional<z.ZodArray<z.ZodUnknown, "many">>>;
}, "strip", z.ZodTypeAny, {
  params?: unknown[] | undefined;
  message?: string | null | undefined;
  formatted?: string | null | undefined;
}, {
  params?: unknown[] | undefined;
  message?: string | null | undefined;
  formatted?: string | null | undefined;
}>;
declare const ThreadEntrySchema: z.ZodObject<{
  id: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
  name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
  current: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
  crashed: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
  state: z.ZodOptional<z.ZodNullable<z.ZodString>>;
  stacktrace: z.ZodOptional<z.ZodNullable<z.ZodObject<{
    frames: z.ZodArray<z.ZodObject<{
      filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
      function: z.ZodOptional<z.ZodNullable<z.ZodString>>;
      lineNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
      colNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
      absPath: z.ZodOptional<z.ZodNullable<z.ZodString>>;
      module: z.ZodOptional<z.ZodNullable<z.ZodString>>;
      context: z.ZodOptional<z.ZodArray<z.ZodTuple<[z.ZodNumber, z.ZodString], null>, "many">>;
      inApp: z.ZodOptional<z.ZodOptional<z.ZodBoolean>>;
      vars: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>>;
    }, "strip", z.ZodTypeAny, {
      function?: string | null | undefined;
      filename?: string | null | undefined;
      lineNo?: number | null | undefined;
      colNo?: number | null | undefined;
      absPath?: string | null | undefined;
      module?: string | null | undefined;
      context?: [number, string][] | undefined;
      inApp?: boolean | undefined;
      vars?: Record<string, unknown> | undefined;
    }, {
      function?: string | null | undefined;
      filename?: string | null | undefined;
      lineNo?: number | null | undefined;
      colNo?: number | null | undefined;
      absPath?: string | null | undefined;
      module?: string | null | undefined;
      context?: [number, string][] | undefined;
      inApp?: boolean | undefined;
      vars?: Record<string, unknown> | undefined;
    }>, "many">;
  }, "strip", z.ZodTypeAny, {
    frames: {
      function?: string | null | undefined;
      filename?: string | null | undefined;
      lineNo?: number | null | undefined;
      colNo?: number | null | undefined;
      absPath?: string | null | undefined;
      module?: string | null | undefined;
      context?: [number, string][] | undefined;
      inApp?: boolean | undefined;
      vars?: Record<string, unknown> | undefined;
    }[];
  }, {
    frames: {
      function?: string | null | undefined;
      filename?: string | null | undefined;
      lineNo?: number | null | undefined;
      colNo?: number | null | undefined;
      absPath?: string | null | undefined;
      module?: string | null | undefined;
      context?: [number, string][] | undefined;
      inApp?: boolean | undefined;
      vars?: Record<string, unknown> | undefined;
    }[];
  }>>>;
}, "strip", z.ZodTypeAny, {
  name?: string | null | undefined;
  id?: number | null | undefined;
  stacktrace?: {
    frames: {
      function?: string | null | undefined;
      filename?: string | null | undefined;
      lineNo?: number | null | undefined;
      colNo?: number | null | undefined;
      absPath?: string | null | undefined;
      module?: string | null | undefined;
      context?: [number, string][] | undefined;
      inApp?: boolean | undefined;
      vars?: Record<string, unknown> | undefined;
    }[];
  } | null | undefined;
  current?: boolean | null | undefined;
  crashed?: boolean | null | undefined;
  state?: string | null | undefined;
}, {
  name?: string | null | undefined;
  id?: number | null | undefined;
  stacktrace?: {
    frames: {
      function?: string | null | undefined;
      filename?: string | null | undefined;
      lineNo?: number | null | undefined;
      colNo?: number | null | undefined;
      absPath?: string | null | undefined;
      module?: string | null | undefined;
      context?: [number, string][] | undefined;
      inApp?: boolean | undefined;
      vars?: Record<string, unknown> | undefined;
    }[];
  } | null | undefined;
  current?: boolean | null | undefined;
  crashed?: boolean | null | undefined;
  state?: string | null | undefined;
}>;
declare const ThreadsEntrySchema: z.ZodObject<{
  values: z.ZodOptional<z.ZodArray<z.ZodObject<{
    id: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    current: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    crashed: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    state: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    stacktrace: z.ZodOptional<z.ZodNullable<z.ZodObject<{
      frames: z.ZodArray<z.ZodObject<{
        filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        function: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        lineNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        colNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        absPath: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        module: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        context: z.ZodOptional<z.ZodArray<z.ZodTuple<[z.ZodNumber, z.ZodString], null>, "many">>;
        inApp: z.ZodOptional<z.ZodOptional<z.ZodBoolean>>;
        vars: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>>;
      }, "strip", z.ZodTypeAny, {
        function?: string | null | undefined;
        filename?: string | null | undefined;
        lineNo?: number | null | undefined;
        colNo?: number | null | undefined;
        absPath?: string | null | undefined;
        module?: string | null | undefined;
        context?: [number, string][] | undefined;
        inApp?: boolean | undefined;
        vars?: Record<string, unknown> | undefined;
      }, {
        function?: string | null | undefined;
        filename?: string | null | undefined;
        lineNo?: number | null | undefined;
        colNo?: number | null | undefined;
        absPath?: string | null | undefined;
        module?: string | null | undefined;
        context?: [number, string][] | undefined;
        inApp?: boolean | undefined;
        vars?: Record<string, unknown> | undefined;
      }>, "many">;
    }, "strip", z.ZodTypeAny, {
      frames: {
        function?: string | null | undefined;
        filename?: string | null | undefined;
        lineNo?: number | null | undefined;
        colNo?: number | null | undefined;
        absPath?: string | null | undefined;
        module?: string | null | undefined;
        context?: [number, string][] | undefined;
        inApp?: boolean | undefined;
        vars?: Record<string, unknown> | undefined;
      }[];
    }, {
      frames: {
        function?: string | null | undefined;
        filename?: string | null | undefined;
        lineNo?: number | null | undefined;
        colNo?: number | null | undefined;
        absPath?: string | null | undefined;
        module?: string | null | undefined;
        context?: [number, string][] | undefined;
        inApp?: boolean | undefined;
        vars?: Record<string, unknown> | undefined;
      }[];
    }>>>;
  }, "strip", z.ZodTypeAny, {
    name?: string | null | undefined;
    id?: number | null | undefined;
    stacktrace?: {
      frames: {
        function?: string | null | undefined;
        filename?: string | null | undefined;
        lineNo?: number | null | undefined;
        colNo?: number | null | undefined;
        absPath?: string | null | undefined;
        module?: string | null | undefined;
        context?: [number, string][] | undefined;
        inApp?: boolean | undefined;
        vars?: Record<string, unknown> | undefined;
      }[];
    } | null | undefined;
    current?: boolean | null | undefined;
    crashed?: boolean | null | undefined;
    state?: string | null | undefined;
  }, {
    name?: string | null | undefined;
    id?: number | null | undefined;
    stacktrace?: {
      frames: {
        function?: string | null | undefined;
        filename?: string | null | undefined;
        lineNo?: number | null | undefined;
        colNo?: number | null | undefined;
        absPath?: string | null | undefined;
        module?: string | null | undefined;
        context?: [number, string][] | undefined;
        inApp?: boolean | undefined;
        vars?: Record<string, unknown> | undefined;
      }[];
    } | null | undefined;
    current?: boolean | null | undefined;
    crashed?: boolean | null | undefined;
    state?: string | null | undefined;
  }>, "many">>;
}, "strip", z.ZodTypeAny, {
  values?: {
    name?: string | null | undefined;
    id?: number | null | undefined;
    stacktrace?: {
      frames: {
        function?: string | null | undefined;
        filename?: string | null | undefined;
        lineNo?: number | null | undefined;
        colNo?: number | null | undefined;
        absPath?: string | null | undefined;
        module?: string | null | undefined;
        context?: [number, string][] | undefined;
        inApp?: boolean | undefined;
        vars?: Record<string, unknown> | undefined;
      }[];
    } | null | undefined;
    current?: boolean | null | undefined;
    crashed?: boolean | null | undefined;
    state?: string | null | undefined;
  }[] | undefined;
}, {
  values?: {
    name?: string | null | undefined;
    id?: number | null | undefined;
    stacktrace?: {
      frames: {
        function?: string | null | undefined;
        filename?: string | null | undefined;
        lineNo?: number | null | undefined;
        colNo?: number | null | undefined;
        absPath?: string | null | undefined;
        module?: string | null | undefined;
        context?: [number, string][] | undefined;
        inApp?: boolean | undefined;
        vars?: Record<string, unknown> | undefined;
      }[];
    } | null | undefined;
    current?: boolean | null | undefined;
    crashed?: boolean | null | undefined;
    state?: string | null | undefined;
  }[] | undefined;
}>;
declare const BreadcrumbSchema: z.ZodObject<{
  timestamp: z.ZodOptional<z.ZodNullable<z.ZodString>>;
  type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
  category: z.ZodOptional<z.ZodNullable<z.ZodString>>;
  level: z.ZodOptional<z.ZodNullable<z.ZodString>>;
  message: z.ZodOptional<z.ZodNullable<z.ZodString>>;
  data: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodUnknown>>>;
}, "strip", z.ZodTypeAny, {
  message?: string | null | undefined;
  type?: string | null | undefined;
  data?: Record<string, unknown> | null | undefined;
  timestamp?: string | null | undefined;
  category?: string | null | undefined;
  level?: string | null | undefined;
}, {
  message?: string | null | undefined;
  type?: string | null | undefined;
  data?: Record<string, unknown> | null | undefined;
  timestamp?: string | null | undefined;
  category?: string | null | undefined;
  level?: string | null | undefined;
}>;
declare const BreadcrumbsEntrySchema: z.ZodObject<{
  values: z.ZodOptional<z.ZodArray<z.ZodObject<{
    timestamp: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    category: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    level: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    message: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    data: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodUnknown>>>;
  }, "strip", z.ZodTypeAny, {
    message?: string | null | undefined;
    type?: string | null | undefined;
    data?: Record<string, unknown> | null | undefined;
    timestamp?: string | null | undefined;
    category?: string | null | undefined;
    level?: string | null | undefined;
  }, {
    message?: string | null | undefined;
    type?: string | null | undefined;
    data?: Record<string, unknown> | null | undefined;
    timestamp?: string | null | undefined;
    category?: string | null | undefined;
    level?: string | null | undefined;
  }>, "many">>;
}, "strip", z.ZodTypeAny, {
  values?: {
    message?: string | null | undefined;
    type?: string | null | undefined;
    data?: Record<string, unknown> | null | undefined;
    timestamp?: string | null | undefined;
    category?: string | null | undefined;
    level?: string | null | undefined;
  }[] | undefined;
}, {
  values?: {
    message?: string | null | undefined;
    type?: string | null | undefined;
    data?: Record<string, unknown> | null | undefined;
    timestamp?: string | null | undefined;
    category?: string | null | undefined;
    level?: string | null | undefined;
  }[] | undefined;
}>;
declare const ErrorEventSchema: z.ZodObject<Omit<{
  id: z.ZodString;
  title: z.ZodString;
  message: z.ZodNullable<z.ZodString>;
  platform: z.ZodOptional<z.ZodNullable<z.ZodString>>;
  type: z.ZodUnknown;
  entries: z.ZodArray<z.ZodUnion<[z.ZodObject<{
    type: z.ZodLiteral<"exception">;
    data: z.ZodObject<{
      values: z.ZodOptional<z.ZodArray<z.ZodOptional<z.ZodObject<{
        mechanism: z.ZodOptional<z.ZodObject<{
          type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
          handled: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        }, "strip", z.ZodTypeAny, {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        }, {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        }>>;
        type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        value: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        stacktrace: z.ZodOptional<z.ZodObject<{
          frames: z.ZodArray<z.ZodObject<{
            filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            function: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            lineNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            colNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            absPath: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            module: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            context: z.ZodOptional<z.ZodArray<z.ZodTuple<[z.ZodNumber, z.ZodString], null>, "many">>;
            inApp: z.ZodOptional<z.ZodOptional<z.ZodBoolean>>;
            vars: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>>;
          }, "strip", z.ZodTypeAny, {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }, {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }>, "many">;
        }, "strip", z.ZodTypeAny, {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        }, {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        }>>;
      }, "strip", z.ZodTypeAny, {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      }, {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      }>>, "many">>;
      value: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodObject<{
        mechanism: z.ZodOptional<z.ZodObject<{
          type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
          handled: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        }, "strip", z.ZodTypeAny, {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        }, {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        }>>;
        type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        value: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        stacktrace: z.ZodOptional<z.ZodObject<{
          frames: z.ZodArray<z.ZodObject<{
            filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            function: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            lineNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            colNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            absPath: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            module: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            context: z.ZodOptional<z.ZodArray<z.ZodTuple<[z.ZodNumber, z.ZodString], null>, "many">>;
            inApp: z.ZodOptional<z.ZodOptional<z.ZodBoolean>>;
            vars: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>>;
          }, "strip", z.ZodTypeAny, {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }, {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }>, "many">;
        }, "strip", z.ZodTypeAny, {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        }, {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        }>>;
      }, "strip", z.ZodTypeAny, {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      }, {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      }>>>>;
    }, "strip", z.ZodTypeAny, {
      value?: {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | null | undefined;
      values?: ({
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | undefined)[] | undefined;
    }, {
      value?: {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | null | undefined;
      values?: ({
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | undefined)[] | undefined;
    }>;
  }, "strip", z.ZodTypeAny, {
    type: "exception";
    data: {
      value?: {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | null | undefined;
      values?: ({
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | undefined)[] | undefined;
    };
  }, {
    type: "exception";
    data: {
      value?: {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | null | undefined;
      values?: ({
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | undefined)[] | undefined;
    };
  }>, z.ZodObject<{
    type: z.ZodLiteral<"message">;
    data: z.ZodObject<{
      formatted: z.ZodOptional<z.ZodNullable<z.ZodString>>;
      message: z.ZodOptional<z.ZodNullable<z.ZodString>>;
      params: z.ZodOptional<z.ZodOptional<z.ZodArray<z.ZodUnknown, "many">>>;
    }, "strip", z.ZodTypeAny, {
      params?: unknown[] | undefined;
      message?: string | null | undefined;
      formatted?: string | null | undefined;
    }, {
      params?: unknown[] | undefined;
      message?: string | null | undefined;
      formatted?: string | null | undefined;
    }>;
  }, "strip", z.ZodTypeAny, {
    type: "message";
    data: {
      params?: unknown[] | undefined;
      message?: string | null | undefined;
      formatted?: string | null | undefined;
    };
  }, {
    type: "message";
    data: {
      params?: unknown[] | undefined;
      message?: string | null | undefined;
      formatted?: string | null | undefined;
    };
  }>, z.ZodObject<{
    type: z.ZodLiteral<"threads">;
    data: z.ZodObject<{
      values: z.ZodOptional<z.ZodArray<z.ZodObject<{
        id: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        current: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        crashed: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        state: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        stacktrace: z.ZodOptional<z.ZodNullable<z.ZodObject<{
          frames: z.ZodArray<z.ZodObject<{
            filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            function: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            lineNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            colNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            absPath: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            module: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            context: z.ZodOptional<z.ZodArray<z.ZodTuple<[z.ZodNumber, z.ZodString], null>, "many">>;
            inApp: z.ZodOptional<z.ZodOptional<z.ZodBoolean>>;
            vars: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>>;
          }, "strip", z.ZodTypeAny, {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }, {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }>, "many">;
        }, "strip", z.ZodTypeAny, {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        }, {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        }>>>;
      }, "strip", z.ZodTypeAny, {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }, {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }>, "many">>;
    }, "strip", z.ZodTypeAny, {
      values?: {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }[] | undefined;
    }, {
      values?: {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }[] | undefined;
    }>;
  }, "strip", z.ZodTypeAny, {
    type: "threads";
    data: {
      values?: {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }[] | undefined;
    };
  }, {
    type: "threads";
    data: {
      values?: {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }[] | undefined;
    };
  }>, z.ZodObject<{
    type: z.ZodLiteral<"request">;
    data: z.ZodObject<{
      method: z.ZodOptional<z.ZodNullable<z.ZodString>>;
      url: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
      method?: string | null | undefined;
      url?: string | null | undefined;
    }, {
      method?: string | null | undefined;
      url?: string | null | undefined;
    }>;
  }, "strip", z.ZodTypeAny, {
    type: "request";
    data: {
      method?: string | null | undefined;
      url?: string | null | undefined;
    };
  }, {
    type: "request";
    data: {
      method?: string | null | undefined;
      url?: string | null | undefined;
    };
  }>, z.ZodObject<{
    type: z.ZodLiteral<"breadcrumbs">;
    data: z.ZodObject<{
      values: z.ZodOptional<z.ZodArray<z.ZodObject<{
        timestamp: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        category: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        level: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        message: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        data: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodUnknown>>>;
      }, "strip", z.ZodTypeAny, {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }, {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }>, "many">>;
    }, "strip", z.ZodTypeAny, {
      values?: {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }[] | undefined;
    }, {
      values?: {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }[] | undefined;
    }>;
  }, "strip", z.ZodTypeAny, {
    type: "breadcrumbs";
    data: {
      values?: {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }[] | undefined;
    };
  }, {
    type: "breadcrumbs";
    data: {
      values?: {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }[] | undefined;
    };
  }>, z.ZodObject<{
    type: z.ZodLiteral<"spans">;
    data: z.ZodUnknown;
  }, "strip", z.ZodTypeAny, {
    type: "spans";
    data?: unknown;
  }, {
    type: "spans";
    data?: unknown;
  }>, z.ZodObject<{
    type: z.ZodString;
    data: z.ZodUnknown;
  }, "strip", z.ZodTypeAny, {
    type: string;
    data?: unknown;
  }, {
    type: string;
    data?: unknown;
  }>]>, "many">;
  contexts: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
    type: z.ZodUnion<[z.ZodLiteral<"default">, z.ZodLiteral<"runtime">, z.ZodLiteral<"os">, z.ZodLiteral<"trace">, z.ZodUnknown]>;
  }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
    type: z.ZodUnion<[z.ZodLiteral<"default">, z.ZodLiteral<"runtime">, z.ZodLiteral<"os">, z.ZodLiteral<"trace">, z.ZodUnknown]>;
  }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
    type: z.ZodUnion<[z.ZodLiteral<"default">, z.ZodLiteral<"runtime">, z.ZodLiteral<"os">, z.ZodLiteral<"trace">, z.ZodUnknown]>;
  }, z.ZodTypeAny, "passthrough">>>>;
}, "type"> & {
  type: z.ZodLiteral<"error">;
  culprit: z.ZodNullable<z.ZodString>;
  dateCreated: z.ZodString;
}, "strip", z.ZodTypeAny, {
  entries: ({
    type: "exception";
    data: {
      value?: {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | null | undefined;
      values?: ({
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | undefined)[] | undefined;
    };
  } | {
    type: "message";
    data: {
      params?: unknown[] | undefined;
      message?: string | null | undefined;
      formatted?: string | null | undefined;
    };
  } | {
    type: "threads";
    data: {
      values?: {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }[] | undefined;
    };
  } | {
    type: "request";
    data: {
      method?: string | null | undefined;
      url?: string | null | undefined;
    };
  } | {
    type: "breadcrumbs";
    data: {
      values?: {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }[] | undefined;
    };
  } | {
    type: "spans";
    data?: unknown;
  } | {
    type: string;
    data?: unknown;
  })[];
  message: string | null;
  type: "error";
  id: string;
  title: string;
  culprit: string | null;
  dateCreated: string;
  platform?: string | null | undefined;
  contexts?: Record<string, z.objectOutputType<{
    type: z.ZodUnion<[z.ZodLiteral<"default">, z.ZodLiteral<"runtime">, z.ZodLiteral<"os">, z.ZodLiteral<"trace">, z.ZodUnknown]>;
  }, z.ZodTypeAny, "passthrough">> | undefined;
}, {
  entries: ({
    type: "exception";
    data: {
      value?: {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | null | undefined;
      values?: ({
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | undefined)[] | undefined;
    };
  } | {
    type: "message";
    data: {
      params?: unknown[] | undefined;
      message?: string | null | undefined;
      formatted?: string | null | undefined;
    };
  } | {
    type: "threads";
    data: {
      values?: {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }[] | undefined;
    };
  } | {
    type: "request";
    data: {
      method?: string | null | undefined;
      url?: string | null | undefined;
    };
  } | {
    type: "breadcrumbs";
    data: {
      values?: {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }[] | undefined;
    };
  } | {
    type: "spans";
    data?: unknown;
  } | {
    type: string;
    data?: unknown;
  })[];
  message: string | null;
  type: "error";
  id: string;
  title: string;
  culprit: string | null;
  dateCreated: string;
  platform?: string | null | undefined;
  contexts?: Record<string, z.objectInputType<{
    type: z.ZodUnion<[z.ZodLiteral<"default">, z.ZodLiteral<"runtime">, z.ZodLiteral<"os">, z.ZodLiteral<"trace">, z.ZodUnknown]>;
  }, z.ZodTypeAny, "passthrough">> | undefined;
}>;
declare const TransactionEventSchema: z.ZodObject<Omit<{
  id: z.ZodString;
  title: z.ZodString;
  message: z.ZodNullable<z.ZodString>;
  platform: z.ZodOptional<z.ZodNullable<z.ZodString>>;
  type: z.ZodUnknown;
  entries: z.ZodArray<z.ZodUnion<[z.ZodObject<{
    type: z.ZodLiteral<"exception">;
    data: z.ZodObject<{
      values: z.ZodOptional<z.ZodArray<z.ZodOptional<z.ZodObject<{
        mechanism: z.ZodOptional<z.ZodObject<{
          type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
          handled: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        }, "strip", z.ZodTypeAny, {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        }, {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        }>>;
        type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        value: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        stacktrace: z.ZodOptional<z.ZodObject<{
          frames: z.ZodArray<z.ZodObject<{
            filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            function: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            lineNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            colNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            absPath: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            module: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            context: z.ZodOptional<z.ZodArray<z.ZodTuple<[z.ZodNumber, z.ZodString], null>, "many">>;
            inApp: z.ZodOptional<z.ZodOptional<z.ZodBoolean>>;
            vars: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>>;
          }, "strip", z.ZodTypeAny, {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }, {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }>, "many">;
        }, "strip", z.ZodTypeAny, {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        }, {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        }>>;
      }, "strip", z.ZodTypeAny, {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      }, {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      }>>, "many">>;
      value: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodObject<{
        mechanism: z.ZodOptional<z.ZodObject<{
          type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
          handled: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        }, "strip", z.ZodTypeAny, {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        }, {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        }>>;
        type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        value: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        stacktrace: z.ZodOptional<z.ZodObject<{
          frames: z.ZodArray<z.ZodObject<{
            filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            function: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            lineNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            colNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            absPath: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            module: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            context: z.ZodOptional<z.ZodArray<z.ZodTuple<[z.ZodNumber, z.ZodString], null>, "many">>;
            inApp: z.ZodOptional<z.ZodOptional<z.ZodBoolean>>;
            vars: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>>;
          }, "strip", z.ZodTypeAny, {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }, {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }>, "many">;
        }, "strip", z.ZodTypeAny, {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        }, {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        }>>;
      }, "strip", z.ZodTypeAny, {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      }, {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      }>>>>;
    }, "strip", z.ZodTypeAny, {
      value?: {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | null | undefined;
      values?: ({
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | undefined)[] | undefined;
    }, {
      value?: {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | null | undefined;
      values?: ({
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | undefined)[] | undefined;
    }>;
  }, "strip", z.ZodTypeAny, {
    type: "exception";
    data: {
      value?: {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | null | undefined;
      values?: ({
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | undefined)[] | undefined;
    };
  }, {
    type: "exception";
    data: {
      value?: {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | null | undefined;
      values?: ({
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | undefined)[] | undefined;
    };
  }>, z.ZodObject<{
    type: z.ZodLiteral<"message">;
    data: z.ZodObject<{
      formatted: z.ZodOptional<z.ZodNullable<z.ZodString>>;
      message: z.ZodOptional<z.ZodNullable<z.ZodString>>;
      params: z.ZodOptional<z.ZodOptional<z.ZodArray<z.ZodUnknown, "many">>>;
    }, "strip", z.ZodTypeAny, {
      params?: unknown[] | undefined;
      message?: string | null | undefined;
      formatted?: string | null | undefined;
    }, {
      params?: unknown[] | undefined;
      message?: string | null | undefined;
      formatted?: string | null | undefined;
    }>;
  }, "strip", z.ZodTypeAny, {
    type: "message";
    data: {
      params?: unknown[] | undefined;
      message?: string | null | undefined;
      formatted?: string | null | undefined;
    };
  }, {
    type: "message";
    data: {
      params?: unknown[] | undefined;
      message?: string | null | undefined;
      formatted?: string | null | undefined;
    };
  }>, z.ZodObject<{
    type: z.ZodLiteral<"threads">;
    data: z.ZodObject<{
      values: z.ZodOptional<z.ZodArray<z.ZodObject<{
        id: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        current: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        crashed: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        state: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        stacktrace: z.ZodOptional<z.ZodNullable<z.ZodObject<{
          frames: z.ZodArray<z.ZodObject<{
            filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            function: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            lineNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            colNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            absPath: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            module: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            context: z.ZodOptional<z.ZodArray<z.ZodTuple<[z.ZodNumber, z.ZodString], null>, "many">>;
            inApp: z.ZodOptional<z.ZodOptional<z.ZodBoolean>>;
            vars: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>>;
          }, "strip", z.ZodTypeAny, {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }, {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }>, "many">;
        }, "strip", z.ZodTypeAny, {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        }, {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        }>>>;
      }, "strip", z.ZodTypeAny, {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }, {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }>, "many">>;
    }, "strip", z.ZodTypeAny, {
      values?: {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }[] | undefined;
    }, {
      values?: {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }[] | undefined;
    }>;
  }, "strip", z.ZodTypeAny, {
    type: "threads";
    data: {
      values?: {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }[] | undefined;
    };
  }, {
    type: "threads";
    data: {
      values?: {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }[] | undefined;
    };
  }>, z.ZodObject<{
    type: z.ZodLiteral<"request">;
    data: z.ZodObject<{
      method: z.ZodOptional<z.ZodNullable<z.ZodString>>;
      url: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
      method?: string | null | undefined;
      url?: string | null | undefined;
    }, {
      method?: string | null | undefined;
      url?: string | null | undefined;
    }>;
  }, "strip", z.ZodTypeAny, {
    type: "request";
    data: {
      method?: string | null | undefined;
      url?: string | null | undefined;
    };
  }, {
    type: "request";
    data: {
      method?: string | null | undefined;
      url?: string | null | undefined;
    };
  }>, z.ZodObject<{
    type: z.ZodLiteral<"breadcrumbs">;
    data: z.ZodObject<{
      values: z.ZodOptional<z.ZodArray<z.ZodObject<{
        timestamp: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        category: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        level: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        message: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        data: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodUnknown>>>;
      }, "strip", z.ZodTypeAny, {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }, {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }>, "many">>;
    }, "strip", z.ZodTypeAny, {
      values?: {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }[] | undefined;
    }, {
      values?: {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }[] | undefined;
    }>;
  }, "strip", z.ZodTypeAny, {
    type: "breadcrumbs";
    data: {
      values?: {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }[] | undefined;
    };
  }, {
    type: "breadcrumbs";
    data: {
      values?: {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }[] | undefined;
    };
  }>, z.ZodObject<{
    type: z.ZodLiteral<"spans">;
    data: z.ZodUnknown;
  }, "strip", z.ZodTypeAny, {
    type: "spans";
    data?: unknown;
  }, {
    type: "spans";
    data?: unknown;
  }>, z.ZodObject<{
    type: z.ZodString;
    data: z.ZodUnknown;
  }, "strip", z.ZodTypeAny, {
    type: string;
    data?: unknown;
  }, {
    type: string;
    data?: unknown;
  }>]>, "many">;
  contexts: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
    type: z.ZodUnion<[z.ZodLiteral<"default">, z.ZodLiteral<"runtime">, z.ZodLiteral<"os">, z.ZodLiteral<"trace">, z.ZodUnknown]>;
  }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
    type: z.ZodUnion<[z.ZodLiteral<"default">, z.ZodLiteral<"runtime">, z.ZodLiteral<"os">, z.ZodLiteral<"trace">, z.ZodUnknown]>;
  }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
    type: z.ZodUnion<[z.ZodLiteral<"default">, z.ZodLiteral<"runtime">, z.ZodLiteral<"os">, z.ZodLiteral<"trace">, z.ZodUnknown]>;
  }, z.ZodTypeAny, "passthrough">>>>;
}, "type"> & {
  type: z.ZodLiteral<"transaction">;
  occurrence: z.ZodObject<{
    issueTitle: z.ZodString;
    culprit: z.ZodNullable<z.ZodString>;
  }, "strip", z.ZodTypeAny, {
    culprit: string | null;
    issueTitle: string;
  }, {
    culprit: string | null;
    issueTitle: string;
  }>;
}, "strip", z.ZodTypeAny, {
  entries: ({
    type: "exception";
    data: {
      value?: {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | null | undefined;
      values?: ({
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | undefined)[] | undefined;
    };
  } | {
    type: "message";
    data: {
      params?: unknown[] | undefined;
      message?: string | null | undefined;
      formatted?: string | null | undefined;
    };
  } | {
    type: "threads";
    data: {
      values?: {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }[] | undefined;
    };
  } | {
    type: "request";
    data: {
      method?: string | null | undefined;
      url?: string | null | undefined;
    };
  } | {
    type: "breadcrumbs";
    data: {
      values?: {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }[] | undefined;
    };
  } | {
    type: "spans";
    data?: unknown;
  } | {
    type: string;
    data?: unknown;
  })[];
  message: string | null;
  type: "transaction";
  id: string;
  title: string;
  occurrence: {
    culprit: string | null;
    issueTitle: string;
  };
  platform?: string | null | undefined;
  contexts?: Record<string, z.objectOutputType<{
    type: z.ZodUnion<[z.ZodLiteral<"default">, z.ZodLiteral<"runtime">, z.ZodLiteral<"os">, z.ZodLiteral<"trace">, z.ZodUnknown]>;
  }, z.ZodTypeAny, "passthrough">> | undefined;
}, {
  entries: ({
    type: "exception";
    data: {
      value?: {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | null | undefined;
      values?: ({
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | undefined)[] | undefined;
    };
  } | {
    type: "message";
    data: {
      params?: unknown[] | undefined;
      message?: string | null | undefined;
      formatted?: string | null | undefined;
    };
  } | {
    type: "threads";
    data: {
      values?: {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }[] | undefined;
    };
  } | {
    type: "request";
    data: {
      method?: string | null | undefined;
      url?: string | null | undefined;
    };
  } | {
    type: "breadcrumbs";
    data: {
      values?: {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }[] | undefined;
    };
  } | {
    type: "spans";
    data?: unknown;
  } | {
    type: string;
    data?: unknown;
  })[];
  message: string | null;
  type: "transaction";
  id: string;
  title: string;
  occurrence: {
    culprit: string | null;
    issueTitle: string;
  };
  platform?: string | null | undefined;
  contexts?: Record<string, z.objectInputType<{
    type: z.ZodUnion<[z.ZodLiteral<"default">, z.ZodLiteral<"runtime">, z.ZodLiteral<"os">, z.ZodLiteral<"trace">, z.ZodUnknown]>;
  }, z.ZodTypeAny, "passthrough">> | undefined;
}>;
declare const UnknownEventSchema: z.ZodObject<Omit<{
  id: z.ZodString;
  title: z.ZodString;
  message: z.ZodNullable<z.ZodString>;
  platform: z.ZodOptional<z.ZodNullable<z.ZodString>>;
  type: z.ZodUnknown;
  entries: z.ZodArray<z.ZodUnion<[z.ZodObject<{
    type: z.ZodLiteral<"exception">;
    data: z.ZodObject<{
      values: z.ZodOptional<z.ZodArray<z.ZodOptional<z.ZodObject<{
        mechanism: z.ZodOptional<z.ZodObject<{
          type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
          handled: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        }, "strip", z.ZodTypeAny, {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        }, {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        }>>;
        type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        value: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        stacktrace: z.ZodOptional<z.ZodObject<{
          frames: z.ZodArray<z.ZodObject<{
            filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            function: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            lineNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            colNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            absPath: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            module: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            context: z.ZodOptional<z.ZodArray<z.ZodTuple<[z.ZodNumber, z.ZodString], null>, "many">>;
            inApp: z.ZodOptional<z.ZodOptional<z.ZodBoolean>>;
            vars: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>>;
          }, "strip", z.ZodTypeAny, {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }, {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }>, "many">;
        }, "strip", z.ZodTypeAny, {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        }, {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        }>>;
      }, "strip", z.ZodTypeAny, {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      }, {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      }>>, "many">>;
      value: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodObject<{
        mechanism: z.ZodOptional<z.ZodObject<{
          type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
          handled: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        }, "strip", z.ZodTypeAny, {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        }, {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        }>>;
        type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        value: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        stacktrace: z.ZodOptional<z.ZodObject<{
          frames: z.ZodArray<z.ZodObject<{
            filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            function: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            lineNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            colNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            absPath: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            module: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            context: z.ZodOptional<z.ZodArray<z.ZodTuple<[z.ZodNumber, z.ZodString], null>, "many">>;
            inApp: z.ZodOptional<z.ZodOptional<z.ZodBoolean>>;
            vars: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>>;
          }, "strip", z.ZodTypeAny, {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }, {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }>, "many">;
        }, "strip", z.ZodTypeAny, {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        }, {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        }>>;
      }, "strip", z.ZodTypeAny, {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      }, {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      }>>>>;
    }, "strip", z.ZodTypeAny, {
      value?: {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | null | undefined;
      values?: ({
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | undefined)[] | undefined;
    }, {
      value?: {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | null | undefined;
      values?: ({
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | undefined)[] | undefined;
    }>;
  }, "strip", z.ZodTypeAny, {
    type: "exception";
    data: {
      value?: {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | null | undefined;
      values?: ({
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | undefined)[] | undefined;
    };
  }, {
    type: "exception";
    data: {
      value?: {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | null | undefined;
      values?: ({
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | undefined)[] | undefined;
    };
  }>, z.ZodObject<{
    type: z.ZodLiteral<"message">;
    data: z.ZodObject<{
      formatted: z.ZodOptional<z.ZodNullable<z.ZodString>>;
      message: z.ZodOptional<z.ZodNullable<z.ZodString>>;
      params: z.ZodOptional<z.ZodOptional<z.ZodArray<z.ZodUnknown, "many">>>;
    }, "strip", z.ZodTypeAny, {
      params?: unknown[] | undefined;
      message?: string | null | undefined;
      formatted?: string | null | undefined;
    }, {
      params?: unknown[] | undefined;
      message?: string | null | undefined;
      formatted?: string | null | undefined;
    }>;
  }, "strip", z.ZodTypeAny, {
    type: "message";
    data: {
      params?: unknown[] | undefined;
      message?: string | null | undefined;
      formatted?: string | null | undefined;
    };
  }, {
    type: "message";
    data: {
      params?: unknown[] | undefined;
      message?: string | null | undefined;
      formatted?: string | null | undefined;
    };
  }>, z.ZodObject<{
    type: z.ZodLiteral<"threads">;
    data: z.ZodObject<{
      values: z.ZodOptional<z.ZodArray<z.ZodObject<{
        id: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        current: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        crashed: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        state: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        stacktrace: z.ZodOptional<z.ZodNullable<z.ZodObject<{
          frames: z.ZodArray<z.ZodObject<{
            filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            function: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            lineNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            colNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            absPath: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            module: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            context: z.ZodOptional<z.ZodArray<z.ZodTuple<[z.ZodNumber, z.ZodString], null>, "many">>;
            inApp: z.ZodOptional<z.ZodOptional<z.ZodBoolean>>;
            vars: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>>;
          }, "strip", z.ZodTypeAny, {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }, {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }>, "many">;
        }, "strip", z.ZodTypeAny, {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        }, {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        }>>>;
      }, "strip", z.ZodTypeAny, {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }, {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }>, "many">>;
    }, "strip", z.ZodTypeAny, {
      values?: {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }[] | undefined;
    }, {
      values?: {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }[] | undefined;
    }>;
  }, "strip", z.ZodTypeAny, {
    type: "threads";
    data: {
      values?: {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }[] | undefined;
    };
  }, {
    type: "threads";
    data: {
      values?: {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }[] | undefined;
    };
  }>, z.ZodObject<{
    type: z.ZodLiteral<"request">;
    data: z.ZodObject<{
      method: z.ZodOptional<z.ZodNullable<z.ZodString>>;
      url: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
      method?: string | null | undefined;
      url?: string | null | undefined;
    }, {
      method?: string | null | undefined;
      url?: string | null | undefined;
    }>;
  }, "strip", z.ZodTypeAny, {
    type: "request";
    data: {
      method?: string | null | undefined;
      url?: string | null | undefined;
    };
  }, {
    type: "request";
    data: {
      method?: string | null | undefined;
      url?: string | null | undefined;
    };
  }>, z.ZodObject<{
    type: z.ZodLiteral<"breadcrumbs">;
    data: z.ZodObject<{
      values: z.ZodOptional<z.ZodArray<z.ZodObject<{
        timestamp: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        category: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        level: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        message: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        data: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodUnknown>>>;
      }, "strip", z.ZodTypeAny, {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }, {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }>, "many">>;
    }, "strip", z.ZodTypeAny, {
      values?: {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }[] | undefined;
    }, {
      values?: {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }[] | undefined;
    }>;
  }, "strip", z.ZodTypeAny, {
    type: "breadcrumbs";
    data: {
      values?: {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }[] | undefined;
    };
  }, {
    type: "breadcrumbs";
    data: {
      values?: {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }[] | undefined;
    };
  }>, z.ZodObject<{
    type: z.ZodLiteral<"spans">;
    data: z.ZodUnknown;
  }, "strip", z.ZodTypeAny, {
    type: "spans";
    data?: unknown;
  }, {
    type: "spans";
    data?: unknown;
  }>, z.ZodObject<{
    type: z.ZodString;
    data: z.ZodUnknown;
  }, "strip", z.ZodTypeAny, {
    type: string;
    data?: unknown;
  }, {
    type: string;
    data?: unknown;
  }>]>, "many">;
  contexts: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
    type: z.ZodUnion<[z.ZodLiteral<"default">, z.ZodLiteral<"runtime">, z.ZodLiteral<"os">, z.ZodLiteral<"trace">, z.ZodUnknown]>;
  }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
    type: z.ZodUnion<[z.ZodLiteral<"default">, z.ZodLiteral<"runtime">, z.ZodLiteral<"os">, z.ZodLiteral<"trace">, z.ZodUnknown]>;
  }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
    type: z.ZodUnion<[z.ZodLiteral<"default">, z.ZodLiteral<"runtime">, z.ZodLiteral<"os">, z.ZodLiteral<"trace">, z.ZodUnknown]>;
  }, z.ZodTypeAny, "passthrough">>>>;
}, "type"> & {
  type: z.ZodUnknown;
}, "strip", z.ZodTypeAny, {
  entries: ({
    type: "exception";
    data: {
      value?: {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | null | undefined;
      values?: ({
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | undefined)[] | undefined;
    };
  } | {
    type: "message";
    data: {
      params?: unknown[] | undefined;
      message?: string | null | undefined;
      formatted?: string | null | undefined;
    };
  } | {
    type: "threads";
    data: {
      values?: {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }[] | undefined;
    };
  } | {
    type: "request";
    data: {
      method?: string | null | undefined;
      url?: string | null | undefined;
    };
  } | {
    type: "breadcrumbs";
    data: {
      values?: {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }[] | undefined;
    };
  } | {
    type: "spans";
    data?: unknown;
  } | {
    type: string;
    data?: unknown;
  })[];
  message: string | null;
  id: string;
  title: string;
  platform?: string | null | undefined;
  type?: unknown;
  contexts?: Record<string, z.objectOutputType<{
    type: z.ZodUnion<[z.ZodLiteral<"default">, z.ZodLiteral<"runtime">, z.ZodLiteral<"os">, z.ZodLiteral<"trace">, z.ZodUnknown]>;
  }, z.ZodTypeAny, "passthrough">> | undefined;
}, {
  entries: ({
    type: "exception";
    data: {
      value?: {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | null | undefined;
      values?: ({
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | undefined)[] | undefined;
    };
  } | {
    type: "message";
    data: {
      params?: unknown[] | undefined;
      message?: string | null | undefined;
      formatted?: string | null | undefined;
    };
  } | {
    type: "threads";
    data: {
      values?: {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }[] | undefined;
    };
  } | {
    type: "request";
    data: {
      method?: string | null | undefined;
      url?: string | null | undefined;
    };
  } | {
    type: "breadcrumbs";
    data: {
      values?: {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }[] | undefined;
    };
  } | {
    type: "spans";
    data?: unknown;
  } | {
    type: string;
    data?: unknown;
  })[];
  message: string | null;
  id: string;
  title: string;
  platform?: string | null | undefined;
  type?: unknown;
  contexts?: Record<string, z.objectInputType<{
    type: z.ZodUnion<[z.ZodLiteral<"default">, z.ZodLiteral<"runtime">, z.ZodLiteral<"os">, z.ZodLiteral<"trace">, z.ZodUnknown]>;
  }, z.ZodTypeAny, "passthrough">> | undefined;
}>;
declare const EventSchema: z.ZodUnion<[z.ZodObject<Omit<{
  id: z.ZodString;
  title: z.ZodString;
  message: z.ZodNullable<z.ZodString>;
  platform: z.ZodOptional<z.ZodNullable<z.ZodString>>;
  type: z.ZodUnknown;
  entries: z.ZodArray<z.ZodUnion<[z.ZodObject<{
    type: z.ZodLiteral<"exception">;
    data: z.ZodObject<{
      values: z.ZodOptional<z.ZodArray<z.ZodOptional<z.ZodObject<{
        mechanism: z.ZodOptional<z.ZodObject<{
          type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
          handled: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        }, "strip", z.ZodTypeAny, {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        }, {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        }>>;
        type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        value: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        stacktrace: z.ZodOptional<z.ZodObject<{
          frames: z.ZodArray<z.ZodObject<{
            filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            function: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            lineNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            colNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            absPath: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            module: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            context: z.ZodOptional<z.ZodArray<z.ZodTuple<[z.ZodNumber, z.ZodString], null>, "many">>;
            inApp: z.ZodOptional<z.ZodOptional<z.ZodBoolean>>;
            vars: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>>;
          }, "strip", z.ZodTypeAny, {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }, {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }>, "many">;
        }, "strip", z.ZodTypeAny, {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        }, {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        }>>;
      }, "strip", z.ZodTypeAny, {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      }, {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      }>>, "many">>;
      value: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodObject<{
        mechanism: z.ZodOptional<z.ZodObject<{
          type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
          handled: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        }, "strip", z.ZodTypeAny, {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        }, {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        }>>;
        type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        value: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        stacktrace: z.ZodOptional<z.ZodObject<{
          frames: z.ZodArray<z.ZodObject<{
            filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            function: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            lineNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            colNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            absPath: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            module: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            context: z.ZodOptional<z.ZodArray<z.ZodTuple<[z.ZodNumber, z.ZodString], null>, "many">>;
            inApp: z.ZodOptional<z.ZodOptional<z.ZodBoolean>>;
            vars: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>>;
          }, "strip", z.ZodTypeAny, {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }, {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }>, "many">;
        }, "strip", z.ZodTypeAny, {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        }, {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        }>>;
      }, "strip", z.ZodTypeAny, {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      }, {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      }>>>>;
    }, "strip", z.ZodTypeAny, {
      value?: {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | null | undefined;
      values?: ({
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | undefined)[] | undefined;
    }, {
      value?: {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | null | undefined;
      values?: ({
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | undefined)[] | undefined;
    }>;
  }, "strip", z.ZodTypeAny, {
    type: "exception";
    data: {
      value?: {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | null | undefined;
      values?: ({
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | undefined)[] | undefined;
    };
  }, {
    type: "exception";
    data: {
      value?: {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | null | undefined;
      values?: ({
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | undefined)[] | undefined;
    };
  }>, z.ZodObject<{
    type: z.ZodLiteral<"message">;
    data: z.ZodObject<{
      formatted: z.ZodOptional<z.ZodNullable<z.ZodString>>;
      message: z.ZodOptional<z.ZodNullable<z.ZodString>>;
      params: z.ZodOptional<z.ZodOptional<z.ZodArray<z.ZodUnknown, "many">>>;
    }, "strip", z.ZodTypeAny, {
      params?: unknown[] | undefined;
      message?: string | null | undefined;
      formatted?: string | null | undefined;
    }, {
      params?: unknown[] | undefined;
      message?: string | null | undefined;
      formatted?: string | null | undefined;
    }>;
  }, "strip", z.ZodTypeAny, {
    type: "message";
    data: {
      params?: unknown[] | undefined;
      message?: string | null | undefined;
      formatted?: string | null | undefined;
    };
  }, {
    type: "message";
    data: {
      params?: unknown[] | undefined;
      message?: string | null | undefined;
      formatted?: string | null | undefined;
    };
  }>, z.ZodObject<{
    type: z.ZodLiteral<"threads">;
    data: z.ZodObject<{
      values: z.ZodOptional<z.ZodArray<z.ZodObject<{
        id: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        current: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        crashed: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        state: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        stacktrace: z.ZodOptional<z.ZodNullable<z.ZodObject<{
          frames: z.ZodArray<z.ZodObject<{
            filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            function: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            lineNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            colNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            absPath: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            module: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            context: z.ZodOptional<z.ZodArray<z.ZodTuple<[z.ZodNumber, z.ZodString], null>, "many">>;
            inApp: z.ZodOptional<z.ZodOptional<z.ZodBoolean>>;
            vars: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>>;
          }, "strip", z.ZodTypeAny, {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }, {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }>, "many">;
        }, "strip", z.ZodTypeAny, {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        }, {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        }>>>;
      }, "strip", z.ZodTypeAny, {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }, {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }>, "many">>;
    }, "strip", z.ZodTypeAny, {
      values?: {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }[] | undefined;
    }, {
      values?: {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }[] | undefined;
    }>;
  }, "strip", z.ZodTypeAny, {
    type: "threads";
    data: {
      values?: {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }[] | undefined;
    };
  }, {
    type: "threads";
    data: {
      values?: {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }[] | undefined;
    };
  }>, z.ZodObject<{
    type: z.ZodLiteral<"request">;
    data: z.ZodObject<{
      method: z.ZodOptional<z.ZodNullable<z.ZodString>>;
      url: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
      method?: string | null | undefined;
      url?: string | null | undefined;
    }, {
      method?: string | null | undefined;
      url?: string | null | undefined;
    }>;
  }, "strip", z.ZodTypeAny, {
    type: "request";
    data: {
      method?: string | null | undefined;
      url?: string | null | undefined;
    };
  }, {
    type: "request";
    data: {
      method?: string | null | undefined;
      url?: string | null | undefined;
    };
  }>, z.ZodObject<{
    type: z.ZodLiteral<"breadcrumbs">;
    data: z.ZodObject<{
      values: z.ZodOptional<z.ZodArray<z.ZodObject<{
        timestamp: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        category: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        level: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        message: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        data: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodUnknown>>>;
      }, "strip", z.ZodTypeAny, {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }, {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }>, "many">>;
    }, "strip", z.ZodTypeAny, {
      values?: {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }[] | undefined;
    }, {
      values?: {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }[] | undefined;
    }>;
  }, "strip", z.ZodTypeAny, {
    type: "breadcrumbs";
    data: {
      values?: {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }[] | undefined;
    };
  }, {
    type: "breadcrumbs";
    data: {
      values?: {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }[] | undefined;
    };
  }>, z.ZodObject<{
    type: z.ZodLiteral<"spans">;
    data: z.ZodUnknown;
  }, "strip", z.ZodTypeAny, {
    type: "spans";
    data?: unknown;
  }, {
    type: "spans";
    data?: unknown;
  }>, z.ZodObject<{
    type: z.ZodString;
    data: z.ZodUnknown;
  }, "strip", z.ZodTypeAny, {
    type: string;
    data?: unknown;
  }, {
    type: string;
    data?: unknown;
  }>]>, "many">;
  contexts: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
    type: z.ZodUnion<[z.ZodLiteral<"default">, z.ZodLiteral<"runtime">, z.ZodLiteral<"os">, z.ZodLiteral<"trace">, z.ZodUnknown]>;
  }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
    type: z.ZodUnion<[z.ZodLiteral<"default">, z.ZodLiteral<"runtime">, z.ZodLiteral<"os">, z.ZodLiteral<"trace">, z.ZodUnknown]>;
  }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
    type: z.ZodUnion<[z.ZodLiteral<"default">, z.ZodLiteral<"runtime">, z.ZodLiteral<"os">, z.ZodLiteral<"trace">, z.ZodUnknown]>;
  }, z.ZodTypeAny, "passthrough">>>>;
}, "type"> & {
  type: z.ZodLiteral<"error">;
  culprit: z.ZodNullable<z.ZodString>;
  dateCreated: z.ZodString;
}, "strip", z.ZodTypeAny, {
  entries: ({
    type: "exception";
    data: {
      value?: {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | null | undefined;
      values?: ({
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | undefined)[] | undefined;
    };
  } | {
    type: "message";
    data: {
      params?: unknown[] | undefined;
      message?: string | null | undefined;
      formatted?: string | null | undefined;
    };
  } | {
    type: "threads";
    data: {
      values?: {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }[] | undefined;
    };
  } | {
    type: "request";
    data: {
      method?: string | null | undefined;
      url?: string | null | undefined;
    };
  } | {
    type: "breadcrumbs";
    data: {
      values?: {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }[] | undefined;
    };
  } | {
    type: "spans";
    data?: unknown;
  } | {
    type: string;
    data?: unknown;
  })[];
  message: string | null;
  type: "error";
  id: string;
  title: string;
  culprit: string | null;
  dateCreated: string;
  platform?: string | null | undefined;
  contexts?: Record<string, z.objectOutputType<{
    type: z.ZodUnion<[z.ZodLiteral<"default">, z.ZodLiteral<"runtime">, z.ZodLiteral<"os">, z.ZodLiteral<"trace">, z.ZodUnknown]>;
  }, z.ZodTypeAny, "passthrough">> | undefined;
}, {
  entries: ({
    type: "exception";
    data: {
      value?: {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | null | undefined;
      values?: ({
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | undefined)[] | undefined;
    };
  } | {
    type: "message";
    data: {
      params?: unknown[] | undefined;
      message?: string | null | undefined;
      formatted?: string | null | undefined;
    };
  } | {
    type: "threads";
    data: {
      values?: {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }[] | undefined;
    };
  } | {
    type: "request";
    data: {
      method?: string | null | undefined;
      url?: string | null | undefined;
    };
  } | {
    type: "breadcrumbs";
    data: {
      values?: {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }[] | undefined;
    };
  } | {
    type: "spans";
    data?: unknown;
  } | {
    type: string;
    data?: unknown;
  })[];
  message: string | null;
  type: "error";
  id: string;
  title: string;
  culprit: string | null;
  dateCreated: string;
  platform?: string | null | undefined;
  contexts?: Record<string, z.objectInputType<{
    type: z.ZodUnion<[z.ZodLiteral<"default">, z.ZodLiteral<"runtime">, z.ZodLiteral<"os">, z.ZodLiteral<"trace">, z.ZodUnknown]>;
  }, z.ZodTypeAny, "passthrough">> | undefined;
}>, z.ZodObject<Omit<{
  id: z.ZodString;
  title: z.ZodString;
  message: z.ZodNullable<z.ZodString>;
  platform: z.ZodOptional<z.ZodNullable<z.ZodString>>;
  type: z.ZodUnknown;
  entries: z.ZodArray<z.ZodUnion<[z.ZodObject<{
    type: z.ZodLiteral<"exception">;
    data: z.ZodObject<{
      values: z.ZodOptional<z.ZodArray<z.ZodOptional<z.ZodObject<{
        mechanism: z.ZodOptional<z.ZodObject<{
          type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
          handled: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        }, "strip", z.ZodTypeAny, {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        }, {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        }>>;
        type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        value: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        stacktrace: z.ZodOptional<z.ZodObject<{
          frames: z.ZodArray<z.ZodObject<{
            filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            function: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            lineNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            colNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            absPath: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            module: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            context: z.ZodOptional<z.ZodArray<z.ZodTuple<[z.ZodNumber, z.ZodString], null>, "many">>;
            inApp: z.ZodOptional<z.ZodOptional<z.ZodBoolean>>;
            vars: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>>;
          }, "strip", z.ZodTypeAny, {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }, {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }>, "many">;
        }, "strip", z.ZodTypeAny, {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        }, {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        }>>;
      }, "strip", z.ZodTypeAny, {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      }, {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      }>>, "many">>;
      value: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodObject<{
        mechanism: z.ZodOptional<z.ZodObject<{
          type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
          handled: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        }, "strip", z.ZodTypeAny, {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        }, {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        }>>;
        type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        value: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        stacktrace: z.ZodOptional<z.ZodObject<{
          frames: z.ZodArray<z.ZodObject<{
            filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            function: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            lineNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            colNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            absPath: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            module: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            context: z.ZodOptional<z.ZodArray<z.ZodTuple<[z.ZodNumber, z.ZodString], null>, "many">>;
            inApp: z.ZodOptional<z.ZodOptional<z.ZodBoolean>>;
            vars: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>>;
          }, "strip", z.ZodTypeAny, {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }, {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }>, "many">;
        }, "strip", z.ZodTypeAny, {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        }, {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        }>>;
      }, "strip", z.ZodTypeAny, {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      }, {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      }>>>>;
    }, "strip", z.ZodTypeAny, {
      value?: {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | null | undefined;
      values?: ({
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | undefined)[] | undefined;
    }, {
      value?: {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | null | undefined;
      values?: ({
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | undefined)[] | undefined;
    }>;
  }, "strip", z.ZodTypeAny, {
    type: "exception";
    data: {
      value?: {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | null | undefined;
      values?: ({
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | undefined)[] | undefined;
    };
  }, {
    type: "exception";
    data: {
      value?: {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | null | undefined;
      values?: ({
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | undefined)[] | undefined;
    };
  }>, z.ZodObject<{
    type: z.ZodLiteral<"message">;
    data: z.ZodObject<{
      formatted: z.ZodOptional<z.ZodNullable<z.ZodString>>;
      message: z.ZodOptional<z.ZodNullable<z.ZodString>>;
      params: z.ZodOptional<z.ZodOptional<z.ZodArray<z.ZodUnknown, "many">>>;
    }, "strip", z.ZodTypeAny, {
      params?: unknown[] | undefined;
      message?: string | null | undefined;
      formatted?: string | null | undefined;
    }, {
      params?: unknown[] | undefined;
      message?: string | null | undefined;
      formatted?: string | null | undefined;
    }>;
  }, "strip", z.ZodTypeAny, {
    type: "message";
    data: {
      params?: unknown[] | undefined;
      message?: string | null | undefined;
      formatted?: string | null | undefined;
    };
  }, {
    type: "message";
    data: {
      params?: unknown[] | undefined;
      message?: string | null | undefined;
      formatted?: string | null | undefined;
    };
  }>, z.ZodObject<{
    type: z.ZodLiteral<"threads">;
    data: z.ZodObject<{
      values: z.ZodOptional<z.ZodArray<z.ZodObject<{
        id: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        current: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        crashed: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        state: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        stacktrace: z.ZodOptional<z.ZodNullable<z.ZodObject<{
          frames: z.ZodArray<z.ZodObject<{
            filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            function: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            lineNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            colNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            absPath: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            module: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            context: z.ZodOptional<z.ZodArray<z.ZodTuple<[z.ZodNumber, z.ZodString], null>, "many">>;
            inApp: z.ZodOptional<z.ZodOptional<z.ZodBoolean>>;
            vars: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>>;
          }, "strip", z.ZodTypeAny, {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }, {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }>, "many">;
        }, "strip", z.ZodTypeAny, {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        }, {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        }>>>;
      }, "strip", z.ZodTypeAny, {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }, {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }>, "many">>;
    }, "strip", z.ZodTypeAny, {
      values?: {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }[] | undefined;
    }, {
      values?: {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }[] | undefined;
    }>;
  }, "strip", z.ZodTypeAny, {
    type: "threads";
    data: {
      values?: {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }[] | undefined;
    };
  }, {
    type: "threads";
    data: {
      values?: {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }[] | undefined;
    };
  }>, z.ZodObject<{
    type: z.ZodLiteral<"request">;
    data: z.ZodObject<{
      method: z.ZodOptional<z.ZodNullable<z.ZodString>>;
      url: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
      method?: string | null | undefined;
      url?: string | null | undefined;
    }, {
      method?: string | null | undefined;
      url?: string | null | undefined;
    }>;
  }, "strip", z.ZodTypeAny, {
    type: "request";
    data: {
      method?: string | null | undefined;
      url?: string | null | undefined;
    };
  }, {
    type: "request";
    data: {
      method?: string | null | undefined;
      url?: string | null | undefined;
    };
  }>, z.ZodObject<{
    type: z.ZodLiteral<"breadcrumbs">;
    data: z.ZodObject<{
      values: z.ZodOptional<z.ZodArray<z.ZodObject<{
        timestamp: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        category: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        level: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        message: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        data: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodUnknown>>>;
      }, "strip", z.ZodTypeAny, {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }, {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }>, "many">>;
    }, "strip", z.ZodTypeAny, {
      values?: {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }[] | undefined;
    }, {
      values?: {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }[] | undefined;
    }>;
  }, "strip", z.ZodTypeAny, {
    type: "breadcrumbs";
    data: {
      values?: {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }[] | undefined;
    };
  }, {
    type: "breadcrumbs";
    data: {
      values?: {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }[] | undefined;
    };
  }>, z.ZodObject<{
    type: z.ZodLiteral<"spans">;
    data: z.ZodUnknown;
  }, "strip", z.ZodTypeAny, {
    type: "spans";
    data?: unknown;
  }, {
    type: "spans";
    data?: unknown;
  }>, z.ZodObject<{
    type: z.ZodString;
    data: z.ZodUnknown;
  }, "strip", z.ZodTypeAny, {
    type: string;
    data?: unknown;
  }, {
    type: string;
    data?: unknown;
  }>]>, "many">;
  contexts: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
    type: z.ZodUnion<[z.ZodLiteral<"default">, z.ZodLiteral<"runtime">, z.ZodLiteral<"os">, z.ZodLiteral<"trace">, z.ZodUnknown]>;
  }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
    type: z.ZodUnion<[z.ZodLiteral<"default">, z.ZodLiteral<"runtime">, z.ZodLiteral<"os">, z.ZodLiteral<"trace">, z.ZodUnknown]>;
  }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
    type: z.ZodUnion<[z.ZodLiteral<"default">, z.ZodLiteral<"runtime">, z.ZodLiteral<"os">, z.ZodLiteral<"trace">, z.ZodUnknown]>;
  }, z.ZodTypeAny, "passthrough">>>>;
}, "type"> & {
  type: z.ZodLiteral<"transaction">;
  occurrence: z.ZodObject<{
    issueTitle: z.ZodString;
    culprit: z.ZodNullable<z.ZodString>;
  }, "strip", z.ZodTypeAny, {
    culprit: string | null;
    issueTitle: string;
  }, {
    culprit: string | null;
    issueTitle: string;
  }>;
}, "strip", z.ZodTypeAny, {
  entries: ({
    type: "exception";
    data: {
      value?: {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | null | undefined;
      values?: ({
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | undefined)[] | undefined;
    };
  } | {
    type: "message";
    data: {
      params?: unknown[] | undefined;
      message?: string | null | undefined;
      formatted?: string | null | undefined;
    };
  } | {
    type: "threads";
    data: {
      values?: {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }[] | undefined;
    };
  } | {
    type: "request";
    data: {
      method?: string | null | undefined;
      url?: string | null | undefined;
    };
  } | {
    type: "breadcrumbs";
    data: {
      values?: {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }[] | undefined;
    };
  } | {
    type: "spans";
    data?: unknown;
  } | {
    type: string;
    data?: unknown;
  })[];
  message: string | null;
  type: "transaction";
  id: string;
  title: string;
  occurrence: {
    culprit: string | null;
    issueTitle: string;
  };
  platform?: string | null | undefined;
  contexts?: Record<string, z.objectOutputType<{
    type: z.ZodUnion<[z.ZodLiteral<"default">, z.ZodLiteral<"runtime">, z.ZodLiteral<"os">, z.ZodLiteral<"trace">, z.ZodUnknown]>;
  }, z.ZodTypeAny, "passthrough">> | undefined;
}, {
  entries: ({
    type: "exception";
    data: {
      value?: {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | null | undefined;
      values?: ({
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | undefined)[] | undefined;
    };
  } | {
    type: "message";
    data: {
      params?: unknown[] | undefined;
      message?: string | null | undefined;
      formatted?: string | null | undefined;
    };
  } | {
    type: "threads";
    data: {
      values?: {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }[] | undefined;
    };
  } | {
    type: "request";
    data: {
      method?: string | null | undefined;
      url?: string | null | undefined;
    };
  } | {
    type: "breadcrumbs";
    data: {
      values?: {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }[] | undefined;
    };
  } | {
    type: "spans";
    data?: unknown;
  } | {
    type: string;
    data?: unknown;
  })[];
  message: string | null;
  type: "transaction";
  id: string;
  title: string;
  occurrence: {
    culprit: string | null;
    issueTitle: string;
  };
  platform?: string | null | undefined;
  contexts?: Record<string, z.objectInputType<{
    type: z.ZodUnion<[z.ZodLiteral<"default">, z.ZodLiteral<"runtime">, z.ZodLiteral<"os">, z.ZodLiteral<"trace">, z.ZodUnknown]>;
  }, z.ZodTypeAny, "passthrough">> | undefined;
}>, z.ZodObject<Omit<{
  id: z.ZodString;
  title: z.ZodString;
  message: z.ZodNullable<z.ZodString>;
  platform: z.ZodOptional<z.ZodNullable<z.ZodString>>;
  type: z.ZodUnknown;
  entries: z.ZodArray<z.ZodUnion<[z.ZodObject<{
    type: z.ZodLiteral<"exception">;
    data: z.ZodObject<{
      values: z.ZodOptional<z.ZodArray<z.ZodOptional<z.ZodObject<{
        mechanism: z.ZodOptional<z.ZodObject<{
          type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
          handled: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        }, "strip", z.ZodTypeAny, {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        }, {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        }>>;
        type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        value: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        stacktrace: z.ZodOptional<z.ZodObject<{
          frames: z.ZodArray<z.ZodObject<{
            filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            function: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            lineNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            colNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            absPath: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            module: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            context: z.ZodOptional<z.ZodArray<z.ZodTuple<[z.ZodNumber, z.ZodString], null>, "many">>;
            inApp: z.ZodOptional<z.ZodOptional<z.ZodBoolean>>;
            vars: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>>;
          }, "strip", z.ZodTypeAny, {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }, {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }>, "many">;
        }, "strip", z.ZodTypeAny, {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        }, {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        }>>;
      }, "strip", z.ZodTypeAny, {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      }, {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      }>>, "many">>;
      value: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodObject<{
        mechanism: z.ZodOptional<z.ZodObject<{
          type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
          handled: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        }, "strip", z.ZodTypeAny, {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        }, {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        }>>;
        type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        value: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        stacktrace: z.ZodOptional<z.ZodObject<{
          frames: z.ZodArray<z.ZodObject<{
            filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            function: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            lineNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            colNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            absPath: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            module: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            context: z.ZodOptional<z.ZodArray<z.ZodTuple<[z.ZodNumber, z.ZodString], null>, "many">>;
            inApp: z.ZodOptional<z.ZodOptional<z.ZodBoolean>>;
            vars: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>>;
          }, "strip", z.ZodTypeAny, {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }, {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }>, "many">;
        }, "strip", z.ZodTypeAny, {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        }, {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        }>>;
      }, "strip", z.ZodTypeAny, {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      }, {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      }>>>>;
    }, "strip", z.ZodTypeAny, {
      value?: {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | null | undefined;
      values?: ({
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | undefined)[] | undefined;
    }, {
      value?: {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | null | undefined;
      values?: ({
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | undefined)[] | undefined;
    }>;
  }, "strip", z.ZodTypeAny, {
    type: "exception";
    data: {
      value?: {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | null | undefined;
      values?: ({
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | undefined)[] | undefined;
    };
  }, {
    type: "exception";
    data: {
      value?: {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | null | undefined;
      values?: ({
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | undefined)[] | undefined;
    };
  }>, z.ZodObject<{
    type: z.ZodLiteral<"message">;
    data: z.ZodObject<{
      formatted: z.ZodOptional<z.ZodNullable<z.ZodString>>;
      message: z.ZodOptional<z.ZodNullable<z.ZodString>>;
      params: z.ZodOptional<z.ZodOptional<z.ZodArray<z.ZodUnknown, "many">>>;
    }, "strip", z.ZodTypeAny, {
      params?: unknown[] | undefined;
      message?: string | null | undefined;
      formatted?: string | null | undefined;
    }, {
      params?: unknown[] | undefined;
      message?: string | null | undefined;
      formatted?: string | null | undefined;
    }>;
  }, "strip", z.ZodTypeAny, {
    type: "message";
    data: {
      params?: unknown[] | undefined;
      message?: string | null | undefined;
      formatted?: string | null | undefined;
    };
  }, {
    type: "message";
    data: {
      params?: unknown[] | undefined;
      message?: string | null | undefined;
      formatted?: string | null | undefined;
    };
  }>, z.ZodObject<{
    type: z.ZodLiteral<"threads">;
    data: z.ZodObject<{
      values: z.ZodOptional<z.ZodArray<z.ZodObject<{
        id: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        current: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        crashed: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        state: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        stacktrace: z.ZodOptional<z.ZodNullable<z.ZodObject<{
          frames: z.ZodArray<z.ZodObject<{
            filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            function: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            lineNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            colNo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            absPath: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            module: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            context: z.ZodOptional<z.ZodArray<z.ZodTuple<[z.ZodNumber, z.ZodString], null>, "many">>;
            inApp: z.ZodOptional<z.ZodOptional<z.ZodBoolean>>;
            vars: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>>;
          }, "strip", z.ZodTypeAny, {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }, {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }>, "many">;
        }, "strip", z.ZodTypeAny, {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        }, {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        }>>>;
      }, "strip", z.ZodTypeAny, {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }, {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }>, "many">>;
    }, "strip", z.ZodTypeAny, {
      values?: {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }[] | undefined;
    }, {
      values?: {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }[] | undefined;
    }>;
  }, "strip", z.ZodTypeAny, {
    type: "threads";
    data: {
      values?: {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }[] | undefined;
    };
  }, {
    type: "threads";
    data: {
      values?: {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }[] | undefined;
    };
  }>, z.ZodObject<{
    type: z.ZodLiteral<"request">;
    data: z.ZodObject<{
      method: z.ZodOptional<z.ZodNullable<z.ZodString>>;
      url: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
      method?: string | null | undefined;
      url?: string | null | undefined;
    }, {
      method?: string | null | undefined;
      url?: string | null | undefined;
    }>;
  }, "strip", z.ZodTypeAny, {
    type: "request";
    data: {
      method?: string | null | undefined;
      url?: string | null | undefined;
    };
  }, {
    type: "request";
    data: {
      method?: string | null | undefined;
      url?: string | null | undefined;
    };
  }>, z.ZodObject<{
    type: z.ZodLiteral<"breadcrumbs">;
    data: z.ZodObject<{
      values: z.ZodOptional<z.ZodArray<z.ZodObject<{
        timestamp: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        category: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        level: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        message: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        data: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodUnknown>>>;
      }, "strip", z.ZodTypeAny, {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }, {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }>, "many">>;
    }, "strip", z.ZodTypeAny, {
      values?: {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }[] | undefined;
    }, {
      values?: {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }[] | undefined;
    }>;
  }, "strip", z.ZodTypeAny, {
    type: "breadcrumbs";
    data: {
      values?: {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }[] | undefined;
    };
  }, {
    type: "breadcrumbs";
    data: {
      values?: {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }[] | undefined;
    };
  }>, z.ZodObject<{
    type: z.ZodLiteral<"spans">;
    data: z.ZodUnknown;
  }, "strip", z.ZodTypeAny, {
    type: "spans";
    data?: unknown;
  }, {
    type: "spans";
    data?: unknown;
  }>, z.ZodObject<{
    type: z.ZodString;
    data: z.ZodUnknown;
  }, "strip", z.ZodTypeAny, {
    type: string;
    data?: unknown;
  }, {
    type: string;
    data?: unknown;
  }>]>, "many">;
  contexts: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
    type: z.ZodUnion<[z.ZodLiteral<"default">, z.ZodLiteral<"runtime">, z.ZodLiteral<"os">, z.ZodLiteral<"trace">, z.ZodUnknown]>;
  }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
    type: z.ZodUnion<[z.ZodLiteral<"default">, z.ZodLiteral<"runtime">, z.ZodLiteral<"os">, z.ZodLiteral<"trace">, z.ZodUnknown]>;
  }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
    type: z.ZodUnion<[z.ZodLiteral<"default">, z.ZodLiteral<"runtime">, z.ZodLiteral<"os">, z.ZodLiteral<"trace">, z.ZodUnknown]>;
  }, z.ZodTypeAny, "passthrough">>>>;
}, "type"> & {
  type: z.ZodUnknown;
}, "strip", z.ZodTypeAny, {
  entries: ({
    type: "exception";
    data: {
      value?: {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | null | undefined;
      values?: ({
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | undefined)[] | undefined;
    };
  } | {
    type: "message";
    data: {
      params?: unknown[] | undefined;
      message?: string | null | undefined;
      formatted?: string | null | undefined;
    };
  } | {
    type: "threads";
    data: {
      values?: {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }[] | undefined;
    };
  } | {
    type: "request";
    data: {
      method?: string | null | undefined;
      url?: string | null | undefined;
    };
  } | {
    type: "breadcrumbs";
    data: {
      values?: {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }[] | undefined;
    };
  } | {
    type: "spans";
    data?: unknown;
  } | {
    type: string;
    data?: unknown;
  })[];
  message: string | null;
  id: string;
  title: string;
  platform?: string | null | undefined;
  type?: unknown;
  contexts?: Record<string, z.objectOutputType<{
    type: z.ZodUnion<[z.ZodLiteral<"default">, z.ZodLiteral<"runtime">, z.ZodLiteral<"os">, z.ZodLiteral<"trace">, z.ZodUnknown]>;
  }, z.ZodTypeAny, "passthrough">> | undefined;
}, {
  entries: ({
    type: "exception";
    data: {
      value?: {
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | null | undefined;
      values?: ({
        value?: string | null | undefined;
        type?: string | null | undefined;
        mechanism?: {
          type?: string | null | undefined;
          handled?: boolean | null | undefined;
        } | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | undefined;
      } | undefined)[] | undefined;
    };
  } | {
    type: "message";
    data: {
      params?: unknown[] | undefined;
      message?: string | null | undefined;
      formatted?: string | null | undefined;
    };
  } | {
    type: "threads";
    data: {
      values?: {
        name?: string | null | undefined;
        id?: number | null | undefined;
        stacktrace?: {
          frames: {
            function?: string | null | undefined;
            filename?: string | null | undefined;
            lineNo?: number | null | undefined;
            colNo?: number | null | undefined;
            absPath?: string | null | undefined;
            module?: string | null | undefined;
            context?: [number, string][] | undefined;
            inApp?: boolean | undefined;
            vars?: Record<string, unknown> | undefined;
          }[];
        } | null | undefined;
        current?: boolean | null | undefined;
        crashed?: boolean | null | undefined;
        state?: string | null | undefined;
      }[] | undefined;
    };
  } | {
    type: "request";
    data: {
      method?: string | null | undefined;
      url?: string | null | undefined;
    };
  } | {
    type: "breadcrumbs";
    data: {
      values?: {
        message?: string | null | undefined;
        type?: string | null | undefined;
        data?: Record<string, unknown> | null | undefined;
        timestamp?: string | null | undefined;
        category?: string | null | undefined;
        level?: string | null | undefined;
      }[] | undefined;
    };
  } | {
    type: "spans";
    data?: unknown;
  } | {
    type: string;
    data?: unknown;
  })[];
  message: string | null;
  id: string;
  title: string;
  platform?: string | null | undefined;
  type?: unknown;
  contexts?: Record<string, z.objectInputType<{
    type: z.ZodUnion<[z.ZodLiteral<"default">, z.ZodLiteral<"runtime">, z.ZodLiteral<"os">, z.ZodLiteral<"trace">, z.ZodUnknown]>;
  }, z.ZodTypeAny, "passthrough">> | undefined;
}>]>;
declare const EventsResponseSchema: z.ZodObject<{
  data: z.ZodArray<z.ZodUnknown, "many">;
  meta: z.ZodObject<{
    fields: z.ZodRecord<z.ZodString, z.ZodString>;
  }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
    fields: z.ZodRecord<z.ZodString, z.ZodString>;
  }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
    fields: z.ZodRecord<z.ZodString, z.ZodString>;
  }, z.ZodTypeAny, "passthrough">>;
}, "strip", z.ZodTypeAny, {
  data: unknown[];
  meta: {
    fields: Record<string, string>;
  } & {
    [k: string]: unknown;
  };
}, {
  data: unknown[];
  meta: {
    fields: Record<string, string>;
  } & {
    [k: string]: unknown;
  };
}>;
declare const ErrorsSearchResponseSchema: z.ZodObject<{
  meta: z.ZodObject<{
    fields: z.ZodRecord<z.ZodString, z.ZodString>;
  }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
    fields: z.ZodRecord<z.ZodString, z.ZodString>;
  }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
    fields: z.ZodRecord<z.ZodString, z.ZodString>;
  }, z.ZodTypeAny, "passthrough">>;
} & {
  data: z.ZodArray<z.ZodObject<{
    issue: z.ZodString;
    "issue.id": z.ZodUnion<[z.ZodString, z.ZodNumber]>;
    project: z.ZodString;
    title: z.ZodString;
    "count()": z.ZodNumber;
    "last_seen()": z.ZodString;
  }, "strip", z.ZodTypeAny, {
    issue: string;
    title: string;
    project: string;
    "issue.id": string | number;
    "count()": number;
    "last_seen()": string;
  }, {
    issue: string;
    title: string;
    project: string;
    "issue.id": string | number;
    "count()": number;
    "last_seen()": string;
  }>, "many">;
}, "strip", z.ZodTypeAny, {
  data: {
    issue: string;
    title: string;
    project: string;
    "issue.id": string | number;
    "count()": number;
    "last_seen()": string;
  }[];
  meta: {
    fields: Record<string, string>;
  } & {
    [k: string]: unknown;
  };
}, {
  data: {
    issue: string;
    title: string;
    project: string;
    "issue.id": string | number;
    "count()": number;
    "last_seen()": string;
  }[];
  meta: {
    fields: Record<string, string>;
  } & {
    [k: string]: unknown;
  };
}>;
declare const SpansSearchResponseSchema: z.ZodObject<{
  meta: z.ZodObject<{
    fields: z.ZodRecord<z.ZodString, z.ZodString>;
  }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
    fields: z.ZodRecord<z.ZodString, z.ZodString>;
  }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
    fields: z.ZodRecord<z.ZodString, z.ZodString>;
  }, z.ZodTypeAny, "passthrough">>;
} & {
  data: z.ZodArray<z.ZodObject<{
    id: z.ZodString;
    trace: z.ZodString;
    "span.op": z.ZodString;
    "span.description": z.ZodString;
    "span.duration": z.ZodNumber;
    transaction: z.ZodString;
    project: z.ZodString;
    timestamp: z.ZodString;
  }, "strip", z.ZodTypeAny, {
    id: string;
    project: string;
    transaction: string;
    timestamp: string;
    trace: string;
    "span.op": string;
    "span.description": string;
    "span.duration": number;
  }, {
    id: string;
    project: string;
    transaction: string;
    timestamp: string;
    trace: string;
    "span.op": string;
    "span.description": string;
    "span.duration": number;
  }>, "many">;
}, "strip", z.ZodTypeAny, {
  data: {
    id: string;
    project: string;
    transaction: string;
    timestamp: string;
    trace: string;
    "span.op": string;
    "span.description": string;
    "span.duration": number;
  }[];
  meta: {
    fields: Record<string, string>;
  } & {
    [k: string]: unknown;
  };
}, {
  data: {
    id: string;
    project: string;
    transaction: string;
    timestamp: string;
    trace: string;
    "span.op": string;
    "span.description": string;
    "span.duration": number;
  }[];
  meta: {
    fields: Record<string, string>;
  } & {
    [k: string]: unknown;
  };
}>;
declare const AutofixRunSchema: z.ZodObject<{
  run_id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
}, "passthrough", z.ZodTypeAny, z.objectOutputType<{
  run_id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
}, z.ZodTypeAny, "passthrough">, z.objectInputType<{
  run_id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
}, z.ZodTypeAny, "passthrough">>;
declare const AutofixRunStepDefaultSchema: z.ZodObject<{
  key: z.ZodString;
  index: z.ZodNumber;
  status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
  title: z.ZodString;
  output_stream: z.ZodNullable<z.ZodString>;
  progress: z.ZodArray<z.ZodObject<{
    data: z.ZodNullable<z.ZodUnknown>;
    message: z.ZodString;
    timestamp: z.ZodString;
    type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
  }, "strip", z.ZodTypeAny, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }>, "many">;
} & {
  type: z.ZodLiteral<"default">;
  insights: z.ZodNullable<z.ZodArray<z.ZodObject<{
    change_diff: z.ZodNullable<z.ZodUnknown>;
    generated_at_memory_index: z.ZodNumber;
    insight: z.ZodString;
    justification: z.ZodString;
    type: z.ZodLiteral<"insight">;
  }, "strip", z.ZodTypeAny, {
    insight: string;
    type: "insight";
    generated_at_memory_index: number;
    justification: string;
    change_diff?: unknown;
  }, {
    insight: string;
    type: "insight";
    generated_at_memory_index: number;
    justification: string;
    change_diff?: unknown;
  }>, "many">>;
}, "passthrough", z.ZodTypeAny, z.objectOutputType<{
  key: z.ZodString;
  index: z.ZodNumber;
  status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
  title: z.ZodString;
  output_stream: z.ZodNullable<z.ZodString>;
  progress: z.ZodArray<z.ZodObject<{
    data: z.ZodNullable<z.ZodUnknown>;
    message: z.ZodString;
    timestamp: z.ZodString;
    type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
  }, "strip", z.ZodTypeAny, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }>, "many">;
} & {
  type: z.ZodLiteral<"default">;
  insights: z.ZodNullable<z.ZodArray<z.ZodObject<{
    change_diff: z.ZodNullable<z.ZodUnknown>;
    generated_at_memory_index: z.ZodNumber;
    insight: z.ZodString;
    justification: z.ZodString;
    type: z.ZodLiteral<"insight">;
  }, "strip", z.ZodTypeAny, {
    insight: string;
    type: "insight";
    generated_at_memory_index: number;
    justification: string;
    change_diff?: unknown;
  }, {
    insight: string;
    type: "insight";
    generated_at_memory_index: number;
    justification: string;
    change_diff?: unknown;
  }>, "many">>;
}, z.ZodTypeAny, "passthrough">, z.objectInputType<{
  key: z.ZodString;
  index: z.ZodNumber;
  status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
  title: z.ZodString;
  output_stream: z.ZodNullable<z.ZodString>;
  progress: z.ZodArray<z.ZodObject<{
    data: z.ZodNullable<z.ZodUnknown>;
    message: z.ZodString;
    timestamp: z.ZodString;
    type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
  }, "strip", z.ZodTypeAny, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }>, "many">;
} & {
  type: z.ZodLiteral<"default">;
  insights: z.ZodNullable<z.ZodArray<z.ZodObject<{
    change_diff: z.ZodNullable<z.ZodUnknown>;
    generated_at_memory_index: z.ZodNumber;
    insight: z.ZodString;
    justification: z.ZodString;
    type: z.ZodLiteral<"insight">;
  }, "strip", z.ZodTypeAny, {
    insight: string;
    type: "insight";
    generated_at_memory_index: number;
    justification: string;
    change_diff?: unknown;
  }, {
    insight: string;
    type: "insight";
    generated_at_memory_index: number;
    justification: string;
    change_diff?: unknown;
  }>, "many">>;
}, z.ZodTypeAny, "passthrough">>;
declare const AutofixRunStepRootCauseAnalysisSchema: z.ZodObject<{
  key: z.ZodString;
  index: z.ZodNumber;
  status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
  title: z.ZodString;
  output_stream: z.ZodNullable<z.ZodString>;
  progress: z.ZodArray<z.ZodObject<{
    data: z.ZodNullable<z.ZodUnknown>;
    message: z.ZodString;
    timestamp: z.ZodString;
    type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
  }, "strip", z.ZodTypeAny, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }>, "many">;
} & {
  type: z.ZodLiteral<"root_cause_analysis">;
  causes: z.ZodArray<z.ZodObject<{
    description: z.ZodString;
    id: z.ZodNumber;
    root_cause_reproduction: z.ZodArray<z.ZodObject<{
      code_snippet_and_analysis: z.ZodString;
      is_most_important_event: z.ZodBoolean;
      relevant_code_file: z.ZodNullable<z.ZodObject<{
        file_path: z.ZodString;
        repo_name: z.ZodString;
      }, "strip", z.ZodTypeAny, {
        file_path: string;
        repo_name: string;
      }, {
        file_path: string;
        repo_name: string;
      }>>;
      timeline_item_type: z.ZodString;
      title: z.ZodString;
    }, "strip", z.ZodTypeAny, {
      title: string;
      code_snippet_and_analysis: string;
      is_most_important_event: boolean;
      relevant_code_file: {
        file_path: string;
        repo_name: string;
      } | null;
      timeline_item_type: string;
    }, {
      title: string;
      code_snippet_and_analysis: string;
      is_most_important_event: boolean;
      relevant_code_file: {
        file_path: string;
        repo_name: string;
      } | null;
      timeline_item_type: string;
    }>, "many">;
  }, "strip", z.ZodTypeAny, {
    id: number;
    description: string;
    root_cause_reproduction: {
      title: string;
      code_snippet_and_analysis: string;
      is_most_important_event: boolean;
      relevant_code_file: {
        file_path: string;
        repo_name: string;
      } | null;
      timeline_item_type: string;
    }[];
  }, {
    id: number;
    description: string;
    root_cause_reproduction: {
      title: string;
      code_snippet_and_analysis: string;
      is_most_important_event: boolean;
      relevant_code_file: {
        file_path: string;
        repo_name: string;
      } | null;
      timeline_item_type: string;
    }[];
  }>, "many">;
}, "passthrough", z.ZodTypeAny, z.objectOutputType<{
  key: z.ZodString;
  index: z.ZodNumber;
  status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
  title: z.ZodString;
  output_stream: z.ZodNullable<z.ZodString>;
  progress: z.ZodArray<z.ZodObject<{
    data: z.ZodNullable<z.ZodUnknown>;
    message: z.ZodString;
    timestamp: z.ZodString;
    type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
  }, "strip", z.ZodTypeAny, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }>, "many">;
} & {
  type: z.ZodLiteral<"root_cause_analysis">;
  causes: z.ZodArray<z.ZodObject<{
    description: z.ZodString;
    id: z.ZodNumber;
    root_cause_reproduction: z.ZodArray<z.ZodObject<{
      code_snippet_and_analysis: z.ZodString;
      is_most_important_event: z.ZodBoolean;
      relevant_code_file: z.ZodNullable<z.ZodObject<{
        file_path: z.ZodString;
        repo_name: z.ZodString;
      }, "strip", z.ZodTypeAny, {
        file_path: string;
        repo_name: string;
      }, {
        file_path: string;
        repo_name: string;
      }>>;
      timeline_item_type: z.ZodString;
      title: z.ZodString;
    }, "strip", z.ZodTypeAny, {
      title: string;
      code_snippet_and_analysis: string;
      is_most_important_event: boolean;
      relevant_code_file: {
        file_path: string;
        repo_name: string;
      } | null;
      timeline_item_type: string;
    }, {
      title: string;
      code_snippet_and_analysis: string;
      is_most_important_event: boolean;
      relevant_code_file: {
        file_path: string;
        repo_name: string;
      } | null;
      timeline_item_type: string;
    }>, "many">;
  }, "strip", z.ZodTypeAny, {
    id: number;
    description: string;
    root_cause_reproduction: {
      title: string;
      code_snippet_and_analysis: string;
      is_most_important_event: boolean;
      relevant_code_file: {
        file_path: string;
        repo_name: string;
      } | null;
      timeline_item_type: string;
    }[];
  }, {
    id: number;
    description: string;
    root_cause_reproduction: {
      title: string;
      code_snippet_and_analysis: string;
      is_most_important_event: boolean;
      relevant_code_file: {
        file_path: string;
        repo_name: string;
      } | null;
      timeline_item_type: string;
    }[];
  }>, "many">;
}, z.ZodTypeAny, "passthrough">, z.objectInputType<{
  key: z.ZodString;
  index: z.ZodNumber;
  status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
  title: z.ZodString;
  output_stream: z.ZodNullable<z.ZodString>;
  progress: z.ZodArray<z.ZodObject<{
    data: z.ZodNullable<z.ZodUnknown>;
    message: z.ZodString;
    timestamp: z.ZodString;
    type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
  }, "strip", z.ZodTypeAny, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }>, "many">;
} & {
  type: z.ZodLiteral<"root_cause_analysis">;
  causes: z.ZodArray<z.ZodObject<{
    description: z.ZodString;
    id: z.ZodNumber;
    root_cause_reproduction: z.ZodArray<z.ZodObject<{
      code_snippet_and_analysis: z.ZodString;
      is_most_important_event: z.ZodBoolean;
      relevant_code_file: z.ZodNullable<z.ZodObject<{
        file_path: z.ZodString;
        repo_name: z.ZodString;
      }, "strip", z.ZodTypeAny, {
        file_path: string;
        repo_name: string;
      }, {
        file_path: string;
        repo_name: string;
      }>>;
      timeline_item_type: z.ZodString;
      title: z.ZodString;
    }, "strip", z.ZodTypeAny, {
      title: string;
      code_snippet_and_analysis: string;
      is_most_important_event: boolean;
      relevant_code_file: {
        file_path: string;
        repo_name: string;
      } | null;
      timeline_item_type: string;
    }, {
      title: string;
      code_snippet_and_analysis: string;
      is_most_important_event: boolean;
      relevant_code_file: {
        file_path: string;
        repo_name: string;
      } | null;
      timeline_item_type: string;
    }>, "many">;
  }, "strip", z.ZodTypeAny, {
    id: number;
    description: string;
    root_cause_reproduction: {
      title: string;
      code_snippet_and_analysis: string;
      is_most_important_event: boolean;
      relevant_code_file: {
        file_path: string;
        repo_name: string;
      } | null;
      timeline_item_type: string;
    }[];
  }, {
    id: number;
    description: string;
    root_cause_reproduction: {
      title: string;
      code_snippet_and_analysis: string;
      is_most_important_event: boolean;
      relevant_code_file: {
        file_path: string;
        repo_name: string;
      } | null;
      timeline_item_type: string;
    }[];
  }>, "many">;
}, z.ZodTypeAny, "passthrough">>;
declare const AutofixRunStepSolutionSchema: z.ZodObject<{
  key: z.ZodString;
  index: z.ZodNumber;
  status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
  title: z.ZodString;
  output_stream: z.ZodNullable<z.ZodString>;
  progress: z.ZodArray<z.ZodObject<{
    data: z.ZodNullable<z.ZodUnknown>;
    message: z.ZodString;
    timestamp: z.ZodString;
    type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
  }, "strip", z.ZodTypeAny, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }>, "many">;
} & {
  type: z.ZodLiteral<"solution">;
  solution: z.ZodArray<z.ZodObject<{
    code_snippet_and_analysis: z.ZodNullable<z.ZodString>;
    is_active: z.ZodBoolean;
    is_most_important_event: z.ZodBoolean;
    relevant_code_file: z.ZodNull;
    timeline_item_type: z.ZodUnion<[z.ZodLiteral<"internal_code">, z.ZodLiteral<"repro_test">]>;
    title: z.ZodString;
  }, "strip", z.ZodTypeAny, {
    title: string;
    code_snippet_and_analysis: string | null;
    is_most_important_event: boolean;
    relevant_code_file: null;
    timeline_item_type: "internal_code" | "repro_test";
    is_active: boolean;
  }, {
    title: string;
    code_snippet_and_analysis: string | null;
    is_most_important_event: boolean;
    relevant_code_file: null;
    timeline_item_type: "internal_code" | "repro_test";
    is_active: boolean;
  }>, "many">;
}, "passthrough", z.ZodTypeAny, z.objectOutputType<{
  key: z.ZodString;
  index: z.ZodNumber;
  status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
  title: z.ZodString;
  output_stream: z.ZodNullable<z.ZodString>;
  progress: z.ZodArray<z.ZodObject<{
    data: z.ZodNullable<z.ZodUnknown>;
    message: z.ZodString;
    timestamp: z.ZodString;
    type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
  }, "strip", z.ZodTypeAny, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }>, "many">;
} & {
  type: z.ZodLiteral<"solution">;
  solution: z.ZodArray<z.ZodObject<{
    code_snippet_and_analysis: z.ZodNullable<z.ZodString>;
    is_active: z.ZodBoolean;
    is_most_important_event: z.ZodBoolean;
    relevant_code_file: z.ZodNull;
    timeline_item_type: z.ZodUnion<[z.ZodLiteral<"internal_code">, z.ZodLiteral<"repro_test">]>;
    title: z.ZodString;
  }, "strip", z.ZodTypeAny, {
    title: string;
    code_snippet_and_analysis: string | null;
    is_most_important_event: boolean;
    relevant_code_file: null;
    timeline_item_type: "internal_code" | "repro_test";
    is_active: boolean;
  }, {
    title: string;
    code_snippet_and_analysis: string | null;
    is_most_important_event: boolean;
    relevant_code_file: null;
    timeline_item_type: "internal_code" | "repro_test";
    is_active: boolean;
  }>, "many">;
}, z.ZodTypeAny, "passthrough">, z.objectInputType<{
  key: z.ZodString;
  index: z.ZodNumber;
  status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
  title: z.ZodString;
  output_stream: z.ZodNullable<z.ZodString>;
  progress: z.ZodArray<z.ZodObject<{
    data: z.ZodNullable<z.ZodUnknown>;
    message: z.ZodString;
    timestamp: z.ZodString;
    type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
  }, "strip", z.ZodTypeAny, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }>, "many">;
} & {
  type: z.ZodLiteral<"solution">;
  solution: z.ZodArray<z.ZodObject<{
    code_snippet_and_analysis: z.ZodNullable<z.ZodString>;
    is_active: z.ZodBoolean;
    is_most_important_event: z.ZodBoolean;
    relevant_code_file: z.ZodNull;
    timeline_item_type: z.ZodUnion<[z.ZodLiteral<"internal_code">, z.ZodLiteral<"repro_test">]>;
    title: z.ZodString;
  }, "strip", z.ZodTypeAny, {
    title: string;
    code_snippet_and_analysis: string | null;
    is_most_important_event: boolean;
    relevant_code_file: null;
    timeline_item_type: "internal_code" | "repro_test";
    is_active: boolean;
  }, {
    title: string;
    code_snippet_and_analysis: string | null;
    is_most_important_event: boolean;
    relevant_code_file: null;
    timeline_item_type: "internal_code" | "repro_test";
    is_active: boolean;
  }>, "many">;
}, z.ZodTypeAny, "passthrough">>;
declare const AutofixRunStepSchema: z.ZodUnion<[z.ZodObject<{
  key: z.ZodString;
  index: z.ZodNumber;
  status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
  title: z.ZodString;
  output_stream: z.ZodNullable<z.ZodString>;
  progress: z.ZodArray<z.ZodObject<{
    data: z.ZodNullable<z.ZodUnknown>;
    message: z.ZodString;
    timestamp: z.ZodString;
    type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
  }, "strip", z.ZodTypeAny, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }>, "many">;
} & {
  type: z.ZodLiteral<"default">;
  insights: z.ZodNullable<z.ZodArray<z.ZodObject<{
    change_diff: z.ZodNullable<z.ZodUnknown>;
    generated_at_memory_index: z.ZodNumber;
    insight: z.ZodString;
    justification: z.ZodString;
    type: z.ZodLiteral<"insight">;
  }, "strip", z.ZodTypeAny, {
    insight: string;
    type: "insight";
    generated_at_memory_index: number;
    justification: string;
    change_diff?: unknown;
  }, {
    insight: string;
    type: "insight";
    generated_at_memory_index: number;
    justification: string;
    change_diff?: unknown;
  }>, "many">>;
}, "passthrough", z.ZodTypeAny, z.objectOutputType<{
  key: z.ZodString;
  index: z.ZodNumber;
  status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
  title: z.ZodString;
  output_stream: z.ZodNullable<z.ZodString>;
  progress: z.ZodArray<z.ZodObject<{
    data: z.ZodNullable<z.ZodUnknown>;
    message: z.ZodString;
    timestamp: z.ZodString;
    type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
  }, "strip", z.ZodTypeAny, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }>, "many">;
} & {
  type: z.ZodLiteral<"default">;
  insights: z.ZodNullable<z.ZodArray<z.ZodObject<{
    change_diff: z.ZodNullable<z.ZodUnknown>;
    generated_at_memory_index: z.ZodNumber;
    insight: z.ZodString;
    justification: z.ZodString;
    type: z.ZodLiteral<"insight">;
  }, "strip", z.ZodTypeAny, {
    insight: string;
    type: "insight";
    generated_at_memory_index: number;
    justification: string;
    change_diff?: unknown;
  }, {
    insight: string;
    type: "insight";
    generated_at_memory_index: number;
    justification: string;
    change_diff?: unknown;
  }>, "many">>;
}, z.ZodTypeAny, "passthrough">, z.objectInputType<{
  key: z.ZodString;
  index: z.ZodNumber;
  status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
  title: z.ZodString;
  output_stream: z.ZodNullable<z.ZodString>;
  progress: z.ZodArray<z.ZodObject<{
    data: z.ZodNullable<z.ZodUnknown>;
    message: z.ZodString;
    timestamp: z.ZodString;
    type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
  }, "strip", z.ZodTypeAny, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }>, "many">;
} & {
  type: z.ZodLiteral<"default">;
  insights: z.ZodNullable<z.ZodArray<z.ZodObject<{
    change_diff: z.ZodNullable<z.ZodUnknown>;
    generated_at_memory_index: z.ZodNumber;
    insight: z.ZodString;
    justification: z.ZodString;
    type: z.ZodLiteral<"insight">;
  }, "strip", z.ZodTypeAny, {
    insight: string;
    type: "insight";
    generated_at_memory_index: number;
    justification: string;
    change_diff?: unknown;
  }, {
    insight: string;
    type: "insight";
    generated_at_memory_index: number;
    justification: string;
    change_diff?: unknown;
  }>, "many">>;
}, z.ZodTypeAny, "passthrough">>, z.ZodObject<{
  key: z.ZodString;
  index: z.ZodNumber;
  status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
  title: z.ZodString;
  output_stream: z.ZodNullable<z.ZodString>;
  progress: z.ZodArray<z.ZodObject<{
    data: z.ZodNullable<z.ZodUnknown>;
    message: z.ZodString;
    timestamp: z.ZodString;
    type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
  }, "strip", z.ZodTypeAny, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }>, "many">;
} & {
  type: z.ZodLiteral<"root_cause_analysis">;
  causes: z.ZodArray<z.ZodObject<{
    description: z.ZodString;
    id: z.ZodNumber;
    root_cause_reproduction: z.ZodArray<z.ZodObject<{
      code_snippet_and_analysis: z.ZodString;
      is_most_important_event: z.ZodBoolean;
      relevant_code_file: z.ZodNullable<z.ZodObject<{
        file_path: z.ZodString;
        repo_name: z.ZodString;
      }, "strip", z.ZodTypeAny, {
        file_path: string;
        repo_name: string;
      }, {
        file_path: string;
        repo_name: string;
      }>>;
      timeline_item_type: z.ZodString;
      title: z.ZodString;
    }, "strip", z.ZodTypeAny, {
      title: string;
      code_snippet_and_analysis: string;
      is_most_important_event: boolean;
      relevant_code_file: {
        file_path: string;
        repo_name: string;
      } | null;
      timeline_item_type: string;
    }, {
      title: string;
      code_snippet_and_analysis: string;
      is_most_important_event: boolean;
      relevant_code_file: {
        file_path: string;
        repo_name: string;
      } | null;
      timeline_item_type: string;
    }>, "many">;
  }, "strip", z.ZodTypeAny, {
    id: number;
    description: string;
    root_cause_reproduction: {
      title: string;
      code_snippet_and_analysis: string;
      is_most_important_event: boolean;
      relevant_code_file: {
        file_path: string;
        repo_name: string;
      } | null;
      timeline_item_type: string;
    }[];
  }, {
    id: number;
    description: string;
    root_cause_reproduction: {
      title: string;
      code_snippet_and_analysis: string;
      is_most_important_event: boolean;
      relevant_code_file: {
        file_path: string;
        repo_name: string;
      } | null;
      timeline_item_type: string;
    }[];
  }>, "many">;
}, "passthrough", z.ZodTypeAny, z.objectOutputType<{
  key: z.ZodString;
  index: z.ZodNumber;
  status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
  title: z.ZodString;
  output_stream: z.ZodNullable<z.ZodString>;
  progress: z.ZodArray<z.ZodObject<{
    data: z.ZodNullable<z.ZodUnknown>;
    message: z.ZodString;
    timestamp: z.ZodString;
    type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
  }, "strip", z.ZodTypeAny, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }>, "many">;
} & {
  type: z.ZodLiteral<"root_cause_analysis">;
  causes: z.ZodArray<z.ZodObject<{
    description: z.ZodString;
    id: z.ZodNumber;
    root_cause_reproduction: z.ZodArray<z.ZodObject<{
      code_snippet_and_analysis: z.ZodString;
      is_most_important_event: z.ZodBoolean;
      relevant_code_file: z.ZodNullable<z.ZodObject<{
        file_path: z.ZodString;
        repo_name: z.ZodString;
      }, "strip", z.ZodTypeAny, {
        file_path: string;
        repo_name: string;
      }, {
        file_path: string;
        repo_name: string;
      }>>;
      timeline_item_type: z.ZodString;
      title: z.ZodString;
    }, "strip", z.ZodTypeAny, {
      title: string;
      code_snippet_and_analysis: string;
      is_most_important_event: boolean;
      relevant_code_file: {
        file_path: string;
        repo_name: string;
      } | null;
      timeline_item_type: string;
    }, {
      title: string;
      code_snippet_and_analysis: string;
      is_most_important_event: boolean;
      relevant_code_file: {
        file_path: string;
        repo_name: string;
      } | null;
      timeline_item_type: string;
    }>, "many">;
  }, "strip", z.ZodTypeAny, {
    id: number;
    description: string;
    root_cause_reproduction: {
      title: string;
      code_snippet_and_analysis: string;
      is_most_important_event: boolean;
      relevant_code_file: {
        file_path: string;
        repo_name: string;
      } | null;
      timeline_item_type: string;
    }[];
  }, {
    id: number;
    description: string;
    root_cause_reproduction: {
      title: string;
      code_snippet_and_analysis: string;
      is_most_important_event: boolean;
      relevant_code_file: {
        file_path: string;
        repo_name: string;
      } | null;
      timeline_item_type: string;
    }[];
  }>, "many">;
}, z.ZodTypeAny, "passthrough">, z.objectInputType<{
  key: z.ZodString;
  index: z.ZodNumber;
  status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
  title: z.ZodString;
  output_stream: z.ZodNullable<z.ZodString>;
  progress: z.ZodArray<z.ZodObject<{
    data: z.ZodNullable<z.ZodUnknown>;
    message: z.ZodString;
    timestamp: z.ZodString;
    type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
  }, "strip", z.ZodTypeAny, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }>, "many">;
} & {
  type: z.ZodLiteral<"root_cause_analysis">;
  causes: z.ZodArray<z.ZodObject<{
    description: z.ZodString;
    id: z.ZodNumber;
    root_cause_reproduction: z.ZodArray<z.ZodObject<{
      code_snippet_and_analysis: z.ZodString;
      is_most_important_event: z.ZodBoolean;
      relevant_code_file: z.ZodNullable<z.ZodObject<{
        file_path: z.ZodString;
        repo_name: z.ZodString;
      }, "strip", z.ZodTypeAny, {
        file_path: string;
        repo_name: string;
      }, {
        file_path: string;
        repo_name: string;
      }>>;
      timeline_item_type: z.ZodString;
      title: z.ZodString;
    }, "strip", z.ZodTypeAny, {
      title: string;
      code_snippet_and_analysis: string;
      is_most_important_event: boolean;
      relevant_code_file: {
        file_path: string;
        repo_name: string;
      } | null;
      timeline_item_type: string;
    }, {
      title: string;
      code_snippet_and_analysis: string;
      is_most_important_event: boolean;
      relevant_code_file: {
        file_path: string;
        repo_name: string;
      } | null;
      timeline_item_type: string;
    }>, "many">;
  }, "strip", z.ZodTypeAny, {
    id: number;
    description: string;
    root_cause_reproduction: {
      title: string;
      code_snippet_and_analysis: string;
      is_most_important_event: boolean;
      relevant_code_file: {
        file_path: string;
        repo_name: string;
      } | null;
      timeline_item_type: string;
    }[];
  }, {
    id: number;
    description: string;
    root_cause_reproduction: {
      title: string;
      code_snippet_and_analysis: string;
      is_most_important_event: boolean;
      relevant_code_file: {
        file_path: string;
        repo_name: string;
      } | null;
      timeline_item_type: string;
    }[];
  }>, "many">;
}, z.ZodTypeAny, "passthrough">>, z.ZodObject<{
  key: z.ZodString;
  index: z.ZodNumber;
  status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
  title: z.ZodString;
  output_stream: z.ZodNullable<z.ZodString>;
  progress: z.ZodArray<z.ZodObject<{
    data: z.ZodNullable<z.ZodUnknown>;
    message: z.ZodString;
    timestamp: z.ZodString;
    type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
  }, "strip", z.ZodTypeAny, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }>, "many">;
} & {
  type: z.ZodLiteral<"solution">;
  solution: z.ZodArray<z.ZodObject<{
    code_snippet_and_analysis: z.ZodNullable<z.ZodString>;
    is_active: z.ZodBoolean;
    is_most_important_event: z.ZodBoolean;
    relevant_code_file: z.ZodNull;
    timeline_item_type: z.ZodUnion<[z.ZodLiteral<"internal_code">, z.ZodLiteral<"repro_test">]>;
    title: z.ZodString;
  }, "strip", z.ZodTypeAny, {
    title: string;
    code_snippet_and_analysis: string | null;
    is_most_important_event: boolean;
    relevant_code_file: null;
    timeline_item_type: "internal_code" | "repro_test";
    is_active: boolean;
  }, {
    title: string;
    code_snippet_and_analysis: string | null;
    is_most_important_event: boolean;
    relevant_code_file: null;
    timeline_item_type: "internal_code" | "repro_test";
    is_active: boolean;
  }>, "many">;
}, "passthrough", z.ZodTypeAny, z.objectOutputType<{
  key: z.ZodString;
  index: z.ZodNumber;
  status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
  title: z.ZodString;
  output_stream: z.ZodNullable<z.ZodString>;
  progress: z.ZodArray<z.ZodObject<{
    data: z.ZodNullable<z.ZodUnknown>;
    message: z.ZodString;
    timestamp: z.ZodString;
    type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
  }, "strip", z.ZodTypeAny, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }>, "many">;
} & {
  type: z.ZodLiteral<"solution">;
  solution: z.ZodArray<z.ZodObject<{
    code_snippet_and_analysis: z.ZodNullable<z.ZodString>;
    is_active: z.ZodBoolean;
    is_most_important_event: z.ZodBoolean;
    relevant_code_file: z.ZodNull;
    timeline_item_type: z.ZodUnion<[z.ZodLiteral<"internal_code">, z.ZodLiteral<"repro_test">]>;
    title: z.ZodString;
  }, "strip", z.ZodTypeAny, {
    title: string;
    code_snippet_and_analysis: string | null;
    is_most_important_event: boolean;
    relevant_code_file: null;
    timeline_item_type: "internal_code" | "repro_test";
    is_active: boolean;
  }, {
    title: string;
    code_snippet_and_analysis: string | null;
    is_most_important_event: boolean;
    relevant_code_file: null;
    timeline_item_type: "internal_code" | "repro_test";
    is_active: boolean;
  }>, "many">;
}, z.ZodTypeAny, "passthrough">, z.objectInputType<{
  key: z.ZodString;
  index: z.ZodNumber;
  status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
  title: z.ZodString;
  output_stream: z.ZodNullable<z.ZodString>;
  progress: z.ZodArray<z.ZodObject<{
    data: z.ZodNullable<z.ZodUnknown>;
    message: z.ZodString;
    timestamp: z.ZodString;
    type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
  }, "strip", z.ZodTypeAny, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }>, "many">;
} & {
  type: z.ZodLiteral<"solution">;
  solution: z.ZodArray<z.ZodObject<{
    code_snippet_and_analysis: z.ZodNullable<z.ZodString>;
    is_active: z.ZodBoolean;
    is_most_important_event: z.ZodBoolean;
    relevant_code_file: z.ZodNull;
    timeline_item_type: z.ZodUnion<[z.ZodLiteral<"internal_code">, z.ZodLiteral<"repro_test">]>;
    title: z.ZodString;
  }, "strip", z.ZodTypeAny, {
    title: string;
    code_snippet_and_analysis: string | null;
    is_most_important_event: boolean;
    relevant_code_file: null;
    timeline_item_type: "internal_code" | "repro_test";
    is_active: boolean;
  }, {
    title: string;
    code_snippet_and_analysis: string | null;
    is_most_important_event: boolean;
    relevant_code_file: null;
    timeline_item_type: "internal_code" | "repro_test";
    is_active: boolean;
  }>, "many">;
}, z.ZodTypeAny, "passthrough">>, z.ZodObject<{
  type: z.ZodString;
  key: z.ZodString;
  index: z.ZodNumber;
  status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
  title: z.ZodString;
  output_stream: z.ZodNullable<z.ZodString>;
  progress: z.ZodArray<z.ZodObject<{
    data: z.ZodNullable<z.ZodUnknown>;
    message: z.ZodString;
    timestamp: z.ZodString;
    type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
  }, "strip", z.ZodTypeAny, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }>, "many">;
}, "passthrough", z.ZodTypeAny, z.objectOutputType<{
  type: z.ZodString;
  key: z.ZodString;
  index: z.ZodNumber;
  status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
  title: z.ZodString;
  output_stream: z.ZodNullable<z.ZodString>;
  progress: z.ZodArray<z.ZodObject<{
    data: z.ZodNullable<z.ZodUnknown>;
    message: z.ZodString;
    timestamp: z.ZodString;
    type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
  }, "strip", z.ZodTypeAny, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }>, "many">;
}, z.ZodTypeAny, "passthrough">, z.objectInputType<{
  type: z.ZodString;
  key: z.ZodString;
  index: z.ZodNumber;
  status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
  title: z.ZodString;
  output_stream: z.ZodNullable<z.ZodString>;
  progress: z.ZodArray<z.ZodObject<{
    data: z.ZodNullable<z.ZodUnknown>;
    message: z.ZodString;
    timestamp: z.ZodString;
    type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
  }, "strip", z.ZodTypeAny, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }, {
    message: string;
    type: "INFO" | "ERROR" | "WARNING";
    timestamp: string;
    data?: unknown;
  }>, "many">;
}, z.ZodTypeAny, "passthrough">>]>;
declare const AutofixRunStateSchema: z.ZodObject<{
  autofix: z.ZodNullable<z.ZodObject<{
    run_id: z.ZodNumber;
    request: z.ZodUnknown;
    updated_at: z.ZodString;
    status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
    steps: z.ZodArray<z.ZodUnion<[z.ZodObject<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"default">;
      insights: z.ZodNullable<z.ZodArray<z.ZodObject<{
        change_diff: z.ZodNullable<z.ZodUnknown>;
        generated_at_memory_index: z.ZodNumber;
        insight: z.ZodString;
        justification: z.ZodString;
        type: z.ZodLiteral<"insight">;
      }, "strip", z.ZodTypeAny, {
        insight: string;
        type: "insight";
        generated_at_memory_index: number;
        justification: string;
        change_diff?: unknown;
      }, {
        insight: string;
        type: "insight";
        generated_at_memory_index: number;
        justification: string;
        change_diff?: unknown;
      }>, "many">>;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"default">;
      insights: z.ZodNullable<z.ZodArray<z.ZodObject<{
        change_diff: z.ZodNullable<z.ZodUnknown>;
        generated_at_memory_index: z.ZodNumber;
        insight: z.ZodString;
        justification: z.ZodString;
        type: z.ZodLiteral<"insight">;
      }, "strip", z.ZodTypeAny, {
        insight: string;
        type: "insight";
        generated_at_memory_index: number;
        justification: string;
        change_diff?: unknown;
      }, {
        insight: string;
        type: "insight";
        generated_at_memory_index: number;
        justification: string;
        change_diff?: unknown;
      }>, "many">>;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"default">;
      insights: z.ZodNullable<z.ZodArray<z.ZodObject<{
        change_diff: z.ZodNullable<z.ZodUnknown>;
        generated_at_memory_index: z.ZodNumber;
        insight: z.ZodString;
        justification: z.ZodString;
        type: z.ZodLiteral<"insight">;
      }, "strip", z.ZodTypeAny, {
        insight: string;
        type: "insight";
        generated_at_memory_index: number;
        justification: string;
        change_diff?: unknown;
      }, {
        insight: string;
        type: "insight";
        generated_at_memory_index: number;
        justification: string;
        change_diff?: unknown;
      }>, "many">>;
    }, z.ZodTypeAny, "passthrough">>, z.ZodObject<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"root_cause_analysis">;
      causes: z.ZodArray<z.ZodObject<{
        description: z.ZodString;
        id: z.ZodNumber;
        root_cause_reproduction: z.ZodArray<z.ZodObject<{
          code_snippet_and_analysis: z.ZodString;
          is_most_important_event: z.ZodBoolean;
          relevant_code_file: z.ZodNullable<z.ZodObject<{
            file_path: z.ZodString;
            repo_name: z.ZodString;
          }, "strip", z.ZodTypeAny, {
            file_path: string;
            repo_name: string;
          }, {
            file_path: string;
            repo_name: string;
          }>>;
          timeline_item_type: z.ZodString;
          title: z.ZodString;
        }, "strip", z.ZodTypeAny, {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }, {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }>, "many">;
      }, "strip", z.ZodTypeAny, {
        id: number;
        description: string;
        root_cause_reproduction: {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }[];
      }, {
        id: number;
        description: string;
        root_cause_reproduction: {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }[];
      }>, "many">;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"root_cause_analysis">;
      causes: z.ZodArray<z.ZodObject<{
        description: z.ZodString;
        id: z.ZodNumber;
        root_cause_reproduction: z.ZodArray<z.ZodObject<{
          code_snippet_and_analysis: z.ZodString;
          is_most_important_event: z.ZodBoolean;
          relevant_code_file: z.ZodNullable<z.ZodObject<{
            file_path: z.ZodString;
            repo_name: z.ZodString;
          }, "strip", z.ZodTypeAny, {
            file_path: string;
            repo_name: string;
          }, {
            file_path: string;
            repo_name: string;
          }>>;
          timeline_item_type: z.ZodString;
          title: z.ZodString;
        }, "strip", z.ZodTypeAny, {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }, {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }>, "many">;
      }, "strip", z.ZodTypeAny, {
        id: number;
        description: string;
        root_cause_reproduction: {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }[];
      }, {
        id: number;
        description: string;
        root_cause_reproduction: {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }[];
      }>, "many">;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"root_cause_analysis">;
      causes: z.ZodArray<z.ZodObject<{
        description: z.ZodString;
        id: z.ZodNumber;
        root_cause_reproduction: z.ZodArray<z.ZodObject<{
          code_snippet_and_analysis: z.ZodString;
          is_most_important_event: z.ZodBoolean;
          relevant_code_file: z.ZodNullable<z.ZodObject<{
            file_path: z.ZodString;
            repo_name: z.ZodString;
          }, "strip", z.ZodTypeAny, {
            file_path: string;
            repo_name: string;
          }, {
            file_path: string;
            repo_name: string;
          }>>;
          timeline_item_type: z.ZodString;
          title: z.ZodString;
        }, "strip", z.ZodTypeAny, {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }, {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }>, "many">;
      }, "strip", z.ZodTypeAny, {
        id: number;
        description: string;
        root_cause_reproduction: {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }[];
      }, {
        id: number;
        description: string;
        root_cause_reproduction: {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }[];
      }>, "many">;
    }, z.ZodTypeAny, "passthrough">>, z.ZodObject<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"solution">;
      solution: z.ZodArray<z.ZodObject<{
        code_snippet_and_analysis: z.ZodNullable<z.ZodString>;
        is_active: z.ZodBoolean;
        is_most_important_event: z.ZodBoolean;
        relevant_code_file: z.ZodNull;
        timeline_item_type: z.ZodUnion<[z.ZodLiteral<"internal_code">, z.ZodLiteral<"repro_test">]>;
        title: z.ZodString;
      }, "strip", z.ZodTypeAny, {
        title: string;
        code_snippet_and_analysis: string | null;
        is_most_important_event: boolean;
        relevant_code_file: null;
        timeline_item_type: "internal_code" | "repro_test";
        is_active: boolean;
      }, {
        title: string;
        code_snippet_and_analysis: string | null;
        is_most_important_event: boolean;
        relevant_code_file: null;
        timeline_item_type: "internal_code" | "repro_test";
        is_active: boolean;
      }>, "many">;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"solution">;
      solution: z.ZodArray<z.ZodObject<{
        code_snippet_and_analysis: z.ZodNullable<z.ZodString>;
        is_active: z.ZodBoolean;
        is_most_important_event: z.ZodBoolean;
        relevant_code_file: z.ZodNull;
        timeline_item_type: z.ZodUnion<[z.ZodLiteral<"internal_code">, z.ZodLiteral<"repro_test">]>;
        title: z.ZodString;
      }, "strip", z.ZodTypeAny, {
        title: string;
        code_snippet_and_analysis: string | null;
        is_most_important_event: boolean;
        relevant_code_file: null;
        timeline_item_type: "internal_code" | "repro_test";
        is_active: boolean;
      }, {
        title: string;
        code_snippet_and_analysis: string | null;
        is_most_important_event: boolean;
        relevant_code_file: null;
        timeline_item_type: "internal_code" | "repro_test";
        is_active: boolean;
      }>, "many">;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"solution">;
      solution: z.ZodArray<z.ZodObject<{
        code_snippet_and_analysis: z.ZodNullable<z.ZodString>;
        is_active: z.ZodBoolean;
        is_most_important_event: z.ZodBoolean;
        relevant_code_file: z.ZodNull;
        timeline_item_type: z.ZodUnion<[z.ZodLiteral<"internal_code">, z.ZodLiteral<"repro_test">]>;
        title: z.ZodString;
      }, "strip", z.ZodTypeAny, {
        title: string;
        code_snippet_and_analysis: string | null;
        is_most_important_event: boolean;
        relevant_code_file: null;
        timeline_item_type: "internal_code" | "repro_test";
        is_active: boolean;
      }, {
        title: string;
        code_snippet_and_analysis: string | null;
        is_most_important_event: boolean;
        relevant_code_file: null;
        timeline_item_type: "internal_code" | "repro_test";
        is_active: boolean;
      }>, "many">;
    }, z.ZodTypeAny, "passthrough">>, z.ZodObject<{
      type: z.ZodString;
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
      type: z.ZodString;
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
      type: z.ZodString;
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    }, z.ZodTypeAny, "passthrough">>]>, "many">;
  }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
    run_id: z.ZodNumber;
    request: z.ZodUnknown;
    updated_at: z.ZodString;
    status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
    steps: z.ZodArray<z.ZodUnion<[z.ZodObject<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"default">;
      insights: z.ZodNullable<z.ZodArray<z.ZodObject<{
        change_diff: z.ZodNullable<z.ZodUnknown>;
        generated_at_memory_index: z.ZodNumber;
        insight: z.ZodString;
        justification: z.ZodString;
        type: z.ZodLiteral<"insight">;
      }, "strip", z.ZodTypeAny, {
        insight: string;
        type: "insight";
        generated_at_memory_index: number;
        justification: string;
        change_diff?: unknown;
      }, {
        insight: string;
        type: "insight";
        generated_at_memory_index: number;
        justification: string;
        change_diff?: unknown;
      }>, "many">>;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"default">;
      insights: z.ZodNullable<z.ZodArray<z.ZodObject<{
        change_diff: z.ZodNullable<z.ZodUnknown>;
        generated_at_memory_index: z.ZodNumber;
        insight: z.ZodString;
        justification: z.ZodString;
        type: z.ZodLiteral<"insight">;
      }, "strip", z.ZodTypeAny, {
        insight: string;
        type: "insight";
        generated_at_memory_index: number;
        justification: string;
        change_diff?: unknown;
      }, {
        insight: string;
        type: "insight";
        generated_at_memory_index: number;
        justification: string;
        change_diff?: unknown;
      }>, "many">>;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"default">;
      insights: z.ZodNullable<z.ZodArray<z.ZodObject<{
        change_diff: z.ZodNullable<z.ZodUnknown>;
        generated_at_memory_index: z.ZodNumber;
        insight: z.ZodString;
        justification: z.ZodString;
        type: z.ZodLiteral<"insight">;
      }, "strip", z.ZodTypeAny, {
        insight: string;
        type: "insight";
        generated_at_memory_index: number;
        justification: string;
        change_diff?: unknown;
      }, {
        insight: string;
        type: "insight";
        generated_at_memory_index: number;
        justification: string;
        change_diff?: unknown;
      }>, "many">>;
    }, z.ZodTypeAny, "passthrough">>, z.ZodObject<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"root_cause_analysis">;
      causes: z.ZodArray<z.ZodObject<{
        description: z.ZodString;
        id: z.ZodNumber;
        root_cause_reproduction: z.ZodArray<z.ZodObject<{
          code_snippet_and_analysis: z.ZodString;
          is_most_important_event: z.ZodBoolean;
          relevant_code_file: z.ZodNullable<z.ZodObject<{
            file_path: z.ZodString;
            repo_name: z.ZodString;
          }, "strip", z.ZodTypeAny, {
            file_path: string;
            repo_name: string;
          }, {
            file_path: string;
            repo_name: string;
          }>>;
          timeline_item_type: z.ZodString;
          title: z.ZodString;
        }, "strip", z.ZodTypeAny, {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }, {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }>, "many">;
      }, "strip", z.ZodTypeAny, {
        id: number;
        description: string;
        root_cause_reproduction: {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }[];
      }, {
        id: number;
        description: string;
        root_cause_reproduction: {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }[];
      }>, "many">;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"root_cause_analysis">;
      causes: z.ZodArray<z.ZodObject<{
        description: z.ZodString;
        id: z.ZodNumber;
        root_cause_reproduction: z.ZodArray<z.ZodObject<{
          code_snippet_and_analysis: z.ZodString;
          is_most_important_event: z.ZodBoolean;
          relevant_code_file: z.ZodNullable<z.ZodObject<{
            file_path: z.ZodString;
            repo_name: z.ZodString;
          }, "strip", z.ZodTypeAny, {
            file_path: string;
            repo_name: string;
          }, {
            file_path: string;
            repo_name: string;
          }>>;
          timeline_item_type: z.ZodString;
          title: z.ZodString;
        }, "strip", z.ZodTypeAny, {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }, {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }>, "many">;
      }, "strip", z.ZodTypeAny, {
        id: number;
        description: string;
        root_cause_reproduction: {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }[];
      }, {
        id: number;
        description: string;
        root_cause_reproduction: {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }[];
      }>, "many">;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"root_cause_analysis">;
      causes: z.ZodArray<z.ZodObject<{
        description: z.ZodString;
        id: z.ZodNumber;
        root_cause_reproduction: z.ZodArray<z.ZodObject<{
          code_snippet_and_analysis: z.ZodString;
          is_most_important_event: z.ZodBoolean;
          relevant_code_file: z.ZodNullable<z.ZodObject<{
            file_path: z.ZodString;
            repo_name: z.ZodString;
          }, "strip", z.ZodTypeAny, {
            file_path: string;
            repo_name: string;
          }, {
            file_path: string;
            repo_name: string;
          }>>;
          timeline_item_type: z.ZodString;
          title: z.ZodString;
        }, "strip", z.ZodTypeAny, {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }, {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }>, "many">;
      }, "strip", z.ZodTypeAny, {
        id: number;
        description: string;
        root_cause_reproduction: {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }[];
      }, {
        id: number;
        description: string;
        root_cause_reproduction: {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }[];
      }>, "many">;
    }, z.ZodTypeAny, "passthrough">>, z.ZodObject<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"solution">;
      solution: z.ZodArray<z.ZodObject<{
        code_snippet_and_analysis: z.ZodNullable<z.ZodString>;
        is_active: z.ZodBoolean;
        is_most_important_event: z.ZodBoolean;
        relevant_code_file: z.ZodNull;
        timeline_item_type: z.ZodUnion<[z.ZodLiteral<"internal_code">, z.ZodLiteral<"repro_test">]>;
        title: z.ZodString;
      }, "strip", z.ZodTypeAny, {
        title: string;
        code_snippet_and_analysis: string | null;
        is_most_important_event: boolean;
        relevant_code_file: null;
        timeline_item_type: "internal_code" | "repro_test";
        is_active: boolean;
      }, {
        title: string;
        code_snippet_and_analysis: string | null;
        is_most_important_event: boolean;
        relevant_code_file: null;
        timeline_item_type: "internal_code" | "repro_test";
        is_active: boolean;
      }>, "many">;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"solution">;
      solution: z.ZodArray<z.ZodObject<{
        code_snippet_and_analysis: z.ZodNullable<z.ZodString>;
        is_active: z.ZodBoolean;
        is_most_important_event: z.ZodBoolean;
        relevant_code_file: z.ZodNull;
        timeline_item_type: z.ZodUnion<[z.ZodLiteral<"internal_code">, z.ZodLiteral<"repro_test">]>;
        title: z.ZodString;
      }, "strip", z.ZodTypeAny, {
        title: string;
        code_snippet_and_analysis: string | null;
        is_most_important_event: boolean;
        relevant_code_file: null;
        timeline_item_type: "internal_code" | "repro_test";
        is_active: boolean;
      }, {
        title: string;
        code_snippet_and_analysis: string | null;
        is_most_important_event: boolean;
        relevant_code_file: null;
        timeline_item_type: "internal_code" | "repro_test";
        is_active: boolean;
      }>, "many">;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"solution">;
      solution: z.ZodArray<z.ZodObject<{
        code_snippet_and_analysis: z.ZodNullable<z.ZodString>;
        is_active: z.ZodBoolean;
        is_most_important_event: z.ZodBoolean;
        relevant_code_file: z.ZodNull;
        timeline_item_type: z.ZodUnion<[z.ZodLiteral<"internal_code">, z.ZodLiteral<"repro_test">]>;
        title: z.ZodString;
      }, "strip", z.ZodTypeAny, {
        title: string;
        code_snippet_and_analysis: string | null;
        is_most_important_event: boolean;
        relevant_code_file: null;
        timeline_item_type: "internal_code" | "repro_test";
        is_active: boolean;
      }, {
        title: string;
        code_snippet_and_analysis: string | null;
        is_most_important_event: boolean;
        relevant_code_file: null;
        timeline_item_type: "internal_code" | "repro_test";
        is_active: boolean;
      }>, "many">;
    }, z.ZodTypeAny, "passthrough">>, z.ZodObject<{
      type: z.ZodString;
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
      type: z.ZodString;
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
      type: z.ZodString;
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    }, z.ZodTypeAny, "passthrough">>]>, "many">;
  }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
    run_id: z.ZodNumber;
    request: z.ZodUnknown;
    updated_at: z.ZodString;
    status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
    steps: z.ZodArray<z.ZodUnion<[z.ZodObject<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"default">;
      insights: z.ZodNullable<z.ZodArray<z.ZodObject<{
        change_diff: z.ZodNullable<z.ZodUnknown>;
        generated_at_memory_index: z.ZodNumber;
        insight: z.ZodString;
        justification: z.ZodString;
        type: z.ZodLiteral<"insight">;
      }, "strip", z.ZodTypeAny, {
        insight: string;
        type: "insight";
        generated_at_memory_index: number;
        justification: string;
        change_diff?: unknown;
      }, {
        insight: string;
        type: "insight";
        generated_at_memory_index: number;
        justification: string;
        change_diff?: unknown;
      }>, "many">>;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"default">;
      insights: z.ZodNullable<z.ZodArray<z.ZodObject<{
        change_diff: z.ZodNullable<z.ZodUnknown>;
        generated_at_memory_index: z.ZodNumber;
        insight: z.ZodString;
        justification: z.ZodString;
        type: z.ZodLiteral<"insight">;
      }, "strip", z.ZodTypeAny, {
        insight: string;
        type: "insight";
        generated_at_memory_index: number;
        justification: string;
        change_diff?: unknown;
      }, {
        insight: string;
        type: "insight";
        generated_at_memory_index: number;
        justification: string;
        change_diff?: unknown;
      }>, "many">>;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"default">;
      insights: z.ZodNullable<z.ZodArray<z.ZodObject<{
        change_diff: z.ZodNullable<z.ZodUnknown>;
        generated_at_memory_index: z.ZodNumber;
        insight: z.ZodString;
        justification: z.ZodString;
        type: z.ZodLiteral<"insight">;
      }, "strip", z.ZodTypeAny, {
        insight: string;
        type: "insight";
        generated_at_memory_index: number;
        justification: string;
        change_diff?: unknown;
      }, {
        insight: string;
        type: "insight";
        generated_at_memory_index: number;
        justification: string;
        change_diff?: unknown;
      }>, "many">>;
    }, z.ZodTypeAny, "passthrough">>, z.ZodObject<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"root_cause_analysis">;
      causes: z.ZodArray<z.ZodObject<{
        description: z.ZodString;
        id: z.ZodNumber;
        root_cause_reproduction: z.ZodArray<z.ZodObject<{
          code_snippet_and_analysis: z.ZodString;
          is_most_important_event: z.ZodBoolean;
          relevant_code_file: z.ZodNullable<z.ZodObject<{
            file_path: z.ZodString;
            repo_name: z.ZodString;
          }, "strip", z.ZodTypeAny, {
            file_path: string;
            repo_name: string;
          }, {
            file_path: string;
            repo_name: string;
          }>>;
          timeline_item_type: z.ZodString;
          title: z.ZodString;
        }, "strip", z.ZodTypeAny, {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }, {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }>, "many">;
      }, "strip", z.ZodTypeAny, {
        id: number;
        description: string;
        root_cause_reproduction: {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }[];
      }, {
        id: number;
        description: string;
        root_cause_reproduction: {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }[];
      }>, "many">;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"root_cause_analysis">;
      causes: z.ZodArray<z.ZodObject<{
        description: z.ZodString;
        id: z.ZodNumber;
        root_cause_reproduction: z.ZodArray<z.ZodObject<{
          code_snippet_and_analysis: z.ZodString;
          is_most_important_event: z.ZodBoolean;
          relevant_code_file: z.ZodNullable<z.ZodObject<{
            file_path: z.ZodString;
            repo_name: z.ZodString;
          }, "strip", z.ZodTypeAny, {
            file_path: string;
            repo_name: string;
          }, {
            file_path: string;
            repo_name: string;
          }>>;
          timeline_item_type: z.ZodString;
          title: z.ZodString;
        }, "strip", z.ZodTypeAny, {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }, {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }>, "many">;
      }, "strip", z.ZodTypeAny, {
        id: number;
        description: string;
        root_cause_reproduction: {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }[];
      }, {
        id: number;
        description: string;
        root_cause_reproduction: {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }[];
      }>, "many">;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"root_cause_analysis">;
      causes: z.ZodArray<z.ZodObject<{
        description: z.ZodString;
        id: z.ZodNumber;
        root_cause_reproduction: z.ZodArray<z.ZodObject<{
          code_snippet_and_analysis: z.ZodString;
          is_most_important_event: z.ZodBoolean;
          relevant_code_file: z.ZodNullable<z.ZodObject<{
            file_path: z.ZodString;
            repo_name: z.ZodString;
          }, "strip", z.ZodTypeAny, {
            file_path: string;
            repo_name: string;
          }, {
            file_path: string;
            repo_name: string;
          }>>;
          timeline_item_type: z.ZodString;
          title: z.ZodString;
        }, "strip", z.ZodTypeAny, {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }, {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }>, "many">;
      }, "strip", z.ZodTypeAny, {
        id: number;
        description: string;
        root_cause_reproduction: {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }[];
      }, {
        id: number;
        description: string;
        root_cause_reproduction: {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }[];
      }>, "many">;
    }, z.ZodTypeAny, "passthrough">>, z.ZodObject<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"solution">;
      solution: z.ZodArray<z.ZodObject<{
        code_snippet_and_analysis: z.ZodNullable<z.ZodString>;
        is_active: z.ZodBoolean;
        is_most_important_event: z.ZodBoolean;
        relevant_code_file: z.ZodNull;
        timeline_item_type: z.ZodUnion<[z.ZodLiteral<"internal_code">, z.ZodLiteral<"repro_test">]>;
        title: z.ZodString;
      }, "strip", z.ZodTypeAny, {
        title: string;
        code_snippet_and_analysis: string | null;
        is_most_important_event: boolean;
        relevant_code_file: null;
        timeline_item_type: "internal_code" | "repro_test";
        is_active: boolean;
      }, {
        title: string;
        code_snippet_and_analysis: string | null;
        is_most_important_event: boolean;
        relevant_code_file: null;
        timeline_item_type: "internal_code" | "repro_test";
        is_active: boolean;
      }>, "many">;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"solution">;
      solution: z.ZodArray<z.ZodObject<{
        code_snippet_and_analysis: z.ZodNullable<z.ZodString>;
        is_active: z.ZodBoolean;
        is_most_important_event: z.ZodBoolean;
        relevant_code_file: z.ZodNull;
        timeline_item_type: z.ZodUnion<[z.ZodLiteral<"internal_code">, z.ZodLiteral<"repro_test">]>;
        title: z.ZodString;
      }, "strip", z.ZodTypeAny, {
        title: string;
        code_snippet_and_analysis: string | null;
        is_most_important_event: boolean;
        relevant_code_file: null;
        timeline_item_type: "internal_code" | "repro_test";
        is_active: boolean;
      }, {
        title: string;
        code_snippet_and_analysis: string | null;
        is_most_important_event: boolean;
        relevant_code_file: null;
        timeline_item_type: "internal_code" | "repro_test";
        is_active: boolean;
      }>, "many">;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"solution">;
      solution: z.ZodArray<z.ZodObject<{
        code_snippet_and_analysis: z.ZodNullable<z.ZodString>;
        is_active: z.ZodBoolean;
        is_most_important_event: z.ZodBoolean;
        relevant_code_file: z.ZodNull;
        timeline_item_type: z.ZodUnion<[z.ZodLiteral<"internal_code">, z.ZodLiteral<"repro_test">]>;
        title: z.ZodString;
      }, "strip", z.ZodTypeAny, {
        title: string;
        code_snippet_and_analysis: string | null;
        is_most_important_event: boolean;
        relevant_code_file: null;
        timeline_item_type: "internal_code" | "repro_test";
        is_active: boolean;
      }, {
        title: string;
        code_snippet_and_analysis: string | null;
        is_most_important_event: boolean;
        relevant_code_file: null;
        timeline_item_type: "internal_code" | "repro_test";
        is_active: boolean;
      }>, "many">;
    }, z.ZodTypeAny, "passthrough">>, z.ZodObject<{
      type: z.ZodString;
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
      type: z.ZodString;
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
      type: z.ZodString;
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    }, z.ZodTypeAny, "passthrough">>]>, "many">;
  }, z.ZodTypeAny, "passthrough">>>;
}, "strip", z.ZodTypeAny, {
  autofix: z.objectOutputType<{
    run_id: z.ZodNumber;
    request: z.ZodUnknown;
    updated_at: z.ZodString;
    status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
    steps: z.ZodArray<z.ZodUnion<[z.ZodObject<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"default">;
      insights: z.ZodNullable<z.ZodArray<z.ZodObject<{
        change_diff: z.ZodNullable<z.ZodUnknown>;
        generated_at_memory_index: z.ZodNumber;
        insight: z.ZodString;
        justification: z.ZodString;
        type: z.ZodLiteral<"insight">;
      }, "strip", z.ZodTypeAny, {
        insight: string;
        type: "insight";
        generated_at_memory_index: number;
        justification: string;
        change_diff?: unknown;
      }, {
        insight: string;
        type: "insight";
        generated_at_memory_index: number;
        justification: string;
        change_diff?: unknown;
      }>, "many">>;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"default">;
      insights: z.ZodNullable<z.ZodArray<z.ZodObject<{
        change_diff: z.ZodNullable<z.ZodUnknown>;
        generated_at_memory_index: z.ZodNumber;
        insight: z.ZodString;
        justification: z.ZodString;
        type: z.ZodLiteral<"insight">;
      }, "strip", z.ZodTypeAny, {
        insight: string;
        type: "insight";
        generated_at_memory_index: number;
        justification: string;
        change_diff?: unknown;
      }, {
        insight: string;
        type: "insight";
        generated_at_memory_index: number;
        justification: string;
        change_diff?: unknown;
      }>, "many">>;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"default">;
      insights: z.ZodNullable<z.ZodArray<z.ZodObject<{
        change_diff: z.ZodNullable<z.ZodUnknown>;
        generated_at_memory_index: z.ZodNumber;
        insight: z.ZodString;
        justification: z.ZodString;
        type: z.ZodLiteral<"insight">;
      }, "strip", z.ZodTypeAny, {
        insight: string;
        type: "insight";
        generated_at_memory_index: number;
        justification: string;
        change_diff?: unknown;
      }, {
        insight: string;
        type: "insight";
        generated_at_memory_index: number;
        justification: string;
        change_diff?: unknown;
      }>, "many">>;
    }, z.ZodTypeAny, "passthrough">>, z.ZodObject<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"root_cause_analysis">;
      causes: z.ZodArray<z.ZodObject<{
        description: z.ZodString;
        id: z.ZodNumber;
        root_cause_reproduction: z.ZodArray<z.ZodObject<{
          code_snippet_and_analysis: z.ZodString;
          is_most_important_event: z.ZodBoolean;
          relevant_code_file: z.ZodNullable<z.ZodObject<{
            file_path: z.ZodString;
            repo_name: z.ZodString;
          }, "strip", z.ZodTypeAny, {
            file_path: string;
            repo_name: string;
          }, {
            file_path: string;
            repo_name: string;
          }>>;
          timeline_item_type: z.ZodString;
          title: z.ZodString;
        }, "strip", z.ZodTypeAny, {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }, {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }>, "many">;
      }, "strip", z.ZodTypeAny, {
        id: number;
        description: string;
        root_cause_reproduction: {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }[];
      }, {
        id: number;
        description: string;
        root_cause_reproduction: {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }[];
      }>, "many">;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"root_cause_analysis">;
      causes: z.ZodArray<z.ZodObject<{
        description: z.ZodString;
        id: z.ZodNumber;
        root_cause_reproduction: z.ZodArray<z.ZodObject<{
          code_snippet_and_analysis: z.ZodString;
          is_most_important_event: z.ZodBoolean;
          relevant_code_file: z.ZodNullable<z.ZodObject<{
            file_path: z.ZodString;
            repo_name: z.ZodString;
          }, "strip", z.ZodTypeAny, {
            file_path: string;
            repo_name: string;
          }, {
            file_path: string;
            repo_name: string;
          }>>;
          timeline_item_type: z.ZodString;
          title: z.ZodString;
        }, "strip", z.ZodTypeAny, {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }, {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }>, "many">;
      }, "strip", z.ZodTypeAny, {
        id: number;
        description: string;
        root_cause_reproduction: {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }[];
      }, {
        id: number;
        description: string;
        root_cause_reproduction: {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }[];
      }>, "many">;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"root_cause_analysis">;
      causes: z.ZodArray<z.ZodObject<{
        description: z.ZodString;
        id: z.ZodNumber;
        root_cause_reproduction: z.ZodArray<z.ZodObject<{
          code_snippet_and_analysis: z.ZodString;
          is_most_important_event: z.ZodBoolean;
          relevant_code_file: z.ZodNullable<z.ZodObject<{
            file_path: z.ZodString;
            repo_name: z.ZodString;
          }, "strip", z.ZodTypeAny, {
            file_path: string;
            repo_name: string;
          }, {
            file_path: string;
            repo_name: string;
          }>>;
          timeline_item_type: z.ZodString;
          title: z.ZodString;
        }, "strip", z.ZodTypeAny, {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }, {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }>, "many">;
      }, "strip", z.ZodTypeAny, {
        id: number;
        description: string;
        root_cause_reproduction: {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }[];
      }, {
        id: number;
        description: string;
        root_cause_reproduction: {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }[];
      }>, "many">;
    }, z.ZodTypeAny, "passthrough">>, z.ZodObject<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"solution">;
      solution: z.ZodArray<z.ZodObject<{
        code_snippet_and_analysis: z.ZodNullable<z.ZodString>;
        is_active: z.ZodBoolean;
        is_most_important_event: z.ZodBoolean;
        relevant_code_file: z.ZodNull;
        timeline_item_type: z.ZodUnion<[z.ZodLiteral<"internal_code">, z.ZodLiteral<"repro_test">]>;
        title: z.ZodString;
      }, "strip", z.ZodTypeAny, {
        title: string;
        code_snippet_and_analysis: string | null;
        is_most_important_event: boolean;
        relevant_code_file: null;
        timeline_item_type: "internal_code" | "repro_test";
        is_active: boolean;
      }, {
        title: string;
        code_snippet_and_analysis: string | null;
        is_most_important_event: boolean;
        relevant_code_file: null;
        timeline_item_type: "internal_code" | "repro_test";
        is_active: boolean;
      }>, "many">;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"solution">;
      solution: z.ZodArray<z.ZodObject<{
        code_snippet_and_analysis: z.ZodNullable<z.ZodString>;
        is_active: z.ZodBoolean;
        is_most_important_event: z.ZodBoolean;
        relevant_code_file: z.ZodNull;
        timeline_item_type: z.ZodUnion<[z.ZodLiteral<"internal_code">, z.ZodLiteral<"repro_test">]>;
        title: z.ZodString;
      }, "strip", z.ZodTypeAny, {
        title: string;
        code_snippet_and_analysis: string | null;
        is_most_important_event: boolean;
        relevant_code_file: null;
        timeline_item_type: "internal_code" | "repro_test";
        is_active: boolean;
      }, {
        title: string;
        code_snippet_and_analysis: string | null;
        is_most_important_event: boolean;
        relevant_code_file: null;
        timeline_item_type: "internal_code" | "repro_test";
        is_active: boolean;
      }>, "many">;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"solution">;
      solution: z.ZodArray<z.ZodObject<{
        code_snippet_and_analysis: z.ZodNullable<z.ZodString>;
        is_active: z.ZodBoolean;
        is_most_important_event: z.ZodBoolean;
        relevant_code_file: z.ZodNull;
        timeline_item_type: z.ZodUnion<[z.ZodLiteral<"internal_code">, z.ZodLiteral<"repro_test">]>;
        title: z.ZodString;
      }, "strip", z.ZodTypeAny, {
        title: string;
        code_snippet_and_analysis: string | null;
        is_most_important_event: boolean;
        relevant_code_file: null;
        timeline_item_type: "internal_code" | "repro_test";
        is_active: boolean;
      }, {
        title: string;
        code_snippet_and_analysis: string | null;
        is_most_important_event: boolean;
        relevant_code_file: null;
        timeline_item_type: "internal_code" | "repro_test";
        is_active: boolean;
      }>, "many">;
    }, z.ZodTypeAny, "passthrough">>, z.ZodObject<{
      type: z.ZodString;
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
      type: z.ZodString;
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
      type: z.ZodString;
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    }, z.ZodTypeAny, "passthrough">>]>, "many">;
  }, z.ZodTypeAny, "passthrough"> | null;
}, {
  autofix: z.objectInputType<{
    run_id: z.ZodNumber;
    request: z.ZodUnknown;
    updated_at: z.ZodString;
    status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
    steps: z.ZodArray<z.ZodUnion<[z.ZodObject<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"default">;
      insights: z.ZodNullable<z.ZodArray<z.ZodObject<{
        change_diff: z.ZodNullable<z.ZodUnknown>;
        generated_at_memory_index: z.ZodNumber;
        insight: z.ZodString;
        justification: z.ZodString;
        type: z.ZodLiteral<"insight">;
      }, "strip", z.ZodTypeAny, {
        insight: string;
        type: "insight";
        generated_at_memory_index: number;
        justification: string;
        change_diff?: unknown;
      }, {
        insight: string;
        type: "insight";
        generated_at_memory_index: number;
        justification: string;
        change_diff?: unknown;
      }>, "many">>;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"default">;
      insights: z.ZodNullable<z.ZodArray<z.ZodObject<{
        change_diff: z.ZodNullable<z.ZodUnknown>;
        generated_at_memory_index: z.ZodNumber;
        insight: z.ZodString;
        justification: z.ZodString;
        type: z.ZodLiteral<"insight">;
      }, "strip", z.ZodTypeAny, {
        insight: string;
        type: "insight";
        generated_at_memory_index: number;
        justification: string;
        change_diff?: unknown;
      }, {
        insight: string;
        type: "insight";
        generated_at_memory_index: number;
        justification: string;
        change_diff?: unknown;
      }>, "many">>;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"default">;
      insights: z.ZodNullable<z.ZodArray<z.ZodObject<{
        change_diff: z.ZodNullable<z.ZodUnknown>;
        generated_at_memory_index: z.ZodNumber;
        insight: z.ZodString;
        justification: z.ZodString;
        type: z.ZodLiteral<"insight">;
      }, "strip", z.ZodTypeAny, {
        insight: string;
        type: "insight";
        generated_at_memory_index: number;
        justification: string;
        change_diff?: unknown;
      }, {
        insight: string;
        type: "insight";
        generated_at_memory_index: number;
        justification: string;
        change_diff?: unknown;
      }>, "many">>;
    }, z.ZodTypeAny, "passthrough">>, z.ZodObject<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"root_cause_analysis">;
      causes: z.ZodArray<z.ZodObject<{
        description: z.ZodString;
        id: z.ZodNumber;
        root_cause_reproduction: z.ZodArray<z.ZodObject<{
          code_snippet_and_analysis: z.ZodString;
          is_most_important_event: z.ZodBoolean;
          relevant_code_file: z.ZodNullable<z.ZodObject<{
            file_path: z.ZodString;
            repo_name: z.ZodString;
          }, "strip", z.ZodTypeAny, {
            file_path: string;
            repo_name: string;
          }, {
            file_path: string;
            repo_name: string;
          }>>;
          timeline_item_type: z.ZodString;
          title: z.ZodString;
        }, "strip", z.ZodTypeAny, {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }, {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }>, "many">;
      }, "strip", z.ZodTypeAny, {
        id: number;
        description: string;
        root_cause_reproduction: {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }[];
      }, {
        id: number;
        description: string;
        root_cause_reproduction: {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }[];
      }>, "many">;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"root_cause_analysis">;
      causes: z.ZodArray<z.ZodObject<{
        description: z.ZodString;
        id: z.ZodNumber;
        root_cause_reproduction: z.ZodArray<z.ZodObject<{
          code_snippet_and_analysis: z.ZodString;
          is_most_important_event: z.ZodBoolean;
          relevant_code_file: z.ZodNullable<z.ZodObject<{
            file_path: z.ZodString;
            repo_name: z.ZodString;
          }, "strip", z.ZodTypeAny, {
            file_path: string;
            repo_name: string;
          }, {
            file_path: string;
            repo_name: string;
          }>>;
          timeline_item_type: z.ZodString;
          title: z.ZodString;
        }, "strip", z.ZodTypeAny, {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }, {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }>, "many">;
      }, "strip", z.ZodTypeAny, {
        id: number;
        description: string;
        root_cause_reproduction: {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }[];
      }, {
        id: number;
        description: string;
        root_cause_reproduction: {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }[];
      }>, "many">;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"root_cause_analysis">;
      causes: z.ZodArray<z.ZodObject<{
        description: z.ZodString;
        id: z.ZodNumber;
        root_cause_reproduction: z.ZodArray<z.ZodObject<{
          code_snippet_and_analysis: z.ZodString;
          is_most_important_event: z.ZodBoolean;
          relevant_code_file: z.ZodNullable<z.ZodObject<{
            file_path: z.ZodString;
            repo_name: z.ZodString;
          }, "strip", z.ZodTypeAny, {
            file_path: string;
            repo_name: string;
          }, {
            file_path: string;
            repo_name: string;
          }>>;
          timeline_item_type: z.ZodString;
          title: z.ZodString;
        }, "strip", z.ZodTypeAny, {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }, {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }>, "many">;
      }, "strip", z.ZodTypeAny, {
        id: number;
        description: string;
        root_cause_reproduction: {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }[];
      }, {
        id: number;
        description: string;
        root_cause_reproduction: {
          title: string;
          code_snippet_and_analysis: string;
          is_most_important_event: boolean;
          relevant_code_file: {
            file_path: string;
            repo_name: string;
          } | null;
          timeline_item_type: string;
        }[];
      }>, "many">;
    }, z.ZodTypeAny, "passthrough">>, z.ZodObject<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"solution">;
      solution: z.ZodArray<z.ZodObject<{
        code_snippet_and_analysis: z.ZodNullable<z.ZodString>;
        is_active: z.ZodBoolean;
        is_most_important_event: z.ZodBoolean;
        relevant_code_file: z.ZodNull;
        timeline_item_type: z.ZodUnion<[z.ZodLiteral<"internal_code">, z.ZodLiteral<"repro_test">]>;
        title: z.ZodString;
      }, "strip", z.ZodTypeAny, {
        title: string;
        code_snippet_and_analysis: string | null;
        is_most_important_event: boolean;
        relevant_code_file: null;
        timeline_item_type: "internal_code" | "repro_test";
        is_active: boolean;
      }, {
        title: string;
        code_snippet_and_analysis: string | null;
        is_most_important_event: boolean;
        relevant_code_file: null;
        timeline_item_type: "internal_code" | "repro_test";
        is_active: boolean;
      }>, "many">;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"solution">;
      solution: z.ZodArray<z.ZodObject<{
        code_snippet_and_analysis: z.ZodNullable<z.ZodString>;
        is_active: z.ZodBoolean;
        is_most_important_event: z.ZodBoolean;
        relevant_code_file: z.ZodNull;
        timeline_item_type: z.ZodUnion<[z.ZodLiteral<"internal_code">, z.ZodLiteral<"repro_test">]>;
        title: z.ZodString;
      }, "strip", z.ZodTypeAny, {
        title: string;
        code_snippet_and_analysis: string | null;
        is_most_important_event: boolean;
        relevant_code_file: null;
        timeline_item_type: "internal_code" | "repro_test";
        is_active: boolean;
      }, {
        title: string;
        code_snippet_and_analysis: string | null;
        is_most_important_event: boolean;
        relevant_code_file: null;
        timeline_item_type: "internal_code" | "repro_test";
        is_active: boolean;
      }>, "many">;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    } & {
      type: z.ZodLiteral<"solution">;
      solution: z.ZodArray<z.ZodObject<{
        code_snippet_and_analysis: z.ZodNullable<z.ZodString>;
        is_active: z.ZodBoolean;
        is_most_important_event: z.ZodBoolean;
        relevant_code_file: z.ZodNull;
        timeline_item_type: z.ZodUnion<[z.ZodLiteral<"internal_code">, z.ZodLiteral<"repro_test">]>;
        title: z.ZodString;
      }, "strip", z.ZodTypeAny, {
        title: string;
        code_snippet_and_analysis: string | null;
        is_most_important_event: boolean;
        relevant_code_file: null;
        timeline_item_type: "internal_code" | "repro_test";
        is_active: boolean;
      }, {
        title: string;
        code_snippet_and_analysis: string | null;
        is_most_important_event: boolean;
        relevant_code_file: null;
        timeline_item_type: "internal_code" | "repro_test";
        is_active: boolean;
      }>, "many">;
    }, z.ZodTypeAny, "passthrough">>, z.ZodObject<{
      type: z.ZodString;
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
      type: z.ZodString;
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
      type: z.ZodString;
      key: z.ZodString;
      index: z.ZodNumber;
      status: z.ZodEnum<["PENDING", "PROCESSING", "IN_PROGRESS", "NEED_MORE_INFORMATION", "COMPLETED", "FAILED", "ERROR", "CANCELLED", "WAITING_FOR_USER_RESPONSE"]>;
      title: z.ZodString;
      output_stream: z.ZodNullable<z.ZodString>;
      progress: z.ZodArray<z.ZodObject<{
        data: z.ZodNullable<z.ZodUnknown>;
        message: z.ZodString;
        timestamp: z.ZodString;
        type: z.ZodEnum<["INFO", "WARNING", "ERROR"]>;
      }, "strip", z.ZodTypeAny, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }, {
        message: string;
        type: "INFO" | "ERROR" | "WARNING";
        timestamp: string;
        data?: unknown;
      }>, "many">;
    }, z.ZodTypeAny, "passthrough">>]>, "many">;
  }, z.ZodTypeAny, "passthrough"> | null;
}>;
declare const EventAttachmentSchema: z.ZodObject<{
  id: z.ZodString;
  name: z.ZodString;
  type: z.ZodString;
  size: z.ZodNumber;
  mimetype: z.ZodString;
  dateCreated: z.ZodString;
  sha1: z.ZodString;
  headers: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
}, "strip", z.ZodTypeAny, {
  name: string;
  type: string;
  id: string;
  dateCreated: string;
  size: number;
  mimetype: string;
  sha1: string;
  headers?: Record<string, string> | undefined;
}, {
  name: string;
  type: string;
  id: string;
  dateCreated: string;
  size: number;
  mimetype: string;
  sha1: string;
  headers?: Record<string, string> | undefined;
}>;
declare const EventAttachmentListSchema: z.ZodArray<z.ZodObject<{
  id: z.ZodString;
  name: z.ZodString;
  type: z.ZodString;
  size: z.ZodNumber;
  mimetype: z.ZodString;
  dateCreated: z.ZodString;
  sha1: z.ZodString;
  headers: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
}, "strip", z.ZodTypeAny, {
  name: string;
  type: string;
  id: string;
  dateCreated: string;
  size: number;
  mimetype: string;
  sha1: string;
  headers?: Record<string, string> | undefined;
}, {
  name: string;
  type: string;
  id: string;
  dateCreated: string;
  size: number;
  mimetype: string;
  sha1: string;
  headers?: Record<string, string> | undefined;
}>, "many">;
//# sourceMappingURL=schema.d.ts.map
//#endregion
export { ApiErrorSchema, AssignedToSchema, AutofixRunSchema, AutofixRunStateSchema, AutofixRunStepDefaultSchema, AutofixRunStepRootCauseAnalysisSchema, AutofixRunStepSchema, AutofixRunStepSolutionSchema, BreadcrumbSchema, BreadcrumbsEntrySchema, ClientKeyListSchema, ClientKeySchema, ErrorEntrySchema, ErrorEventSchema, ErrorsSearchResponseSchema, EventAttachmentListSchema, EventAttachmentSchema, EventSchema, EventsResponseSchema, ExceptionInterface, FrameInterface, IssueListSchema, IssueSchema, MessageEntrySchema, OrganizationListSchema, OrganizationSchema, ProjectListSchema, ProjectSchema, ReleaseListSchema, ReleaseSchema, RequestEntrySchema, SpansSearchResponseSchema, TagListSchema, TagSchema, TeamListSchema, TeamSchema, ThreadEntrySchema, ThreadsEntrySchema, TransactionEventSchema, UnknownEventSchema, UserRegionsSchema, UserSchema };
//# sourceMappingURL=schema-DWmx8lgm.d.ts.map