import "./promptDefinitions-DehpwJfn.js";
import { ServerContext } from "./types-C1Fih0eQ.js";
import { McpServer } from "@modelcontextprotocol/sdk/server/mcp.js";

//#region src/server.d.ts

/**
 * Configures an MCP server with all tools, prompts, resources, and telemetry.
 *
 * Transforms a bare MCP server instance into a fully-featured Sentry integration
 * with comprehensive observability, error handling, and handler registration.
 *
 * @example Basic Configuration
 * ```typescript
 * const server = new McpServer();
 * const context = {
 *   accessToken: process.env.SENTRY_TOKEN,
 *   host: "sentry.io",
 *   userId: "user-123",
 *   clientId: "cursor-ide"
 * };
 *
 * await configureServer({ server, context });
 * ```
 */
declare function configureServer({
  server,
  context,
  onToolComplete,
  onInitialized
}: {
  server: McpServer;
  context: ServerContext;
  onToolComplete?: () => void;
  onInitialized?: () => void | Promise<void>;
}): Promise<void>;
//# sourceMappingURL=server.d.ts.map
//#endregion
export { configureServer };
//# sourceMappingURL=server.d.ts.map