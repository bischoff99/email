{"version":3,"file":"schema-C0LznFvu.cjs","names":[],"sources":["../src/api-client/schema.ts"],"sourcesContent":["/**\n * Zod schemas for Sentry API response validation.\n *\n * This module contains comprehensive Zod schemas that validate and type-check\n * responses from Sentry's REST API. All schemas are designed to handle Sentry's\n * flexible data model where most fields can be null or optional.\n *\n * Key Design Principles:\n * - Use .passthrough() for objects that may contain additional fields\n * - Support both string and number IDs (Sentry's legacy/modern ID formats)\n * - Handle nullable fields gracefully throughout the schema hierarchy\n * - Use union types for polymorphic data (events, assignedTo, etc.)\n *\n * Schema Categories:\n * - **Core Resources**: Users, Organizations, Teams, Projects\n * - **Issue Management**: Issues, Events, Assignments\n * - **Release Management**: Releases, Commits, Deployments\n * - **Search & Discovery**: Tags, Error Search, Span Search\n * - **Integrations**: Client Keys (DSNs), Autofix\n *\n * @example Schema Usage\n * ```typescript\n * import { IssueListSchema } from \"./schema\";\n *\n * const response = await fetch(\"/api/0/organizations/my-org/issues/\");\n * const issues = IssueListSchema.parse(await response.json());\n * // TypeScript now knows the exact shape of issues\n * ```\n *\n * @example Error Handling\n * ```typescript\n * const { data, success, error } = ApiErrorSchema.safeParse(response);\n * if (success) {\n *   throw new ApiError(data.detail, statusCode);\n * }\n * ```\n */\nimport { z } from \"zod\";\n\n/**\n * Schema for Sentry API error responses.\n *\n * Uses .passthrough() to allow additional fields that may be present\n * in different error scenarios.\n */\nexport const ApiErrorSchema = z\n  .object({\n    detail: z.string(),\n  })\n  .passthrough();\n\nexport const UserSchema = z.object({\n  id: z.union([z.string(), z.number()]),\n  name: z.string().nullable(),\n  email: z.string(),\n});\n\nexport const UserRegionsSchema = z.object({\n  regions: z.array(\n    z.object({\n      name: z.string(),\n      url: z.string().url(),\n    }),\n  ),\n});\n\n/**\n * Schema for Sentry organization API responses.\n *\n * Handles organizations from both Sentry's Cloud Service and self-hosted installations.\n * The links object and regionUrl field are optional to support self-hosted Sentry\n * instances that may not include these fields or return empty values.\n */\nexport const OrganizationSchema = z.object({\n  id: z.union([z.string(), z.number()]),\n  slug: z.string(),\n  name: z.string(),\n  links: z\n    .object({\n      regionUrl: z\n        .string()\n        .refine(\n          (value) => !value || z.string().url().safeParse(value).success,\n          {\n            message:\n              \"Must be a valid URL or empty string (for self-hosted Sentry)\",\n          },\n        )\n        .optional(),\n      organizationUrl: z.string().url(),\n    })\n    .optional(),\n});\n\nexport const OrganizationListSchema = z.array(OrganizationSchema);\n\nexport const TeamSchema = z.object({\n  id: z.union([z.string(), z.number()]),\n  slug: z.string(),\n  name: z.string(),\n});\n\nexport const TeamListSchema = z.array(TeamSchema);\n\nexport const ProjectSchema = z.object({\n  id: z.union([z.string(), z.number()]),\n  slug: z.string(),\n  name: z.string(),\n  platform: z.string().nullable().optional(),\n});\n\nexport const ProjectListSchema = z.array(ProjectSchema);\n\nexport const ClientKeySchema = z.object({\n  id: z.union([z.string(), z.number()]),\n  name: z.string(),\n  dsn: z.object({\n    public: z.string(),\n  }),\n  isActive: z.boolean(),\n  dateCreated: z.string().datetime(),\n});\n\nexport const ClientKeyListSchema = z.array(ClientKeySchema);\n\nexport const ReleaseSchema = z.object({\n  id: z.union([z.string(), z.number()]),\n  version: z.string(),\n  shortVersion: z.string(),\n  dateCreated: z.string().datetime(),\n  dateReleased: z.string().datetime().nullable(),\n  firstEvent: z.string().datetime().nullable(),\n  lastEvent: z.string().datetime().nullable(),\n  newGroups: z.number(),\n  lastCommit: z\n    .object({\n      id: z.union([z.string(), z.number()]),\n      message: z.string(),\n      dateCreated: z.string().datetime(),\n      author: z.object({\n        name: z.string(),\n        email: z.string(),\n      }),\n    })\n    .nullable(),\n  lastDeploy: z\n    .object({\n      id: z.union([z.string(), z.number()]),\n      environment: z.string(),\n      dateStarted: z.string().datetime().nullable(),\n      dateFinished: z.string().datetime().nullable(),\n    })\n    .nullable(),\n  projects: z.array(ProjectSchema),\n});\n\nexport const ReleaseListSchema = z.array(ReleaseSchema);\n\nexport const TagSchema = z.object({\n  key: z.string(),\n  name: z.string(),\n  totalValues: z.number(),\n});\n\nexport const TagListSchema = z.array(TagSchema);\n\n// Schema for assignedTo field - can be a user object, team object, string, or null\nexport const AssignedToSchema = z.union([\n  z.null(),\n  z.string(), // username or actor ID\n  z\n    .object({\n      type: z.enum([\"user\", \"team\"]),\n      id: z.union([z.string(), z.number()]),\n      name: z.string(),\n      email: z.string().optional(), // only for users\n    })\n    .passthrough(), // Allow additional fields we might not know about\n]);\n\nexport const IssueSchema = z.object({\n  id: z.union([z.string(), z.number()]),\n  shortId: z.string(),\n  title: z.string(),\n  firstSeen: z.string().datetime(),\n  lastSeen: z.string().datetime(),\n  count: z.union([z.string(), z.number()]),\n  userCount: z.union([z.string(), z.number()]),\n  permalink: z.string().url(),\n  project: ProjectSchema,\n  platform: z.string().nullable().optional(),\n  status: z.string(),\n  culprit: z.string(),\n  type: z.union([z.literal(\"error\"), z.literal(\"transaction\"), z.unknown()]),\n  assignedTo: AssignedToSchema.optional(),\n});\n\nexport const IssueListSchema = z.array(IssueSchema);\n\nexport const FrameInterface = z\n  .object({\n    filename: z.string().nullable(),\n    function: z.string().nullable(),\n    lineNo: z.number().nullable(),\n    colNo: z.number().nullable(),\n    absPath: z.string().nullable(),\n    module: z.string().nullable(),\n    // lineno, source code\n    context: z.array(z.tuple([z.number(), z.string()])),\n    inApp: z.boolean().optional(),\n    vars: z.record(z.string(), z.unknown()).optional(),\n  })\n  .partial();\n\n// XXX: Sentry's schema generally speaking is \"assume all user input is missing\"\n// so we need to handle effectively every field being optional or nullable.\nexport const ExceptionInterface = z\n  .object({\n    mechanism: z\n      .object({\n        type: z.string().nullable(),\n        handled: z.boolean().nullable(),\n      })\n      .partial(),\n    type: z.string().nullable(),\n    value: z.string().nullable(),\n    stacktrace: z.object({\n      frames: z.array(FrameInterface),\n    }),\n  })\n  .partial();\n\nexport const ErrorEntrySchema = z\n  .object({\n    // XXX: Sentry can return either of these. Not sure why we never normalized it.\n    values: z.array(ExceptionInterface.optional()),\n    value: ExceptionInterface.nullable().optional(),\n  })\n  .partial();\n\nexport const RequestEntrySchema = z\n  .object({\n    method: z.string().nullable(),\n    url: z.string().url().nullable(),\n    // TODO:\n    // query: z.array(z.tuple([z.string(), z.string()])).nullable(),\n    // data: z.unknown().nullable(),\n    // headers: z.array(z.tuple([z.string(), z.string()])).nullable(),\n  })\n  .partial();\n\nexport const MessageEntrySchema = z\n  .object({\n    formatted: z.string().nullable(),\n    message: z.string().nullable(),\n    params: z.array(z.unknown()).optional(),\n  })\n  .partial();\n\nexport const ThreadEntrySchema = z\n  .object({\n    id: z.number().nullable(),\n    name: z.string().nullable(),\n    current: z.boolean().nullable(),\n    crashed: z.boolean().nullable(),\n    state: z.string().nullable(),\n    stacktrace: z\n      .object({\n        frames: z.array(FrameInterface),\n      })\n      .nullable(),\n  })\n  .partial();\n\nexport const ThreadsEntrySchema = z\n  .object({\n    values: z.array(ThreadEntrySchema),\n  })\n  .partial();\n\nexport const BreadcrumbSchema = z\n  .object({\n    timestamp: z.string().nullable(),\n    type: z.string().nullable(),\n    category: z.string().nullable(),\n    level: z.string().nullable(),\n    message: z.string().nullable(),\n    data: z.record(z.unknown()).nullable(),\n  })\n  .partial();\n\nexport const BreadcrumbsEntrySchema = z\n  .object({\n    values: z.array(BreadcrumbSchema),\n  })\n  .partial();\n\nconst BaseEventSchema = z.object({\n  id: z.string(),\n  title: z.string(),\n  message: z.string().nullable(),\n  platform: z.string().nullable().optional(),\n  type: z.unknown(),\n  entries: z.array(\n    z.union([\n      z.object({\n        type: z.literal(\"exception\"),\n        data: ErrorEntrySchema,\n      }),\n      z.object({\n        type: z.literal(\"message\"),\n        data: MessageEntrySchema,\n      }),\n      z.object({\n        type: z.literal(\"threads\"),\n        data: ThreadsEntrySchema,\n      }),\n      z.object({\n        type: z.literal(\"request\"),\n        data: RequestEntrySchema,\n      }),\n      z.object({\n        type: z.literal(\"breadcrumbs\"),\n        data: BreadcrumbsEntrySchema,\n      }),\n      z.object({\n        type: z.literal(\"spans\"),\n        data: z.unknown(),\n      }),\n      z.object({\n        type: z.string(),\n        data: z.unknown(),\n      }),\n    ]),\n  ),\n  contexts: z\n    .record(\n      z.string(),\n      z\n        .object({\n          type: z.union([\n            z.literal(\"default\"),\n            z.literal(\"runtime\"),\n            z.literal(\"os\"),\n            z.literal(\"trace\"),\n            z.unknown(),\n          ]),\n        })\n        .passthrough(),\n    )\n    .optional(),\n});\n\nexport const ErrorEventSchema = BaseEventSchema.omit({\n  type: true,\n}).extend({\n  type: z.literal(\"error\"),\n  culprit: z.string().nullable(),\n  dateCreated: z.string().datetime(),\n});\n\nexport const TransactionEventSchema = BaseEventSchema.omit({\n  type: true,\n}).extend({\n  type: z.literal(\"transaction\"),\n  occurrence: z.object({\n    issueTitle: z.string(),\n    culprit: z.string().nullable(),\n  }),\n});\n\nexport const UnknownEventSchema = BaseEventSchema.omit({\n  type: true,\n}).extend({\n  type: z.unknown(),\n});\n\n// XXX: This API response is kind of a disaster. We are not propagating the appropriate\n// columns and it makes this really hard to work with. Errors and Transaction-based issues\n// are completely different, for example.\nexport const EventSchema = z.union([\n  ErrorEventSchema,\n  TransactionEventSchema,\n  UnknownEventSchema,\n]);\n\nexport const EventsResponseSchema = z.object({\n  data: z.array(z.unknown()),\n  meta: z\n    .object({\n      fields: z.record(z.string(), z.string()),\n    })\n    .passthrough(),\n});\n\n// https://us.sentry.io/api/0/organizations/sentry/events/?dataset=errors&field=issue&field=title&field=project&field=timestamp&field=trace&per_page=5&query=event.type%3Aerror&referrer=sentry-mcp&sort=-timestamp&statsPeriod=1w\nexport const ErrorsSearchResponseSchema = EventsResponseSchema.extend({\n  data: z.array(\n    z.object({\n      issue: z.string(),\n      \"issue.id\": z.union([z.string(), z.number()]),\n      project: z.string(),\n      title: z.string(),\n      \"count()\": z.number(),\n      \"last_seen()\": z.string(),\n    }),\n  ),\n});\n\nexport const SpansSearchResponseSchema = EventsResponseSchema.extend({\n  data: z.array(\n    z.object({\n      id: z.string(),\n      trace: z.string(),\n      \"span.op\": z.string(),\n      \"span.description\": z.string(),\n      \"span.duration\": z.number(),\n      transaction: z.string(),\n      project: z.string(),\n      timestamp: z.string(),\n    }),\n  ),\n});\n\nexport const AutofixRunSchema = z\n  .object({\n    run_id: z.union([z.string(), z.number()]),\n  })\n  .passthrough();\n\nconst AutofixStatusSchema = z.enum([\n  \"PENDING\",\n  \"PROCESSING\",\n  \"IN_PROGRESS\",\n  \"NEED_MORE_INFORMATION\",\n  \"COMPLETED\",\n  \"FAILED\",\n  \"ERROR\",\n  \"CANCELLED\",\n  \"WAITING_FOR_USER_RESPONSE\",\n]);\n\nconst AutofixRunStepBaseSchema = z.object({\n  type: z.string(),\n  key: z.string(),\n  index: z.number(),\n  status: AutofixStatusSchema,\n  title: z.string(),\n  output_stream: z.string().nullable(),\n  progress: z.array(\n    z.object({\n      data: z.unknown().nullable(),\n      message: z.string(),\n      timestamp: z.string(),\n      type: z.enum([\"INFO\", \"WARNING\", \"ERROR\"]),\n    }),\n  ),\n});\n\nexport const AutofixRunStepDefaultSchema = AutofixRunStepBaseSchema.extend({\n  type: z.literal(\"default\"),\n  insights: z\n    .array(\n      z.object({\n        change_diff: z.unknown().nullable(),\n        generated_at_memory_index: z.number(),\n        insight: z.string(),\n        justification: z.string(),\n        type: z.literal(\"insight\"),\n      }),\n    )\n    .nullable(),\n}).passthrough();\n\nexport const AutofixRunStepRootCauseAnalysisSchema =\n  AutofixRunStepBaseSchema.extend({\n    type: z.literal(\"root_cause_analysis\"),\n    causes: z.array(\n      z.object({\n        description: z.string(),\n        id: z.number(),\n        root_cause_reproduction: z.array(\n          z.object({\n            code_snippet_and_analysis: z.string(),\n            is_most_important_event: z.boolean(),\n            relevant_code_file: z\n              .object({\n                file_path: z.string(),\n                repo_name: z.string(),\n              })\n              .nullable(),\n            timeline_item_type: z.string(),\n            title: z.string(),\n          }),\n        ),\n      }),\n    ),\n  }).passthrough();\n\nexport const AutofixRunStepSolutionSchema = AutofixRunStepBaseSchema.extend({\n  type: z.literal(\"solution\"),\n  solution: z.array(\n    z.object({\n      code_snippet_and_analysis: z.string().nullable(),\n      is_active: z.boolean(),\n      is_most_important_event: z.boolean(),\n      relevant_code_file: z.null(),\n      timeline_item_type: z.union([\n        z.literal(\"internal_code\"),\n        z.literal(\"repro_test\"),\n      ]),\n      title: z.string(),\n    }),\n  ),\n}).passthrough();\n\nexport const AutofixRunStepSchema = z.union([\n  AutofixRunStepDefaultSchema,\n  AutofixRunStepRootCauseAnalysisSchema,\n  AutofixRunStepSolutionSchema,\n  AutofixRunStepBaseSchema.passthrough(),\n]);\n\nexport const AutofixRunStateSchema = z.object({\n  autofix: z\n    .object({\n      run_id: z.number(),\n      request: z.unknown(),\n      updated_at: z.string(),\n      status: AutofixStatusSchema,\n      steps: z.array(AutofixRunStepSchema),\n    })\n    .passthrough()\n    .nullable(),\n});\n\nexport const EventAttachmentSchema = z.object({\n  id: z.string(),\n  name: z.string(),\n  type: z.string(),\n  size: z.number(),\n  mimetype: z.string(),\n  dateCreated: z.string().datetime(),\n  sha1: z.string(),\n  headers: z.record(z.string(), z.string()).optional(),\n});\n\nexport const EventAttachmentListSchema = z.array(EventAttachmentSchema);\n"],"mappings":"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"}