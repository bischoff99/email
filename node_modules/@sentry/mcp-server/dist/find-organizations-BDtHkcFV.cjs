const require_defineTool = require('./defineTool-lWNTzWl_.cjs');
const require_api_utils = require('./api-utils-DFWUfQ83.cjs');

//#region src/tools/find-organizations.ts
var find_organizations_default = require_defineTool.defineTool({
	name: "find_organizations",
	description: [
		"Find organizations that the user has access to in Sentry.",
		"",
		"Use this tool when you need to:",
		"- View all organizations in Sentry",
		"- Find an organization's slug to aid other tool requests"
	].join("\n"),
	inputSchema: {},
	async handler(params, context) {
		const apiService = require_api_utils.apiServiceFromContext(context);
		const organizations = await require_api_utils.withApiErrorHandling(() => apiService.listOrganizations(), {});
		let output = "# Organizations\n\n";
		if (organizations.length === 0) {
			output += "You don't appear to be a member of any organizations.\n";
			return output;
		}
		output += organizations.map((org) => [
			`## **${org.slug}**`,
			"",
			`**Web URL:** ${org.links?.organizationUrl || "Not available"}`,
			`**Region URL:** ${org.links?.regionUrl || ""}`
		].join("\n")).join("\n\n");
		output += "\n\n# Using this information\n\n";
		output += `- The organization's name is the identifier for the organization, and is used in many tools for \`organizationSlug\`.\n`;
		const hasValidRegionUrls = organizations.some((org) => org.links?.regionUrl?.trim());
		if (hasValidRegionUrls) {
			output += `- If a tool supports passing in the \`regionUrl\`, you MUST pass in the correct value shown above for each organization.\n`;
			output += `- For Sentry's Cloud Service (sentry.io), always use the regionUrl to ensure requests go to the correct region.\n`;
		} else {
			output += `- This appears to be a self-hosted Sentry installation. You can omit the \`regionUrl\` parameter when using other tools.\n`;
			output += `- For self-hosted Sentry, the regionUrl is typically empty and not needed for API calls.\n`;
		}
		return output;
	}
});

//#endregion
Object.defineProperty(exports, 'find_organizations_default', {
  enumerable: true,
  get: function () {
    return find_organizations_default;
  }
});
//# sourceMappingURL=find-organizations-BDtHkcFV.cjs.map