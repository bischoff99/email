import { SentryApiService } from "./client-DLkUGS7r.js";
import { z } from "zod";
import * as ai173 from "ai";

//#region src/tools/search-events/utils.d.ts
type FlexibleEventData = Record<string, unknown>;
declare function getStringValue(event: FlexibleEventData, key: string, defaultValue?: string): string;
declare function getNumberValue(event: FlexibleEventData, key: string): number | undefined;
declare function isAggregateQuery(fields: string[]): boolean;
declare function fetchCustomAttributes(apiService: SentryApiService, organizationSlug: string, dataset: "errors" | "logs" | "spans", projectId?: string, timeParams?: {
  statsPeriod?: string;
  start?: string;
  end?: string;
}): Promise<{
  attributes: Record<string, string>;
  fieldTypes: Record<string, "string" | "number">;
}>;
/**
 * Create a tool for the agent to query available attributes by dataset
 */
declare function createDatasetAttributesTool(apiService: SentryApiService, organizationSlug: string, projectId?: string): ai173.Tool<z.ZodObject<{
  dataset: z.ZodEnum<["spans", "errors", "logs"]>;
}, "strip", z.ZodTypeAny, {
  dataset: "spans" | "errors" | "logs";
}, {
  dataset: "spans" | "errors" | "logs";
}>, string> & {
  execute: (args: {
    dataset: "spans" | "errors" | "logs";
  }, options: ai173.ToolExecutionOptions) => PromiseLike<string>;
};
//# sourceMappingURL=utils.d.ts.map
//#endregion
export { FlexibleEventData, createDatasetAttributesTool, fetchCustomAttributes, getNumberValue, getStringValue, isAggregateQuery };
//# sourceMappingURL=utils-CzV_Tz2C.d.ts.map