/**
* Copyright (c) 2025 Bytedance, Inc. and its affiliates.
* SPDX-License-Identifier: Apache-2.0
*/
"use strict";
var __webpack_require__ = {};
(()=>{
    __webpack_require__.d = (exports1, definition)=>{
        for(var key in definition)if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports1, key)) Object.defineProperty(exports1, key, {
            enumerable: true,
            get: definition[key]
        });
    };
})();
(()=>{
    __webpack_require__.o = (obj, prop)=>Object.prototype.hasOwnProperty.call(obj, prop);
})();
(()=>{
    __webpack_require__.r = (exports1)=>{
        if ('undefined' != typeof Symbol && Symbol.toStringTag) Object.defineProperty(exports1, Symbol.toStringTag, {
            value: 'Module'
        });
        Object.defineProperty(exports1, '__esModule', {
            value: true
        });
    };
})();
var __webpack_exports__ = {};
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
    extractWithReadability: ()=>extractWithReadability,
    extractContent: ()=>extractContent,
    extractWithDefuddle: ()=>extractWithDefuddle
});
const node_namespaceObject = require("defuddle/node");
const external_readability_script_js_namespaceObject = require("./readability-script.js");
const external_to_markdown_js_namespaceObject = require("./to-markdown.js");
const extractWithReadability = async (page, options = {})=>{
    const extractionResult = await page.evaluate((readabilityScript)=>{
        const Readability = new Function('module', `${readabilityScript}\nreturn module.exports`)({});
        const documentClone = document.cloneNode(true);
        documentClone.querySelectorAll("script,noscript,style,link,svg,img,video,iframe,canvas,.reflist").forEach((el)=>el.remove());
        const article = new Readability(documentClone).parse();
        const content = (null == article ? void 0 : article.content) || '';
        const title = document.title;
        return {
            content,
            title: (null == article ? void 0 : article.title) || title
        };
    }, external_readability_script_js_namespaceObject.READABILITY_SCRIPT);
    return (null == options ? void 0 : options.markdown) ? {
        title: extractionResult.title,
        content: (0, external_to_markdown_js_namespaceObject.toMarkdown)(extractionResult.content)
    } : extractionResult;
};
const extractWithDefuddle = async (html, url, options)=>{
    const { title, content } = await (0, node_namespaceObject.Defuddle)(html, url, options);
    return {
        title,
        content
    };
};
const extractContent = async (page)=>{
    const pageSourceHTML = await page.content();
    try {
        return await extractWithDefuddle(pageSourceHTML, page.url(), {
            markdown: true
        });
    } catch (e) {
        return await extractWithReadability(page, {
            markdown: true
        });
    }
};
exports.extractContent = __webpack_exports__.extractContent;
exports.extractWithDefuddle = __webpack_exports__.extractWithDefuddle;
exports.extractWithReadability = __webpack_exports__.extractWithReadability;
for(var __webpack_i__ in __webpack_exports__)if (-1 === [
    "extractContent",
    "extractWithDefuddle",
    "extractWithReadability"
].indexOf(__webpack_i__)) exports[__webpack_i__] = __webpack_exports__[__webpack_i__];
Object.defineProperty(exports, '__esModule', {
    value: true
});

//# sourceMappingURL=extract-content.js.map